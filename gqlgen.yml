# schema tells gqlgen where the GraphQL schema is located.
schema:
  - graphql/*.graphql

exec:
  layout: follow-schema
  dir: graphql/generated
  package: generated

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: graphql
  package: graphql
  filename_template: "{name}.resolvers.go"

model:
  filename: graphql/model/models_gen.go
  package: model

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.

# autobind tells gqngen to search for any type names in the GraphQL schema in the
# provided package. If they match it will use them, otherwise it will generate new.
autobind:
  - cscd-bds/store/ent
  - cscd-bds/store/ent/area
  - cscd-bds/store/ent/city
  - cscd-bds/store/ent/competitor
  - cscd-bds/store/ent/country
  - cscd-bds/store/ent/customer
  - cscd-bds/store/ent/customerprofile
  - cscd-bds/store/ent/district
  - cscd-bds/store/ent/operation
  - cscd-bds/store/ent/plot
  # - cscd-bds/store/ent/potentialtender
  - cscd-bds/store/ent/project
  - cscd-bds/store/ent/province
  - cscd-bds/store/ent/tender
  - cscd-bds/store/ent/tendercompetitor
  - cscd-bds/store/ent/tenderprofile
  - cscd-bds/store/ent/user
  - cscd-bds/store/ent/visitrecord

# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model:
      # - github.com/99designs/gqlgen/graphql.ID
      # - github.com/rs/xid/id
      - "cscd-bds/store/ent/schema/xid.ID"
  UUID:
    model:
      - github.com/99designs/gqlgen/graphql.UUID
  Node:
    model:
      - cscd-bds/store/ent.Noder
  # ZhongHaiTongUser:
  #   model:
  #     - cscd-bds/store/ent/schema.ZhongHaiTongUser
