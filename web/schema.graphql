schema {
  query: Query
  mutation: Mutation
}

directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @goModel(forceGenerate: Boolean, model: String, models: [String!]) on ENUM | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

type Area implements Node {
  center: GeoJson
  code: String!
  createdAt: Time!
  customers: [Customer!]
  id: ID!
  name: String!
  provinces: [Province!]
  sales: [User!]
  tenders: [Tender!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type AreaConnection {
  """A list of edges."""
  edges: [AreaEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type AreaEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Area
}

"""
AreaWhereInput is used for filtering Area objects.
Input was generated by ent.
"""
input AreaWhereInput {
  and: [AreaWhereInput!]
  """code field predicates"""
  code: String
  codeContains: String
  codeContainsFold: String
  codeEqualFold: String
  codeGT: String
  codeGTE: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIn: [String!]
  codeLT: String
  codeLTE: String
  codeNEQ: String
  codeNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """customers edge predicates"""
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """provinces edge predicates"""
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
  """sales edge predicates"""
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: AreaWhereInput
  or: [AreaWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type City implements Node {
  adcode: Int!
  center: GeoJson
  createdAt: Time!
  districts: [District!]
  id: ID!
  name: String!
  provCode: Int!
  province: Province!
  provinceID: ID!
  tenders: [Tender!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type CityConnection {
  """A list of edges."""
  edges: [CityEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CityEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: City
}

"""
CityWhereInput is used for filtering City objects.
Input was generated by ent.
"""
input CityWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [CityWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """districts edge predicates"""
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CityWhereInput
  or: [CityWhereInput!]
  """prov_code field predicates"""
  provCode: Int
  provCodeGT: Int
  provCodeGTE: Int
  provCodeIn: [Int!]
  provCodeLT: Int
  provCodeLTE: Int
  provCodeNEQ: Int
  provCodeNotIn: [Int!]
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Country implements Node {
  adcode: Int!
  center: GeoJson
  createdAt: Time!
  id: ID!
  name: String!
  provinces: [Province!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type CountryConnection {
  """A list of edges."""
  edges: [CountryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CountryEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Country
}

"""
CountryWhereInput is used for filtering Country objects.
Input was generated by ent.
"""
input CountryWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [CountryWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """provinces edge predicates"""
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CountryWhereInput
  or: [CountryWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

"""
CreateAreaInput is used for create Area object.
Input was generated by ent.
"""
input CreateAreaInput {
  code: String!
  createdAt: Time
  customerIDs: [ID!]
  name: String!
  provinceIDs: [ID!]
  saleIDs: [ID!]
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateCityInput is used for create City object.
Input was generated by ent.
"""
input CreateCityInput {
  adcode: Int!
  createdAt: Time
  districtIDs: [ID!]
  name: String!
  provCode: Int!
  provinceID: ID!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateCountryInput is used for create Country object.
Input was generated by ent.
"""
input CreateCountryInput {
  adcode: Int!
  createdAt: Time
  name: String!
  provinceIDs: [ID!]
  updatedAt: Time
}

"""
CreateCustomerInput is used for create Customer object.
Input was generated by ent.
"""
input CreateCustomerInput {
  areaID: ID!
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time
  createdByID: ID!
  industry: Int!
  name: String!
  ownerType: Int
  salesID: ID
  size: Int
  tenderIDs: [ID!]
  updatedAt: Time
  visitRecordIDs: [ID!]
}

"""
CreateDistrictInput is used for create District object.
Input was generated by ent.
"""
input CreateDistrictInput {
  adcode: Int!
  cityCode: Int!
  cityID: ID
  createdAt: Time
  name: String!
  provCode: Int!
  provinceID: ID!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateProvinceInput is used for create Province object.
Input was generated by ent.
"""
input CreateProvinceInput {
  adcode: Int!
  areaID: ID
  cityIDs: [ID!]
  countryID: ID!
  createdAt: Time
  districtIDs: [ID!]
  name: String!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateTenderInput is used for create Tender object.
Input was generated by ent.
"""
input CreateTenderInput {
  address: String
  areaID: ID!
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  cityID: ID
  code: String!
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time
  createdByID: ID!
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  customerID: ID!
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  discoveryDate: Time!
  districtID: ID!
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finderID: ID!
  followingSaleIDs: [ID!]
  fullAddress: String
  images: [String!]
  keyProject: Boolean
  managementCompany: String
  name: String!
  ownerSituations: String
  prepareToBid: Boolean
  projectCode: String
  projectDefinition: String
  projectType: String
  provinceID: ID!
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time
  visitRecordIDs: [ID!]
}

"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  areaIDs: [ID!]
  avatarURL: String!
  createdAt: Time
  customerIDs: [ID!]
  disabled: Boolean
  email: String!
  isAdmin: Boolean
  isLeader: Boolean
  leaderID: ID
  name: String!
  openID: String!
  teamMemberIDs: [ID!]
  tenderIDs: [ID!]
  updatedAt: Time
  username: String!
  visitRecordIDs: [ID!]
}

"""
CreateVisitRecordInput is used for create VisitRecord object.
Input was generated by ent.
"""
input CreateVisitRecordInput {
  commContent: String!
  commPeople: String!
  createdAt: Time
  customerID: ID
  date: Time!
  followupbyIDs: [ID!]
  nextStep: String
  tenderID: ID
  updatedAt: Time
  visitType: Int
}

"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor

type Customer implements Node {
  area: Area!
  areaID: ID!
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time!
  createdBy: User!
  createdByID: ID!
  id: ID!
  industry: Int!
  name: String!
  ownerType: Int
  sales: User
  salesID: ID
  size: Int
  tenders: [Tender!]
  updatedAt: Time!
  visitRecords: [VisitRecord!]
}

"""A connection to a list of items."""
type CustomerConnection {
  """A list of edges."""
  edges: [CustomerEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CustomerEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Customer
}

"""
CustomerWhereInput is used for filtering Customer objects.
Input was generated by ent.
"""
input CustomerWhereInput {
  and: [CustomerWhereInput!]
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  """contact_person field predicates"""
  contactPerson: String
  contactPersonContains: String
  contactPersonContainsFold: String
  """contact_person_email field predicates"""
  contactPersonEmail: String
  contactPersonEmailContains: String
  contactPersonEmailContainsFold: String
  contactPersonEmailEqualFold: String
  contactPersonEmailGT: String
  contactPersonEmailGTE: String
  contactPersonEmailHasPrefix: String
  contactPersonEmailHasSuffix: String
  contactPersonEmailIn: [String!]
  contactPersonEmailIsNil: Boolean
  contactPersonEmailLT: String
  contactPersonEmailLTE: String
  contactPersonEmailNEQ: String
  contactPersonEmailNotIn: [String!]
  contactPersonEmailNotNil: Boolean
  contactPersonEqualFold: String
  contactPersonGT: String
  contactPersonGTE: String
  contactPersonHasPrefix: String
  contactPersonHasSuffix: String
  contactPersonIn: [String!]
  contactPersonIsNil: Boolean
  contactPersonLT: String
  contactPersonLTE: String
  contactPersonNEQ: String
  contactPersonNotIn: [String!]
  contactPersonNotNil: Boolean
  """contact_person_phone field predicates"""
  contactPersonPhone: String
  contactPersonPhoneContains: String
  contactPersonPhoneContainsFold: String
  contactPersonPhoneEqualFold: String
  contactPersonPhoneGT: String
  contactPersonPhoneGTE: String
  contactPersonPhoneHasPrefix: String
  contactPersonPhoneHasSuffix: String
  contactPersonPhoneIn: [String!]
  contactPersonPhoneIsNil: Boolean
  contactPersonPhoneLT: String
  contactPersonPhoneLTE: String
  contactPersonPhoneNEQ: String
  contactPersonPhoneNotIn: [String!]
  contactPersonPhoneNotNil: Boolean
  """contact_person_position field predicates"""
  contactPersonPosition: String
  contactPersonPositionContains: String
  contactPersonPositionContainsFold: String
  contactPersonPositionEqualFold: String
  contactPersonPositionGT: String
  contactPersonPositionGTE: String
  contactPersonPositionHasPrefix: String
  contactPersonPositionHasSuffix: String
  contactPersonPositionIn: [String!]
  contactPersonPositionIsNil: Boolean
  contactPersonPositionLT: String
  contactPersonPositionLTE: String
  contactPersonPositionNEQ: String
  contactPersonPositionNotIn: [String!]
  contactPersonPositionNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """sales edge predicates"""
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """industry field predicates"""
  industry: Int
  industryGT: Int
  industryGTE: Int
  industryIn: [Int!]
  industryLT: Int
  industryLTE: Int
  industryNEQ: Int
  industryNotIn: [Int!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CustomerWhereInput
  or: [CustomerWhereInput!]
  """owner_type field predicates"""
  ownerType: Int
  ownerTypeGT: Int
  ownerTypeGTE: Int
  ownerTypeIn: [Int!]
  ownerTypeIsNil: Boolean
  ownerTypeLT: Int
  ownerTypeLTE: Int
  ownerTypeNEQ: Int
  ownerTypeNotIn: [Int!]
  ownerTypeNotNil: Boolean
  """sales_id field predicates"""
  salesID: ID
  salesIDContains: ID
  salesIDContainsFold: ID
  salesIDEqualFold: ID
  salesIDGT: ID
  salesIDGTE: ID
  salesIDHasPrefix: ID
  salesIDHasSuffix: ID
  salesIDIn: [ID!]
  salesIDIsNil: Boolean
  salesIDLT: ID
  salesIDLTE: ID
  salesIDNEQ: ID
  salesIDNotIn: [ID!]
  salesIDNotNil: Boolean
  """size field predicates"""
  size: Int
  sizeGT: Int
  sizeGTE: Int
  sizeIn: [Int!]
  sizeIsNil: Boolean
  sizeLT: Int
  sizeLTE: Int
  sizeNEQ: Int
  sizeNotIn: [Int!]
  sizeNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type District implements Node {
  adcode: Int!
  center: GeoJson
  city: City
  cityCode: Int!
  cityID: ID
  createdAt: Time!
  id: ID!
  name: String!
  provCode: Int!
  province: Province!
  provinceID: ID!
  tenders: [Tender!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type DistrictConnection {
  """A list of edges."""
  edges: [DistrictEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type DistrictEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: District
}

"""
DistrictWhereInput is used for filtering District objects.
Input was generated by ent.
"""
input DistrictWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [DistrictWhereInput!]
  """city_code field predicates"""
  cityCode: Int
  cityCodeGT: Int
  cityCodeGTE: Int
  cityCodeIn: [Int!]
  cityCodeLT: Int
  cityCodeLTE: Int
  cityCodeNEQ: Int
  cityCodeNotIn: [Int!]
  """city_id field predicates"""
  cityID: ID
  cityIDContains: ID
  cityIDContainsFold: ID
  cityIDEqualFold: ID
  cityIDGT: ID
  cityIDGTE: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIn: [ID!]
  cityIDIsNil: Boolean
  cityIDLT: ID
  cityIDLTE: ID
  cityIDNEQ: ID
  cityIDNotIn: [ID!]
  cityIDNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """city edge predicates"""
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: DistrictWhereInput
  or: [DistrictWhereInput!]
  """prov_code field predicates"""
  provCode: Int
  provCodeGT: Int
  provCodeGTE: Int
  provCodeIn: [Int!]
  provCodeLT: Int
  provCodeLTE: Int
  provCodeNEQ: Int
  provCodeNotIn: [Int!]
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type GeoJson {
  coordinates: [Float!]!
  type: String!
}

type Mutation {
  createArea(input: CreateAreaInput!): Area!
  createTender(geoBounds: [[Float!]!], input: CreateTenderInput!): Tender!
  createUser(input: CreateUserInput!): User!
  updateArea(id: ID!, input: UpdateAreaInput!): Area!
  updateTender(geoBounds: [[Float!]!], id: ID!, input: UpdateTenderInput!): Tender!
  updateUser(id: ID!, input: UpdateUserInput!): User!
}

"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "cscd-bds/store/ent.Noder") {
  """The id of the object."""
  id: ID!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}

"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
}

type Province implements Node {
  adcode: Int!
  area: Area
  areaID: ID
  center: GeoJson
  cities: [City!]
  country: Country!
  countryID: ID!
  createdAt: Time!
  districts: [District!]
  id: ID!
  name: String!
  tenders: [Tender!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type ProvinceConnection {
  """A list of edges."""
  edges: [ProvinceEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type ProvinceEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Province
}

"""
ProvinceWhereInput is used for filtering Province objects.
Input was generated by ent.
"""
input ProvinceWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [ProvinceWhereInput!]
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDIsNil: Boolean
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  areaIDNotNil: Boolean
  """country_id field predicates"""
  countryID: ID
  countryIDContains: ID
  countryIDContainsFold: ID
  countryIDEqualFold: ID
  countryIDGT: ID
  countryIDGTE: ID
  countryIDHasPrefix: ID
  countryIDHasSuffix: ID
  countryIDIn: [ID!]
  countryIDLT: ID
  countryIDLTE: ID
  countryIDNEQ: ID
  countryIDNotIn: [ID!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """cities edge predicates"""
  hasCities: Boolean
  hasCitiesWith: [CityWhereInput!]
  """country edge predicates"""
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
  """districts edge predicates"""
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: ProvinceWhereInput
  or: [ProvinceWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Query {
  areas(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Areas returned from the connection."""
    where: AreaWhereInput
  ): AreaConnection!
  cities(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Cities returned from the connection."""
    where: CityWhereInput
  ): CityConnection!
  countries(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Countries returned from the connection."""
    where: CountryWhereInput
  ): CountryConnection!
  customers(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Customers returned from the connection."""
    where: CustomerWhereInput
  ): CustomerConnection!
  districts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Districts returned from the connection."""
    where: DistrictWhereInput
  ): DistrictConnection!
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  provinces(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Provinces returned from the connection."""
    where: ProvinceWhereInput
  ): ProvinceConnection!
  session: Session!
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
  visitRecords(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Filtering options for VisitRecords returned from the connection."""
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}

type Session {
  avatarUrl: String!
  email: String!
  isAdmin: Boolean!
  isLeader: Boolean!
  name: String!
  userId: String!
  username: String!
}

type Tender implements Node {
  address: String
  area: Area!
  areaID: ID!
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  city: City
  cityID: ID
  code: String!
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time!
  createdBy: User!
  createdByID: ID!
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  customer: Customer!
  customerID: ID!
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  discoveryDate: Time!
  district: District!
  districtID: ID!
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finder: User!
  finderID: ID!
  followingSales: [User!]
  fullAddress: String
  geoBounds: [[Float]]
  geoCoordinate: GeoJson
  id: ID!
  images: [String!]
  keyProject: Boolean!
  managementCompany: String
  name: String!
  ownerSituations: String
  prepareToBid: Boolean!
  projectCode: String
  projectDefinition: String
  projectType: String
  province: Province!
  provinceID: ID!
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int!
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time!
  visitRecords: [VisitRecord!]
}

"""A connection to a list of items."""
type TenderConnection {
  """A list of edges."""
  edges: [TenderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type TenderEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Tender
}

"""
TenderWhereInput is used for filtering Tender objects.
Input was generated by ent.
"""
input TenderWhereInput {
  """address field predicates"""
  address: String
  addressContains: String
  addressContainsFold: String
  addressEqualFold: String
  addressGT: String
  addressGTE: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIn: [String!]
  addressIsNil: Boolean
  addressLT: String
  addressLTE: String
  addressNEQ: String
  addressNotIn: [String!]
  addressNotNil: Boolean
  and: [TenderWhereInput!]
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  """bidding_date field predicates"""
  biddingDate: Time
  biddingDateGT: Time
  biddingDateGTE: Time
  biddingDateIn: [Time!]
  biddingDateIsNil: Boolean
  biddingDateLT: Time
  biddingDateLTE: Time
  biddingDateNEQ: Time
  biddingDateNotIn: [Time!]
  biddingDateNotNil: Boolean
  """bidding_instructions field predicates"""
  biddingInstructions: String
  biddingInstructionsContains: String
  biddingInstructionsContainsFold: String
  biddingInstructionsEqualFold: String
  biddingInstructionsGT: String
  biddingInstructionsGTE: String
  biddingInstructionsHasPrefix: String
  biddingInstructionsHasSuffix: String
  biddingInstructionsIn: [String!]
  biddingInstructionsIsNil: Boolean
  biddingInstructionsLT: String
  biddingInstructionsLTE: String
  biddingInstructionsNEQ: String
  biddingInstructionsNotIn: [String!]
  biddingInstructionsNotNil: Boolean
  """city_id field predicates"""
  cityID: ID
  cityIDContains: ID
  cityIDContainsFold: ID
  cityIDEqualFold: ID
  cityIDGT: ID
  cityIDGTE: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIn: [ID!]
  cityIDIsNil: Boolean
  cityIDLT: ID
  cityIDLTE: ID
  cityIDNEQ: ID
  cityIDNotIn: [ID!]
  cityIDNotNil: Boolean
  """code field predicates"""
  code: String
  codeContains: String
  codeContainsFold: String
  codeEqualFold: String
  codeGT: String
  codeGTE: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIn: [String!]
  codeLT: String
  codeLTE: String
  codeNEQ: String
  codeNotIn: [String!]
  """competitive_partnership_rating field predicates"""
  competitivePartnershipRating: Int
  competitivePartnershipRatingGT: Int
  competitivePartnershipRatingGTE: Int
  competitivePartnershipRatingIn: [Int!]
  competitivePartnershipRatingIsNil: Boolean
  competitivePartnershipRatingLT: Int
  competitivePartnershipRatingLTE: Int
  competitivePartnershipRatingNEQ: Int
  competitivePartnershipRatingNotIn: [Int!]
  competitivePartnershipRatingNotNil: Boolean
  """competitive_partnership_rating_overview field predicates"""
  competitivePartnershipRatingOverview: String
  competitivePartnershipRatingOverviewContains: String
  competitivePartnershipRatingOverviewContainsFold: String
  competitivePartnershipRatingOverviewEqualFold: String
  competitivePartnershipRatingOverviewGT: String
  competitivePartnershipRatingOverviewGTE: String
  competitivePartnershipRatingOverviewHasPrefix: String
  competitivePartnershipRatingOverviewHasSuffix: String
  competitivePartnershipRatingOverviewIn: [String!]
  competitivePartnershipRatingOverviewIsNil: Boolean
  competitivePartnershipRatingOverviewLT: String
  competitivePartnershipRatingOverviewLTE: String
  competitivePartnershipRatingOverviewNEQ: String
  competitivePartnershipRatingOverviewNotIn: [String!]
  competitivePartnershipRatingOverviewNotNil: Boolean
  """competitor_situations field predicates"""
  competitorSituations: String
  competitorSituationsContains: String
  competitorSituationsContainsFold: String
  competitorSituationsEqualFold: String
  competitorSituationsGT: String
  competitorSituationsGTE: String
  competitorSituationsHasPrefix: String
  competitorSituationsHasSuffix: String
  competitorSituationsIn: [String!]
  competitorSituationsIsNil: Boolean
  competitorSituationsLT: String
  competitorSituationsLTE: String
  competitorSituationsNEQ: String
  competitorSituationsNotIn: [String!]
  competitorSituationsNotNil: Boolean
  """consulting_firm field predicates"""
  consultingFirm: String
  consultingFirmContains: String
  consultingFirmContainsFold: String
  consultingFirmEqualFold: String
  consultingFirmGT: String
  consultingFirmGTE: String
  consultingFirmHasPrefix: String
  consultingFirmHasSuffix: String
  consultingFirmIn: [String!]
  consultingFirmIsNil: Boolean
  consultingFirmLT: String
  consultingFirmLTE: String
  consultingFirmNEQ: String
  consultingFirmNotIn: [String!]
  consultingFirmNotNil: Boolean
  """contract_form field predicates"""
  contractForm: String
  contractFormContains: String
  contractFormContainsFold: String
  contractFormEqualFold: String
  contractFormGT: String
  contractFormGTE: String
  contractFormHasPrefix: String
  contractFormHasSuffix: String
  contractFormIn: [String!]
  contractFormIsNil: Boolean
  contractFormLT: String
  contractFormLTE: String
  contractFormNEQ: String
  contractFormNotIn: [String!]
  contractFormNotNil: Boolean
  """contractor field predicates"""
  contractor: String
  contractorContains: String
  contractorContainsFold: String
  contractorEqualFold: String
  contractorGT: String
  contractorGTE: String
  contractorHasPrefix: String
  contractorHasSuffix: String
  contractorIn: [String!]
  contractorIsNil: Boolean
  contractorLT: String
  contractorLTE: String
  contractorNEQ: String
  contractorNotIn: [String!]
  contractorNotNil: Boolean
  """cost_engineer field predicates"""
  costEngineer: String
  costEngineerContains: String
  costEngineerContainsFold: String
  costEngineerEqualFold: String
  costEngineerGT: String
  costEngineerGTE: String
  costEngineerHasPrefix: String
  costEngineerHasSuffix: String
  costEngineerIn: [String!]
  costEngineerIsNil: Boolean
  costEngineerLT: String
  costEngineerLTE: String
  costEngineerNEQ: String
  costEngineerNotIn: [String!]
  costEngineerNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  """credit_and_payment_rating field predicates"""
  creditAndPaymentRating: Int
  creditAndPaymentRatingGT: Int
  creditAndPaymentRatingGTE: Int
  creditAndPaymentRatingIn: [Int!]
  creditAndPaymentRatingIsNil: Boolean
  creditAndPaymentRatingLT: Int
  creditAndPaymentRatingLTE: Int
  creditAndPaymentRatingNEQ: Int
  creditAndPaymentRatingNotIn: [Int!]
  creditAndPaymentRatingNotNil: Boolean
  """credit_and_payment_rating_overview field predicates"""
  creditAndPaymentRatingOverview: String
  creditAndPaymentRatingOverviewContains: String
  creditAndPaymentRatingOverviewContainsFold: String
  creditAndPaymentRatingOverviewEqualFold: String
  creditAndPaymentRatingOverviewGT: String
  creditAndPaymentRatingOverviewGTE: String
  creditAndPaymentRatingOverviewHasPrefix: String
  creditAndPaymentRatingOverviewHasSuffix: String
  creditAndPaymentRatingOverviewIn: [String!]
  creditAndPaymentRatingOverviewIsNil: Boolean
  creditAndPaymentRatingOverviewLT: String
  creditAndPaymentRatingOverviewLTE: String
  creditAndPaymentRatingOverviewNEQ: String
  creditAndPaymentRatingOverviewNotIn: [String!]
  creditAndPaymentRatingOverviewNotNil: Boolean
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  """customer_relationship_rating field predicates"""
  customerRelationshipRating: Int
  customerRelationshipRatingGT: Int
  customerRelationshipRatingGTE: Int
  customerRelationshipRatingIn: [Int!]
  customerRelationshipRatingIsNil: Boolean
  customerRelationshipRatingLT: Int
  customerRelationshipRatingLTE: Int
  customerRelationshipRatingNEQ: Int
  customerRelationshipRatingNotIn: [Int!]
  customerRelationshipRatingNotNil: Boolean
  """customer_relationship_rating_overview field predicates"""
  customerRelationshipRatingOverview: String
  customerRelationshipRatingOverviewContains: String
  customerRelationshipRatingOverviewContainsFold: String
  customerRelationshipRatingOverviewEqualFold: String
  customerRelationshipRatingOverviewGT: String
  customerRelationshipRatingOverviewGTE: String
  customerRelationshipRatingOverviewHasPrefix: String
  customerRelationshipRatingOverviewHasSuffix: String
  customerRelationshipRatingOverviewIn: [String!]
  customerRelationshipRatingOverviewIsNil: Boolean
  customerRelationshipRatingOverviewLT: String
  customerRelationshipRatingOverviewLTE: String
  customerRelationshipRatingOverviewNEQ: String
  customerRelationshipRatingOverviewNotIn: [String!]
  customerRelationshipRatingOverviewNotNil: Boolean
  """design_unit field predicates"""
  designUnit: String
  designUnitContains: String
  designUnitContainsFold: String
  designUnitEqualFold: String
  designUnitGT: String
  designUnitGTE: String
  designUnitHasPrefix: String
  designUnitHasSuffix: String
  designUnitIn: [String!]
  designUnitIsNil: Boolean
  designUnitLT: String
  designUnitLTE: String
  designUnitNEQ: String
  designUnitNotIn: [String!]
  designUnitNotNil: Boolean
  """discovery_date field predicates"""
  discoveryDate: Time
  discoveryDateGT: Time
  discoveryDateGTE: Time
  discoveryDateIn: [Time!]
  discoveryDateLT: Time
  discoveryDateLTE: Time
  discoveryDateNEQ: Time
  discoveryDateNotIn: [Time!]
  """district_id field predicates"""
  districtID: ID
  districtIDContains: ID
  districtIDContainsFold: ID
  districtIDEqualFold: ID
  districtIDGT: ID
  districtIDGTE: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIn: [ID!]
  districtIDLT: ID
  districtIDLTE: ID
  districtIDNEQ: ID
  districtIDNotIn: [ID!]
  """estimated_amount field predicates"""
  estimatedAmount: Float
  estimatedAmountGT: Float
  estimatedAmountGTE: Float
  estimatedAmountIn: [Float!]
  estimatedAmountIsNil: Boolean
  estimatedAmountLT: Float
  estimatedAmountLTE: Float
  estimatedAmountNEQ: Float
  estimatedAmountNotIn: [Float!]
  estimatedAmountNotNil: Boolean
  """estimated_project_end_date field predicates"""
  estimatedProjectEndDate: Time
  estimatedProjectEndDateGT: Time
  estimatedProjectEndDateGTE: Time
  estimatedProjectEndDateIn: [Time!]
  estimatedProjectEndDateIsNil: Boolean
  estimatedProjectEndDateLT: Time
  estimatedProjectEndDateLTE: Time
  estimatedProjectEndDateNEQ: Time
  estimatedProjectEndDateNotIn: [Time!]
  estimatedProjectEndDateNotNil: Boolean
  """estimated_project_start_date field predicates"""
  estimatedProjectStartDate: Time
  estimatedProjectStartDateGT: Time
  estimatedProjectStartDateGTE: Time
  estimatedProjectStartDateIn: [Time!]
  estimatedProjectStartDateIsNil: Boolean
  estimatedProjectStartDateLT: Time
  estimatedProjectStartDateLTE: Time
  estimatedProjectStartDateNEQ: Time
  estimatedProjectStartDateNotIn: [Time!]
  estimatedProjectStartDateNotNil: Boolean
  """facade_consultant field predicates"""
  facadeConsultant: String
  facadeConsultantContains: String
  facadeConsultantContainsFold: String
  facadeConsultantEqualFold: String
  facadeConsultantGT: String
  facadeConsultantGTE: String
  facadeConsultantHasPrefix: String
  facadeConsultantHasSuffix: String
  facadeConsultantIn: [String!]
  facadeConsultantIsNil: Boolean
  facadeConsultantLT: String
  facadeConsultantLTE: String
  facadeConsultantNEQ: String
  facadeConsultantNotIn: [String!]
  facadeConsultantNotNil: Boolean
  """finder_id field predicates"""
  finderID: ID
  finderIDContains: ID
  finderIDContainsFold: ID
  finderIDEqualFold: ID
  finderIDGT: ID
  finderIDGTE: ID
  finderIDHasPrefix: ID
  finderIDHasSuffix: ID
  finderIDIn: [ID!]
  finderIDLT: ID
  finderIDLTE: ID
  finderIDNEQ: ID
  finderIDNotIn: [ID!]
  """full_address field predicates"""
  fullAddress: String
  fullAddressContains: String
  fullAddressContainsFold: String
  fullAddressEqualFold: String
  fullAddressGT: String
  fullAddressGTE: String
  fullAddressHasPrefix: String
  fullAddressHasSuffix: String
  fullAddressIn: [String!]
  fullAddressIsNil: Boolean
  fullAddressLT: String
  fullAddressLTE: String
  fullAddressNEQ: String
  fullAddressNotIn: [String!]
  fullAddressNotNil: Boolean
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """city edge predicates"""
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """district edge predicates"""
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """finder edge predicates"""
  hasFinder: Boolean
  hasFinderWith: [UserWhereInput!]
  """following_sales edge predicates"""
  hasFollowingSales: Boolean
  hasFollowingSalesWith: [UserWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """key_project field predicates"""
  keyProject: Boolean
  keyProjectNEQ: Boolean
  """management_company field predicates"""
  managementCompany: String
  managementCompanyContains: String
  managementCompanyContainsFold: String
  managementCompanyEqualFold: String
  managementCompanyGT: String
  managementCompanyGTE: String
  managementCompanyHasPrefix: String
  managementCompanyHasSuffix: String
  managementCompanyIn: [String!]
  managementCompanyIsNil: Boolean
  managementCompanyLT: String
  managementCompanyLTE: String
  managementCompanyNEQ: String
  managementCompanyNotIn: [String!]
  managementCompanyNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: TenderWhereInput
  or: [TenderWhereInput!]
  """owner_situations field predicates"""
  ownerSituations: String
  ownerSituationsContains: String
  ownerSituationsContainsFold: String
  ownerSituationsEqualFold: String
  ownerSituationsGT: String
  ownerSituationsGTE: String
  ownerSituationsHasPrefix: String
  ownerSituationsHasSuffix: String
  ownerSituationsIn: [String!]
  ownerSituationsIsNil: Boolean
  ownerSituationsLT: String
  ownerSituationsLTE: String
  ownerSituationsNEQ: String
  ownerSituationsNotIn: [String!]
  ownerSituationsNotNil: Boolean
  """prepare_to_bid field predicates"""
  prepareToBid: Boolean
  prepareToBidNEQ: Boolean
  """project_code field predicates"""
  projectCode: String
  projectCodeContains: String
  projectCodeContainsFold: String
  projectCodeEqualFold: String
  projectCodeGT: String
  projectCodeGTE: String
  projectCodeHasPrefix: String
  projectCodeHasSuffix: String
  projectCodeIn: [String!]
  projectCodeIsNil: Boolean
  projectCodeLT: String
  projectCodeLTE: String
  projectCodeNEQ: String
  projectCodeNotIn: [String!]
  projectCodeNotNil: Boolean
  """project_definition field predicates"""
  projectDefinition: String
  projectDefinitionContains: String
  projectDefinitionContainsFold: String
  projectDefinitionEqualFold: String
  projectDefinitionGT: String
  projectDefinitionGTE: String
  projectDefinitionHasPrefix: String
  projectDefinitionHasSuffix: String
  projectDefinitionIn: [String!]
  projectDefinitionIsNil: Boolean
  projectDefinitionLT: String
  projectDefinitionLTE: String
  projectDefinitionNEQ: String
  projectDefinitionNotIn: [String!]
  projectDefinitionNotNil: Boolean
  """project_type field predicates"""
  projectType: String
  projectTypeContains: String
  projectTypeContainsFold: String
  projectTypeEqualFold: String
  projectTypeGT: String
  projectTypeGTE: String
  projectTypeHasPrefix: String
  projectTypeHasSuffix: String
  projectTypeIn: [String!]
  projectTypeIsNil: Boolean
  projectTypeLT: String
  projectTypeLTE: String
  projectTypeNEQ: String
  projectTypeNotIn: [String!]
  projectTypeNotNil: Boolean
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  """remark field predicates"""
  remark: String
  remarkContains: String
  remarkContainsFold: String
  remarkEqualFold: String
  remarkGT: String
  remarkGTE: String
  remarkHasPrefix: String
  remarkHasSuffix: String
  remarkIn: [String!]
  remarkIsNil: Boolean
  remarkLT: String
  remarkLTE: String
  remarkNEQ: String
  remarkNotIn: [String!]
  remarkNotNil: Boolean
  """size_and_value_rating field predicates"""
  sizeAndValueRating: Int
  sizeAndValueRatingGT: Int
  sizeAndValueRatingGTE: Int
  sizeAndValueRatingIn: [Int!]
  sizeAndValueRatingIsNil: Boolean
  sizeAndValueRatingLT: Int
  sizeAndValueRatingLTE: Int
  sizeAndValueRatingNEQ: Int
  sizeAndValueRatingNotIn: [Int!]
  sizeAndValueRatingNotNil: Boolean
  """size_and_value_rating_overview field predicates"""
  sizeAndValueRatingOverview: String
  sizeAndValueRatingOverviewContains: String
  sizeAndValueRatingOverviewContainsFold: String
  sizeAndValueRatingOverviewEqualFold: String
  sizeAndValueRatingOverviewGT: String
  sizeAndValueRatingOverviewGTE: String
  sizeAndValueRatingOverviewHasPrefix: String
  sizeAndValueRatingOverviewHasSuffix: String
  sizeAndValueRatingOverviewIn: [String!]
  sizeAndValueRatingOverviewIsNil: Boolean
  sizeAndValueRatingOverviewLT: String
  sizeAndValueRatingOverviewLTE: String
  sizeAndValueRatingOverviewNEQ: String
  sizeAndValueRatingOverviewNotIn: [String!]
  sizeAndValueRatingOverviewNotNil: Boolean
  """status field predicates"""
  status: Int
  statusGT: Int
  statusGTE: Int
  statusIn: [Int!]
  statusLT: Int
  statusLTE: Int
  statusNEQ: Int
  statusNotIn: [Int!]
  """tender_date field predicates"""
  tenderDate: Time
  tenderDateGT: Time
  tenderDateGTE: Time
  tenderDateIn: [Time!]
  tenderDateIsNil: Boolean
  tenderDateLT: Time
  tenderDateLTE: Time
  tenderDateNEQ: Time
  tenderDateNotIn: [Time!]
  tenderDateNotNil: Boolean
  """tender_form field predicates"""
  tenderForm: String
  tenderFormContains: String
  tenderFormContainsFold: String
  tenderFormEqualFold: String
  tenderFormGT: String
  tenderFormGTE: String
  tenderFormHasPrefix: String
  tenderFormHasSuffix: String
  tenderFormIn: [String!]
  tenderFormIsNil: Boolean
  tenderFormLT: String
  tenderFormLTE: String
  tenderFormNEQ: String
  tenderFormNotIn: [String!]
  tenderFormNotNil: Boolean
  """tender_situations field predicates"""
  tenderSituations: String
  tenderSituationsContains: String
  tenderSituationsContainsFold: String
  tenderSituationsEqualFold: String
  tenderSituationsGT: String
  tenderSituationsGTE: String
  tenderSituationsHasPrefix: String
  tenderSituationsHasSuffix: String
  tenderSituationsIn: [String!]
  tenderSituationsIsNil: Boolean
  tenderSituationsLT: String
  tenderSituationsLTE: String
  tenderSituationsNEQ: String
  tenderSituationsNotIn: [String!]
  tenderSituationsNotNil: Boolean
  """tendering_agency field predicates"""
  tenderingAgency: String
  tenderingAgencyContains: String
  tenderingAgencyContainsFold: String
  tenderingAgencyEqualFold: String
  tenderingAgencyGT: String
  tenderingAgencyGTE: String
  tenderingAgencyHasPrefix: String
  tenderingAgencyHasSuffix: String
  tenderingAgencyIn: [String!]
  tenderingAgencyIsNil: Boolean
  tenderingAgencyLT: String
  tenderingAgencyLTE: String
  tenderingAgencyNEQ: String
  tenderingAgencyNotIn: [String!]
  tenderingAgencyNotNil: Boolean
  """time_limit_rating field predicates"""
  timeLimitRating: Int
  timeLimitRatingGT: Int
  timeLimitRatingGTE: Int
  timeLimitRatingIn: [Int!]
  timeLimitRatingIsNil: Boolean
  timeLimitRatingLT: Int
  timeLimitRatingLTE: Int
  timeLimitRatingNEQ: Int
  timeLimitRatingNotIn: [Int!]
  timeLimitRatingNotNil: Boolean
  """time_limit_rating_overview field predicates"""
  timeLimitRatingOverview: String
  timeLimitRatingOverviewContains: String
  timeLimitRatingOverviewContainsFold: String
  timeLimitRatingOverviewEqualFold: String
  timeLimitRatingOverviewGT: String
  timeLimitRatingOverviewGTE: String
  timeLimitRatingOverviewHasPrefix: String
  timeLimitRatingOverviewHasSuffix: String
  timeLimitRatingOverviewIn: [String!]
  timeLimitRatingOverviewIsNil: Boolean
  timeLimitRatingOverviewLT: String
  timeLimitRatingOverviewLTE: String
  timeLimitRatingOverviewNEQ: String
  timeLimitRatingOverviewNotIn: [String!]
  timeLimitRatingOverviewNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

scalar Time

"""
UpdateAreaInput is used for update Area object.
Input was generated by ent.
"""
input UpdateAreaInput {
  addCustomerIDs: [ID!]
  addProvinceIDs: [ID!]
  addSaleIDs: [ID!]
  addTenderIDs: [ID!]
  clearCustomers: Boolean
  clearProvinces: Boolean
  clearSales: Boolean
  clearTenders: Boolean
  code: String
  name: String
  removeCustomerIDs: [ID!]
  removeProvinceIDs: [ID!]
  removeSaleIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateCityInput is used for update City object.
Input was generated by ent.
"""
input UpdateCityInput {
  adcode: Int
  addDistrictIDs: [ID!]
  addTenderIDs: [ID!]
  clearDistricts: Boolean
  clearTenders: Boolean
  name: String
  provCode: Int
  provinceID: ID
  removeDistrictIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateCountryInput is used for update Country object.
Input was generated by ent.
"""
input UpdateCountryInput {
  adcode: Int
  addProvinceIDs: [ID!]
  clearProvinces: Boolean
  name: String
  removeProvinceIDs: [ID!]
  updatedAt: Time
}

"""
UpdateCustomerInput is used for update Customer object.
Input was generated by ent.
"""
input UpdateCustomerInput {
  addTenderIDs: [ID!]
  addVisitRecordIDs: [ID!]
  areaID: ID
  clearContactPerson: Boolean
  clearContactPersonEmail: Boolean
  clearContactPersonPhone: Boolean
  clearContactPersonPosition: Boolean
  clearOwnerType: Boolean
  clearSales: Boolean
  clearSize: Boolean
  clearTenders: Boolean
  clearVisitRecords: Boolean
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdByID: ID
  industry: Int
  name: String
  ownerType: Int
  removeTenderIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  salesID: ID
  size: Int
  updatedAt: Time
}

"""
UpdateDistrictInput is used for update District object.
Input was generated by ent.
"""
input UpdateDistrictInput {
  adcode: Int
  addTenderIDs: [ID!]
  cityCode: Int
  cityID: ID
  clearCity: Boolean
  clearTenders: Boolean
  name: String
  provCode: Int
  provinceID: ID
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateProvinceInput is used for update Province object.
Input was generated by ent.
"""
input UpdateProvinceInput {
  adcode: Int
  addCityIDs: [ID!]
  addDistrictIDs: [ID!]
  addTenderIDs: [ID!]
  areaID: ID
  clearArea: Boolean
  clearCities: Boolean
  clearDistricts: Boolean
  clearTenders: Boolean
  countryID: ID
  name: String
  removeCityIDs: [ID!]
  removeDistrictIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateTenderInput is used for update Tender object.
Input was generated by ent.
"""
input UpdateTenderInput {
  addFollowingSaleIDs: [ID!]
  addVisitRecordIDs: [ID!]
  address: String
  appendAttachements: [String!]
  appendImages: [String!]
  areaID: ID
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  cityID: ID
  clearAddress: Boolean
  clearAttachements: Boolean
  clearBiddingDate: Boolean
  clearBiddingInstructions: Boolean
  clearCity: Boolean
  clearCompetitivePartnershipRating: Boolean
  clearCompetitivePartnershipRatingOverview: Boolean
  clearCompetitorSituations: Boolean
  clearConsultingFirm: Boolean
  clearContractForm: Boolean
  clearContractor: Boolean
  clearCostEngineer: Boolean
  clearCreditAndPaymentRating: Boolean
  clearCreditAndPaymentRatingOverview: Boolean
  clearCustomerRelationshipRating: Boolean
  clearCustomerRelationshipRatingOverview: Boolean
  clearDesignUnit: Boolean
  clearEstimatedAmount: Boolean
  clearEstimatedProjectEndDate: Boolean
  clearEstimatedProjectStartDate: Boolean
  clearFacadeConsultant: Boolean
  clearFollowingSales: Boolean
  clearFullAddress: Boolean
  clearImages: Boolean
  clearManagementCompany: Boolean
  clearOwnerSituations: Boolean
  clearProjectCode: Boolean
  clearProjectDefinition: Boolean
  clearProjectType: Boolean
  clearRemark: Boolean
  clearSizeAndValueRating: Boolean
  clearSizeAndValueRatingOverview: Boolean
  clearTenderDate: Boolean
  clearTenderForm: Boolean
  clearTenderSituations: Boolean
  clearTenderingAgency: Boolean
  clearTimeLimitRating: Boolean
  clearTimeLimitRatingOverview: Boolean
  clearVisitRecords: Boolean
  code: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  discoveryDate: Time
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finderID: ID
  fullAddress: String
  images: [String!]
  keyProject: Boolean
  managementCompany: String
  name: String
  ownerSituations: String
  prepareToBid: Boolean
  projectCode: String
  projectDefinition: String
  projectType: String
  provinceID: ID
  remark: String
  removeFollowingSaleIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time
}

"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  addAreaIDs: [ID!]
  addCustomerIDs: [ID!]
  addTeamMemberIDs: [ID!]
  addTenderIDs: [ID!]
  addVisitRecordIDs: [ID!]
  avatarURL: String
  clearAreas: Boolean
  clearCustomers: Boolean
  clearLeader: Boolean
  clearTeamMembers: Boolean
  clearTenders: Boolean
  clearVisitRecords: Boolean
  disabled: Boolean
  email: String
  isAdmin: Boolean
  isLeader: Boolean
  leaderID: ID
  name: String
  openID: String
  removeAreaIDs: [ID!]
  removeCustomerIDs: [ID!]
  removeTeamMemberIDs: [ID!]
  removeTenderIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  updatedAt: Time
  username: String
}

"""
UpdateVisitRecordInput is used for update VisitRecord object.
Input was generated by ent.
"""
input UpdateVisitRecordInput {
  addFollowUpByIDs: [ID!]
  clearCustomer: Boolean
  clearFollowUpBys: Boolean
  clearNextStep: Boolean
  clearTender: Boolean
  commContent: String
  commPeople: String
  customerID: ID
  date: Time
  nextStep: String
  removeFollowUpByIDs: [ID!]
  tenderID: ID
  updatedAt: Time
  visitType: Int
}

type User implements Node {
  areas: [Area!]
  avatarURL: String!
  createdAt: Time!
  customers: [Customer!]
  disabled: Boolean!
  email: String!
  id: ID!
  isAdmin: Boolean!
  isLeader: Boolean!
  leader: User
  leaderID: ID
  name: String!
  openID: String!
  teamMembers: [User!]
  tenders: [Tender!]
  updatedAt: Time!
  username: String!
  visitRecords: [VisitRecord!]
}

"""A connection to a list of items."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: User
}

"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  and: [UserWhereInput!]
  """avatar_url field predicates"""
  avatarURL: String
  avatarURLContains: String
  avatarURLContainsFold: String
  avatarURLEqualFold: String
  avatarURLGT: String
  avatarURLGTE: String
  avatarURLHasPrefix: String
  avatarURLHasSuffix: String
  avatarURLIn: [String!]
  avatarURLLT: String
  avatarURLLTE: String
  avatarURLNEQ: String
  avatarURLNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """disabled field predicates"""
  disabled: Boolean
  disabledNEQ: Boolean
  """email field predicates"""
  email: String
  emailContains: String
  emailContainsFold: String
  emailEqualFold: String
  emailGT: String
  emailGTE: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIn: [String!]
  emailLT: String
  emailLTE: String
  emailNEQ: String
  emailNotIn: [String!]
  """areas edge predicates"""
  hasAreas: Boolean
  hasAreasWith: [AreaWhereInput!]
  """customers edge predicates"""
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """leader edge predicates"""
  hasLeader: Boolean
  hasLeaderWith: [UserWhereInput!]
  """team_members edge predicates"""
  hasTeamMembers: Boolean
  hasTeamMembersWith: [UserWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """is_admin field predicates"""
  isAdmin: Boolean
  isAdminNEQ: Boolean
  """is_leader field predicates"""
  isLeader: Boolean
  isLeaderNEQ: Boolean
  """leader_id field predicates"""
  leaderID: ID
  leaderIDContains: ID
  leaderIDContainsFold: ID
  leaderIDEqualFold: ID
  leaderIDGT: ID
  leaderIDGTE: ID
  leaderIDHasPrefix: ID
  leaderIDHasSuffix: ID
  leaderIDIn: [ID!]
  leaderIDIsNil: Boolean
  leaderIDLT: ID
  leaderIDLTE: ID
  leaderIDNEQ: ID
  leaderIDNotIn: [ID!]
  leaderIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: UserWhereInput
  """open_id field predicates"""
  openID: String
  openIDContains: String
  openIDContainsFold: String
  openIDEqualFold: String
  openIDGT: String
  openIDGTE: String
  openIDHasPrefix: String
  openIDHasSuffix: String
  openIDIn: [String!]
  openIDLT: String
  openIDLTE: String
  openIDNEQ: String
  openIDNotIn: [String!]
  or: [UserWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """username field predicates"""
  username: String
  usernameContains: String
  usernameContainsFold: String
  usernameEqualFold: String
  usernameGT: String
  usernameGTE: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameIn: [String!]
  usernameLT: String
  usernameLTE: String
  usernameNEQ: String
  usernameNotIn: [String!]
}

type VisitRecord implements Node {
  commContent: String!
  commPeople: String!
  createdAt: Time!
  customer: Customer
  customerID: ID
  date: Time!
  followupbys: [User!] @goField(name: "FollowUpBys", forceResolver: false)
  id: ID!
  nextStep: String
  tender: Tender
  tenderID: ID
  updatedAt: Time!
  visitType: Int!
}

"""A connection to a list of items."""
type VisitRecordConnection {
  """A list of edges."""
  edges: [VisitRecordEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type VisitRecordEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: VisitRecord
}

"""
VisitRecordWhereInput is used for filtering VisitRecord objects.
Input was generated by ent.
"""
input VisitRecordWhereInput {
  and: [VisitRecordWhereInput!]
  """comm_content field predicates"""
  commContent: String
  commContentContains: String
  commContentContainsFold: String
  commContentEqualFold: String
  commContentGT: String
  commContentGTE: String
  commContentHasPrefix: String
  commContentHasSuffix: String
  commContentIn: [String!]
  commContentLT: String
  commContentLTE: String
  commContentNEQ: String
  commContentNotIn: [String!]
  """comm_people field predicates"""
  commPeople: String
  commPeopleContains: String
  commPeopleContainsFold: String
  commPeopleEqualFold: String
  commPeopleGT: String
  commPeopleGTE: String
  commPeopleHasPrefix: String
  commPeopleHasSuffix: String
  commPeopleIn: [String!]
  commPeopleLT: String
  commPeopleLTE: String
  commPeopleNEQ: String
  commPeopleNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDIsNil: Boolean
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  customerIDNotNil: Boolean
  """date field predicates"""
  date: Time
  dateGT: Time
  dateGTE: Time
  dateIn: [Time!]
  dateLT: Time
  dateLTE: Time
  dateNEQ: Time
  dateNotIn: [Time!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """followUpBys edge predicates"""
  hasFollowUpBys: Boolean
  hasFollowUpBysWith: [UserWhereInput!]
  """tender edge predicates"""
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """next_step field predicates"""
  nextStep: String
  nextStepContains: String
  nextStepContainsFold: String
  nextStepEqualFold: String
  nextStepGT: String
  nextStepGTE: String
  nextStepHasPrefix: String
  nextStepHasSuffix: String
  nextStepIn: [String!]
  nextStepIsNil: Boolean
  nextStepLT: String
  nextStepLTE: String
  nextStepNEQ: String
  nextStepNotIn: [String!]
  nextStepNotNil: Boolean
  not: VisitRecordWhereInput
  or: [VisitRecordWhereInput!]
  """tender_id field predicates"""
  tenderID: ID
  tenderIDContains: ID
  tenderIDContainsFold: ID
  tenderIDEqualFold: ID
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDIn: [ID!]
  tenderIDIsNil: Boolean
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDNEQ: ID
  tenderIDNotIn: [ID!]
  tenderIDNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """visit_type field predicates"""
  visitType: Int
  visitTypeGT: Int
  visitTypeGTE: Int
  visitTypeIn: [Int!]
  visitTypeLT: Int
  visitTypeLTE: Int
  visitTypeNEQ: Int
  visitTypeNotIn: [Int!]
}