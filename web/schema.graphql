schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @goModel(forceGenerate: Boolean, model: String, models: [String!]) on ENUM | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

type Area implements Node {
  center: GeoJson
  code: String!
  createdAt: Time!
  customers(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Customers returned from the connection."""
    orderBy: [CustomerOrder!]
    """Filtering options for Customers returned from the connection."""
    where: CustomerWhereInput
  ): CustomerConnection!
  id: ID!
  leaderChatID: String
  name: String!
  provinces(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Provinces returned from the connection."""
    orderBy: ProvinceOrder
    """Filtering options for Provinces returned from the connection."""
    where: ProvinceWhereInput
  ): ProvinceConnection!
  salesChatID: String
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder
    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
}

"""A connection to a list of items."""
type AreaConnection {
  """A list of edges."""
  edges: [AreaEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type AreaEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Area
}

"""Ordering options for Area connections"""
input AreaOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Areas."""
  field: AreaOrderField!
}

"""Properties by which Area connections can be ordered."""
enum AreaOrderField {
  CREATED_AT
}

"""
AreaWhereInput is used for filtering Area objects.
Input was generated by ent.
"""
input AreaWhereInput {
  and: [AreaWhereInput!]
  """code field predicates"""
  code: String
  codeContains: String
  codeContainsFold: String
  codeEqualFold: String
  codeGT: String
  codeGTE: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIn: [String!]
  codeLT: String
  codeLTE: String
  codeNEQ: String
  codeNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """customers edge predicates"""
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """provinces edge predicates"""
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """users edge predicates"""
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """leader_chat_id field predicates"""
  leaderChatID: String
  leaderChatIDContains: String
  leaderChatIDContainsFold: String
  leaderChatIDEqualFold: String
  leaderChatIDGT: String
  leaderChatIDGTE: String
  leaderChatIDHasPrefix: String
  leaderChatIDHasSuffix: String
  leaderChatIDIn: [String!]
  leaderChatIDIsNil: Boolean
  leaderChatIDLT: String
  leaderChatIDLTE: String
  leaderChatIDNEQ: String
  leaderChatIDNotIn: [String!]
  leaderChatIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: AreaWhereInput
  or: [AreaWhereInput!]
  """sales_chat_id field predicates"""
  salesChatID: String
  salesChatIDContains: String
  salesChatIDContainsFold: String
  salesChatIDEqualFold: String
  salesChatIDGT: String
  salesChatIDGTE: String
  salesChatIDHasPrefix: String
  salesChatIDHasSuffix: String
  salesChatIDIn: [String!]
  salesChatIDIsNil: Boolean
  salesChatIDLT: String
  salesChatIDLTE: String
  salesChatIDNEQ: String
  salesChatIDNotIn: [String!]
  salesChatIDNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type City implements Node {
  adcode: Int!
  center: GeoJson
  createdAt: Time!
  districts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Districts returned from the connection."""
    orderBy: DistrictOrder
    """Filtering options for Districts returned from the connection."""
    where: DistrictWhereInput
  ): DistrictConnection!
  id: ID!
  name: String!
  provCode: Int!
  province: Province!
  provinceID: ID!
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
}

"""A connection to a list of items."""
type CityConnection {
  """A list of edges."""
  edges: [CityEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CityEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: City
}

"""Ordering options for City connections"""
input CityOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Cities."""
  field: CityOrderField!
}

"""Properties by which City connections can be ordered."""
enum CityOrderField {
  CREATED_AT
}

"""
CityWhereInput is used for filtering City objects.
Input was generated by ent.
"""
input CityWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [CityWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """districts edge predicates"""
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CityWhereInput
  or: [CityWhereInput!]
  """prov_code field predicates"""
  provCode: Int
  provCodeGT: Int
  provCodeGTE: Int
  provCodeIn: [Int!]
  provCodeLT: Int
  provCodeLTE: Int
  provCodeNEQ: Int
  provCodeNotIn: [Int!]
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Competitor implements Node {
  createdAt: Time!
  id: ID!
  name: String!
  shortName: String!
  tenders: [TenderCompetitor!]
  updatedAt: Time!
}

"""A connection to a list of items."""
type CompetitorConnection {
  """A list of edges."""
  edges: [CompetitorEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CompetitorEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Competitor
}

"""Ordering options for Competitor connections"""
input CompetitorOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Competitors."""
  field: CompetitorOrderField!
}

"""Properties by which Competitor connections can be ordered."""
enum CompetitorOrderField {
  CREATED_AT
  NAME
}

"""
CompetitorWhereInput is used for filtering Competitor objects.
Input was generated by ent.
"""
input CompetitorWhereInput {
  and: [CompetitorWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderCompetitorWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CompetitorWhereInput
  or: [CompetitorWhereInput!]
  """short_name field predicates"""
  shortName: String
  shortNameContains: String
  shortNameContainsFold: String
  shortNameEqualFold: String
  shortNameGT: String
  shortNameGTE: String
  shortNameHasPrefix: String
  shortNameHasSuffix: String
  shortNameIn: [String!]
  shortNameLT: String
  shortNameLTE: String
  shortNameNEQ: String
  shortNameNotIn: [String!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Country implements Node {
  adcode: Int!
  center: GeoJson
  createdAt: Time!
  id: ID!
  name: String!
  provinces(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Provinces returned from the connection."""
    orderBy: ProvinceOrder
    """Filtering options for Provinces returned from the connection."""
    where: ProvinceWhereInput
  ): ProvinceConnection!
  updatedAt: Time!
}

"""A connection to a list of items."""
type CountryConnection {
  """A list of edges."""
  edges: [CountryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CountryEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Country
}

"""Ordering options for Country connections"""
input CountryOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Countries."""
  field: CountryOrderField!
}

"""Properties by which Country connections can be ordered."""
enum CountryOrderField {
  CREATED_AT
}

"""
CountryWhereInput is used for filtering Country objects.
Input was generated by ent.
"""
input CountryWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [CountryWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """provinces edge predicates"""
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CountryWhereInput
  or: [CountryWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

"""
CreateAreaInput is used for create Area object.
Input was generated by ent.
"""
input CreateAreaInput {
  code: String!
  createdAt: Time
  customerIDs: [ID!]
  leaderChatID: String
  name: String!
  provinceIDs: [ID!]
  salesChatID: String
  tenderIDs: [ID!]
  updatedAt: Time
  userIDs: [ID!]
}

"""
CreateCityInput is used for create City object.
Input was generated by ent.
"""
input CreateCityInput {
  adcode: Int!
  createdAt: Time
  districtIDs: [ID!]
  name: String!
  provCode: Int!
  provinceID: ID!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateCompetitorInput is used for create Competitor object.
Input was generated by ent.
"""
input CreateCompetitorInput {
  createdAt: Time
  name: String!
  shortName: String!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateCountryInput is used for create Country object.
Input was generated by ent.
"""
input CreateCountryInput {
  adcode: Int!
  createdAt: Time
  name: String!
  provinceIDs: [ID!]
  updatedAt: Time
}

"""
CreateCustomerInput is used for create Customer object.
Input was generated by ent.
"""
input CreateCustomerInput {
  activeProfileID: ID
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int
  approverID: ID
  areaID: ID!
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time
  createdByID: ID
  industry: Int
  name: String!
  ownerType: Int
  pendingProfileID: ID
  profileIDs: [ID!]
  salesID: ID
  size: Int
  tenderIDs: [ID!]
  updatedAt: Time
  updatedByID: ID
  visitRecordIDs: [ID!]
}

"""
CreateCustomerProfileInput is used for create CustomerProfile object.
Input was generated by ent.
"""
input CreateCustomerProfileInput {
  """審核日期"""
  approvalDate: Time
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕 4 已撤回"""
  approvalStatus: Int
  approverID: ID
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time
  createdByID: ID
  customerID: ID!
  industry: Int
  name: String!
  ownerType: Int
  salesID: ID
  size: Int
  updatedAt: Time
}

"""
CreateDistrictInput is used for create District object.
Input was generated by ent.
"""
input CreateDistrictInput {
  adcode: Int!
  cityCode: Int!
  cityID: ID
  createdAt: Time
  name: String!
  plotIDs: [ID!]
  provCode: Int!
  provinceID: ID!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreatePlotInput is used for create Plot object.
Input was generated by ent.
"""
input CreatePlotInput {
  colorHex: String!
  createdAt: Time
  districtID: ID!
  name: String!
  updatedAt: Time
}

"""
CreateProvinceInput is used for create Province object.
Input was generated by ent.
"""
input CreateProvinceInput {
  adcode: Int!
  areaID: ID
  cityIDs: [ID!]
  countryID: ID!
  createdAt: Time
  districtIDs: [ID!]
  name: String!
  tenderIDs: [ID!]
  updatedAt: Time
}

"""
CreateTenderCompetitorInput is used for create TenderCompetitor object.
Input was generated by ent.
"""
input CreateTenderCompetitorInput {
  amount: Float!
  competitorID: ID!
  createdAt: Time
  """是否中标"""
  result: Boolean
  tenderID: ID!
  updatedAt: Time
}

"""
CreateTenderInput is used for create Tender object.
Input was generated by ent.
"""
input CreateTenderInput {
  activeProfileID: ID
  address: String
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int
  approverID: ID
  """則師，只限港澳"""
  architect: String
  areaID: ID!
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  cityID: ID
  classify: Int
  code: String!
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorIDs: [ID!]
  competitorSituations: String
  """施工面積，只限港澳"""
  constructionArea: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  currentProgress: String
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  """業主，只限港澳"""
  developer: String
  discoveryDate: Time!
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finderID: ID
  followingSaleIDs: [ID!]
  fullAddress: String
  images: [String!]
  keyProject: Boolean
  """最後一次投標金額，只限港澳"""
  lastTenderAmount: Float
  levelInvolved: Int
  managementCompany: String
  name: String!
  ownerSituations: String
  pendingProfileID: ID
  prepareToBid: Boolean
  profileIDs: [ID!]
  projectCode: String
  projectDefinition: String
  projectType: String
  provinceID: ID
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int
  """交標日期，只限港澳"""
  tenderClosingDate: Time
  """投標編號，只限港澳"""
  tenderCode: String
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  """中標金額"""
  tenderWinAmount: Float
  tenderWinCompany: String
  """中標日期，只限港澳"""
  tenderWinDate: Time
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time
  visitRecordIDs: [ID!]
}

"""
CreateTenderProfileInput is used for create TenderProfile object.
Input was generated by ent.
"""
input CreateTenderProfileInput {
  address: String
  """審核日期"""
  approvalDate: Time
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕 4 已撤回"""
  approvalStatus: Int
  approverID: ID
  """則師，只限港澳"""
  architect: String
  attachments: [String!]
  biddingDate: Time
  biddingInstructions: String
  cityID: ID
  classify: Int
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  """施工面積，只限港澳"""
  constructionArea: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  currentProgress: String
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  """業主，只限港澳"""
  developer: String
  discoveryDate: Time
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finderID: ID
  fullAddress: String
  geoCoordinate: [Float!]
  images: [String!]
  keyProject: Boolean
  """最後一次投標金額，只限港澳"""
  lastTenderAmount: Float
  levelInvolved: Int
  managementCompany: String
  name: String
  ownerSituations: String
  prepareToBid: Boolean
  projectCode: String
  projectDefinition: String
  projectType: String
  provinceID: ID
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int
  """投標金額"""
  tenderAmount: Float
  """交標日期，只限港澳"""
  tenderClosingDate: Time
  """投標編號，只限港澳"""
  tenderCode: String
  tenderDate: Time
  tenderForm: String
  tenderID: ID!
  tenderSituations: String
  """得標金額"""
  tenderWinAmount: Float
  tenderWinCompany: String
  """得標日期，只限港澳"""
  tenderWinDate: Time
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time
}

"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  areaIDs: [ID!]
  avatarURL: String
  createdAt: Time
  customerIDs: [ID!]
  disabled: Boolean
  email: String
  hasEditAccess: Boolean
  hasMapAccess: Boolean
  isAdmin: Boolean
  isCeo: Boolean
  isSuperAdmin: Boolean
  leaderID: ID
  name: String
  openID: String!
  projectIDs: [ID!]
  teamMemberIDs: [ID!]
  tenderIDs: [ID!]
  updatedAt: Time
  username: String
  visitRecordIDs: [ID!]
}

"""
CreateVisitRecordInput is used for create VisitRecord object.
Input was generated by ent.
"""
input CreateVisitRecordInput {
  commContent: String!
  commPeople: String!
  createdAt: Time
  customerID: ID!
  date: Time!
  followupbyIDs: [ID!]
  nextStep: String
  tenderID: ID
  updatedAt: Time
  visitType: Int
}

"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor

type Customer implements Node {
  activeProfile: CustomerProfile
  activeProfileID: ID
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int!
  approver: User
  approverID: ID
  area: Area!
  areaID: ID!
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time!
  createdBy: User
  createdByID: ID
  draft: CustomerDraft
  id: ID!
  industry: Int
  name: String!
  ownerType: Int
  pendingProfile: CustomerProfile
  pendingProfileID: ID
  profiles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for CustomerProfiles returned from the connection."""
    orderBy: [CustomerProfileOrder!]
    """Filtering options for CustomerProfiles returned from the connection."""
    where: CustomerProfileWhereInput
  ): CustomerProfileConnection!
  sales: User
  salesID: ID
  size: Int
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
  updatedBy: User
  updatedByID: ID
  visitRecords(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for VisitRecords returned from the connection."""
    orderBy: [VisitRecordOrder!]
    """Filtering options for VisitRecords returned from the connection."""
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}

"""A connection to a list of items."""
type CustomerConnection {
  """A list of edges."""
  edges: [CustomerEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

type CustomerDraft {
  area: Area
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  industry: Int
  name: String
  ownerType: Int
  sales: User
  size: Int
}

"""An edge in a connection."""
type CustomerEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Customer
}

"""Ordering options for Customer connections"""
input CustomerOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Customers."""
  field: CustomerOrderField!
}

"""Properties by which Customer connections can be ordered."""
enum CustomerOrderField {
  APPROVAL_STATUS
  CREATED_AT
  NAME
  OWNER_TYPE
}

type CustomerProfile implements Node {
  """審核日期"""
  approvalDate: Time
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕 4 已撤回"""
  approvalStatus: Int!
  approver: User
  approverID: ID
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdAt: Time!
  createdBy: User
  createdByID: ID
  customer: Customer!
  customerID: ID!
  id: ID!
  industry: Int
  name: String!
  ownerType: Int
  sales: User
  salesID: ID
  size: Int
  updatedAt: Time!
}

"""A connection to a list of items."""
type CustomerProfileConnection {
  """A list of edges."""
  edges: [CustomerProfileEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type CustomerProfileEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: CustomerProfile
}

"""Ordering options for CustomerProfile connections"""
input CustomerProfileOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order CustomerProfiles."""
  field: CustomerProfileOrderField!
}

"""Properties by which CustomerProfile connections can be ordered."""
enum CustomerProfileOrderField {
  APPROVAL_STATUS
  CREATED_AT
  NAME
  OWNER_TYPE
}

"""
CustomerProfileWhereInput is used for filtering CustomerProfile objects.
Input was generated by ent.
"""
input CustomerProfileWhereInput {
  and: [CustomerProfileWhereInput!]
  """approval_date field predicates"""
  approvalDate: Time
  approvalDateGT: Time
  approvalDateGTE: Time
  approvalDateIn: [Time!]
  approvalDateIsNil: Boolean
  approvalDateLT: Time
  approvalDateLTE: Time
  approvalDateNEQ: Time
  approvalDateNotIn: [Time!]
  approvalDateNotNil: Boolean
  """approval_msg_id field predicates"""
  approvalMsgID: String
  approvalMsgIDContains: String
  approvalMsgIDContainsFold: String
  approvalMsgIDEqualFold: String
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIn: [String!]
  approvalMsgIDIsNil: Boolean
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDNEQ: String
  approvalMsgIDNotIn: [String!]
  approvalMsgIDNotNil: Boolean
  """approval_status field predicates"""
  approvalStatus: Int
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusIn: [Int!]
  approvalStatusLT: Int
  approvalStatusLTE: Int
  approvalStatusNEQ: Int
  approvalStatusNotIn: [Int!]
  """approver_id field predicates"""
  approverID: ID
  approverIDContains: ID
  approverIDContainsFold: ID
  approverIDEqualFold: ID
  approverIDGT: ID
  approverIDGTE: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIn: [ID!]
  approverIDIsNil: Boolean
  approverIDLT: ID
  approverIDLTE: ID
  approverIDNEQ: ID
  approverIDNotIn: [ID!]
  approverIDNotNil: Boolean
  """contact_person field predicates"""
  contactPerson: String
  contactPersonContains: String
  contactPersonContainsFold: String
  """contact_person_email field predicates"""
  contactPersonEmail: String
  contactPersonEmailContains: String
  contactPersonEmailContainsFold: String
  contactPersonEmailEqualFold: String
  contactPersonEmailGT: String
  contactPersonEmailGTE: String
  contactPersonEmailHasPrefix: String
  contactPersonEmailHasSuffix: String
  contactPersonEmailIn: [String!]
  contactPersonEmailIsNil: Boolean
  contactPersonEmailLT: String
  contactPersonEmailLTE: String
  contactPersonEmailNEQ: String
  contactPersonEmailNotIn: [String!]
  contactPersonEmailNotNil: Boolean
  contactPersonEqualFold: String
  contactPersonGT: String
  contactPersonGTE: String
  contactPersonHasPrefix: String
  contactPersonHasSuffix: String
  contactPersonIn: [String!]
  contactPersonIsNil: Boolean
  contactPersonLT: String
  contactPersonLTE: String
  contactPersonNEQ: String
  contactPersonNotIn: [String!]
  contactPersonNotNil: Boolean
  """contact_person_phone field predicates"""
  contactPersonPhone: String
  contactPersonPhoneContains: String
  contactPersonPhoneContainsFold: String
  contactPersonPhoneEqualFold: String
  contactPersonPhoneGT: String
  contactPersonPhoneGTE: String
  contactPersonPhoneHasPrefix: String
  contactPersonPhoneHasSuffix: String
  contactPersonPhoneIn: [String!]
  contactPersonPhoneIsNil: Boolean
  contactPersonPhoneLT: String
  contactPersonPhoneLTE: String
  contactPersonPhoneNEQ: String
  contactPersonPhoneNotIn: [String!]
  contactPersonPhoneNotNil: Boolean
  """contact_person_position field predicates"""
  contactPersonPosition: String
  contactPersonPositionContains: String
  contactPersonPositionContainsFold: String
  contactPersonPositionEqualFold: String
  contactPersonPositionGT: String
  contactPersonPositionGTE: String
  contactPersonPositionHasPrefix: String
  contactPersonPositionHasSuffix: String
  contactPersonPositionIn: [String!]
  contactPersonPositionIsNil: Boolean
  contactPersonPositionLT: String
  contactPersonPositionLTE: String
  contactPersonPositionNEQ: String
  contactPersonPositionNotIn: [String!]
  contactPersonPositionNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDIsNil: Boolean
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  createdByIDNotNil: Boolean
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  """approver edge predicates"""
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """sales edge predicates"""
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """industry field predicates"""
  industry: Int
  industryGT: Int
  industryGTE: Int
  industryIn: [Int!]
  industryIsNil: Boolean
  industryLT: Int
  industryLTE: Int
  industryNEQ: Int
  industryNotIn: [Int!]
  industryNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CustomerProfileWhereInput
  or: [CustomerProfileWhereInput!]
  """owner_type field predicates"""
  ownerType: Int
  ownerTypeGT: Int
  ownerTypeGTE: Int
  ownerTypeIn: [Int!]
  ownerTypeIsNil: Boolean
  ownerTypeLT: Int
  ownerTypeLTE: Int
  ownerTypeNEQ: Int
  ownerTypeNotIn: [Int!]
  ownerTypeNotNil: Boolean
  """sales_id field predicates"""
  salesID: ID
  salesIDContains: ID
  salesIDContainsFold: ID
  salesIDEqualFold: ID
  salesIDGT: ID
  salesIDGTE: ID
  salesIDHasPrefix: ID
  salesIDHasSuffix: ID
  salesIDIn: [ID!]
  salesIDIsNil: Boolean
  salesIDLT: ID
  salesIDLTE: ID
  salesIDNEQ: ID
  salesIDNotIn: [ID!]
  salesIDNotNil: Boolean
  """size field predicates"""
  size: Int
  sizeGT: Int
  sizeGTE: Int
  sizeIn: [Int!]
  sizeIsNil: Boolean
  sizeLT: Int
  sizeLTE: Int
  sizeNEQ: Int
  sizeNotIn: [Int!]
  sizeNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

"""
CustomerWhereInput is used for filtering Customer objects.
Input was generated by ent.
"""
input CustomerWhereInput {
  """active_profile_id field predicates"""
  activeProfileID: ID
  activeProfileIDContains: ID
  activeProfileIDContainsFold: ID
  activeProfileIDEqualFold: ID
  activeProfileIDGT: ID
  activeProfileIDGTE: ID
  activeProfileIDHasPrefix: ID
  activeProfileIDHasSuffix: ID
  activeProfileIDIn: [ID!]
  activeProfileIDIsNil: Boolean
  activeProfileIDLT: ID
  activeProfileIDLTE: ID
  activeProfileIDNEQ: ID
  activeProfileIDNotIn: [ID!]
  activeProfileIDNotNil: Boolean
  and: [CustomerWhereInput!]
  """approval_status field predicates"""
  approvalStatus: Int
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusIn: [Int!]
  approvalStatusLT: Int
  approvalStatusLTE: Int
  approvalStatusNEQ: Int
  approvalStatusNotIn: [Int!]
  """approver_id field predicates"""
  approverID: ID
  approverIDContains: ID
  approverIDContainsFold: ID
  approverIDEqualFold: ID
  approverIDGT: ID
  approverIDGTE: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIn: [ID!]
  approverIDIsNil: Boolean
  approverIDLT: ID
  approverIDLTE: ID
  approverIDNEQ: ID
  approverIDNotIn: [ID!]
  approverIDNotNil: Boolean
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  """contact_person field predicates"""
  contactPerson: String
  contactPersonContains: String
  contactPersonContainsFold: String
  """contact_person_email field predicates"""
  contactPersonEmail: String
  contactPersonEmailContains: String
  contactPersonEmailContainsFold: String
  contactPersonEmailEqualFold: String
  contactPersonEmailGT: String
  contactPersonEmailGTE: String
  contactPersonEmailHasPrefix: String
  contactPersonEmailHasSuffix: String
  contactPersonEmailIn: [String!]
  contactPersonEmailIsNil: Boolean
  contactPersonEmailLT: String
  contactPersonEmailLTE: String
  contactPersonEmailNEQ: String
  contactPersonEmailNotIn: [String!]
  contactPersonEmailNotNil: Boolean
  contactPersonEqualFold: String
  contactPersonGT: String
  contactPersonGTE: String
  contactPersonHasPrefix: String
  contactPersonHasSuffix: String
  contactPersonIn: [String!]
  contactPersonIsNil: Boolean
  contactPersonLT: String
  contactPersonLTE: String
  contactPersonNEQ: String
  contactPersonNotIn: [String!]
  contactPersonNotNil: Boolean
  """contact_person_phone field predicates"""
  contactPersonPhone: String
  contactPersonPhoneContains: String
  contactPersonPhoneContainsFold: String
  contactPersonPhoneEqualFold: String
  contactPersonPhoneGT: String
  contactPersonPhoneGTE: String
  contactPersonPhoneHasPrefix: String
  contactPersonPhoneHasSuffix: String
  contactPersonPhoneIn: [String!]
  contactPersonPhoneIsNil: Boolean
  contactPersonPhoneLT: String
  contactPersonPhoneLTE: String
  contactPersonPhoneNEQ: String
  contactPersonPhoneNotIn: [String!]
  contactPersonPhoneNotNil: Boolean
  """contact_person_position field predicates"""
  contactPersonPosition: String
  contactPersonPositionContains: String
  contactPersonPositionContainsFold: String
  contactPersonPositionEqualFold: String
  contactPersonPositionGT: String
  contactPersonPositionGTE: String
  contactPersonPositionHasPrefix: String
  contactPersonPositionHasSuffix: String
  contactPersonPositionIn: [String!]
  contactPersonPositionIsNil: Boolean
  contactPersonPositionLT: String
  contactPersonPositionLTE: String
  contactPersonPositionNEQ: String
  contactPersonPositionNotIn: [String!]
  contactPersonPositionNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDIsNil: Boolean
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  createdByIDNotNil: Boolean
  """active_profile edge predicates"""
  hasActiveProfile: Boolean
  hasActiveProfileWith: [CustomerProfileWhereInput!]
  """approver edge predicates"""
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """pending_profile edge predicates"""
  hasPendingProfile: Boolean
  hasPendingProfileWith: [CustomerProfileWhereInput!]
  """profiles edge predicates"""
  hasProfiles: Boolean
  hasProfilesWith: [CustomerProfileWhereInput!]
  """sales edge predicates"""
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """updated_by edge predicates"""
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """industry field predicates"""
  industry: Int
  industryGT: Int
  industryGTE: Int
  industryIn: [Int!]
  industryIsNil: Boolean
  industryLT: Int
  industryLTE: Int
  industryNEQ: Int
  industryNotIn: [Int!]
  industryNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: CustomerWhereInput
  or: [CustomerWhereInput!]
  """owner_type field predicates"""
  ownerType: Int
  ownerTypeGT: Int
  ownerTypeGTE: Int
  ownerTypeIn: [Int!]
  ownerTypeIsNil: Boolean
  ownerTypeLT: Int
  ownerTypeLTE: Int
  ownerTypeNEQ: Int
  ownerTypeNotIn: [Int!]
  ownerTypeNotNil: Boolean
  """pending_profile_id field predicates"""
  pendingProfileID: ID
  pendingProfileIDContains: ID
  pendingProfileIDContainsFold: ID
  pendingProfileIDEqualFold: ID
  pendingProfileIDGT: ID
  pendingProfileIDGTE: ID
  pendingProfileIDHasPrefix: ID
  pendingProfileIDHasSuffix: ID
  pendingProfileIDIn: [ID!]
  pendingProfileIDIsNil: Boolean
  pendingProfileIDLT: ID
  pendingProfileIDLTE: ID
  pendingProfileIDNEQ: ID
  pendingProfileIDNotIn: [ID!]
  pendingProfileIDNotNil: Boolean
  """sales_id field predicates"""
  salesID: ID
  salesIDContains: ID
  salesIDContainsFold: ID
  salesIDEqualFold: ID
  salesIDGT: ID
  salesIDGTE: ID
  salesIDHasPrefix: ID
  salesIDHasSuffix: ID
  salesIDIn: [ID!]
  salesIDIsNil: Boolean
  salesIDLT: ID
  salesIDLTE: ID
  salesIDNEQ: ID
  salesIDNotIn: [ID!]
  salesIDNotNil: Boolean
  """size field predicates"""
  size: Int
  sizeGT: Int
  sizeGTE: Int
  sizeIn: [Int!]
  sizeIsNil: Boolean
  sizeLT: Int
  sizeLTE: Int
  sizeNEQ: Int
  sizeNotIn: [Int!]
  sizeNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """updated_by_id field predicates"""
  updatedByID: ID
  updatedByIDContains: ID
  updatedByIDContainsFold: ID
  updatedByIDEqualFold: ID
  updatedByIDGT: ID
  updatedByIDGTE: ID
  updatedByIDHasPrefix: ID
  updatedByIDHasSuffix: ID
  updatedByIDIn: [ID!]
  updatedByIDIsNil: Boolean
  updatedByIDLT: ID
  updatedByIDLTE: ID
  updatedByIDNEQ: ID
  updatedByIDNotIn: [ID!]
  updatedByIDNotNil: Boolean
}

type District implements Node {
  adcode: Int!
  center: GeoJson
  city: City
  cityCode: Int!
  cityID: ID
  createdAt: Time!
  id: ID!
  name: String!
  plots(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Plots returned from the connection."""
    orderBy: PlotOrder
    """Filtering options for Plots returned from the connection."""
    where: PlotWhereInput
  ): PlotConnection!
  provCode: Int!
  province: Province!
  provinceID: ID!
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
}

"""A connection to a list of items."""
type DistrictConnection {
  """A list of edges."""
  edges: [DistrictEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type DistrictEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: District
}

"""Ordering options for District connections"""
input DistrictOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Districts."""
  field: DistrictOrderField!
}

"""Properties by which District connections can be ordered."""
enum DistrictOrderField {
  CREATED_AT
}

"""
DistrictWhereInput is used for filtering District objects.
Input was generated by ent.
"""
input DistrictWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [DistrictWhereInput!]
  """city_code field predicates"""
  cityCode: Int
  cityCodeGT: Int
  cityCodeGTE: Int
  cityCodeIn: [Int!]
  cityCodeLT: Int
  cityCodeLTE: Int
  cityCodeNEQ: Int
  cityCodeNotIn: [Int!]
  """city_id field predicates"""
  cityID: ID
  cityIDContains: ID
  cityIDContainsFold: ID
  cityIDEqualFold: ID
  cityIDGT: ID
  cityIDGTE: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIn: [ID!]
  cityIDIsNil: Boolean
  cityIDLT: ID
  cityIDLTE: ID
  cityIDNEQ: ID
  cityIDNotIn: [ID!]
  cityIDNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """city edge predicates"""
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """plots edge predicates"""
  hasPlots: Boolean
  hasPlotsWith: [PlotWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: DistrictWhereInput
  or: [DistrictWhereInput!]
  """prov_code field predicates"""
  provCode: Int
  provCodeGT: Int
  provCodeGTE: Int
  provCodeIn: [Int!]
  provCodeLT: Int
  provCodeLTE: Int
  provCodeNEQ: Int
  provCodeNotIn: [Int!]
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type FeishuUser {
  avatarUrl: String!
  email: String!
  name: String!
  openId: String!
}

type GeoJson {
  coordinates: [Float!]!
  type: String!
}

type Land implements Node {
  createdAt: Time!
  id: ID!
  updatedAt: Time!
}

"""Ordering options for Land connections"""
input LandOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Lands."""
  field: LandOrderField!
}

"""Properties by which Land connections can be ordered."""
enum LandOrderField {
  CREATED_AT
}

"""
LandWhereInput is used for filtering Land objects.
Input was generated by ent.
"""
input LandWhereInput {
  and: [LandWhereInput!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  not: LandWhereInput
  or: [LandWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Location {
  address: String!
  city: City
  district: District!
  id: ID!
  lat: Float!
  lng: Float!
  name: String!
  province: Province!
}

input LoseTenderInput {
  competitors: [WinLostTenderCompetitorInput!]!
  tenderAmount: Float!
  winCompetitor: WinLostTenderCompetitorInput!
}

type Mutation {
  approveCustomer(id: ID!): Customer!
  approveTender(id: ID!): Tender!
  createArea(input: CreateAreaInput!): AreaConnection!
  createCompetitor(input: CreateCompetitorInput!): Competitor!
  createCustomer(input: CreateCustomerInput!): CustomerConnection!
  createCustomerV2(customerInput: CreateCustomerInput!, profileInput: CreateCustomerProfileInput!): Customer!
  createPlot(geoBounds: [[Float!]!], input: CreatePlotInput!): PlotConnection!
  createTender(imageFileNames: [String!]!, profileInput: CreateTenderProfileInput!, tenderInput: CreateTenderInput!): Tender!
  createTenderV2(attachmentFileNames: [String!]!, imageFileNames: [String!]!, profileInput: CreateTenderProfileInput!, tenderInput: CreateTenderInput!): Tender!
  createUser(input: CreateUserInput!): UserConnection!
  createVisitRecord(input: CreateVisitRecordInput!): VisitRecordConnection!
  deleteCompetitor(id: ID!): Competitor!
  deleteCustomer(id: ID!): Customer!
  deletePlot(id: ID!): Plot!
  deleteUser(id: ID!): User!
  deleteVisitRecord(id: ID!): VisitRecord!
  loseTender(id: ID!, input: LoseTenderInput!): Tender!
  rejectCustomer(id: ID!): Customer!
  rejectTender(id: ID!): Tender!
  updateArea(id: ID!, input: UpdateAreaInput!): Area!
  updateCompetitor(id: ID!, input: UpdateCompetitorInput!): Competitor!
  updateCustomer(id: ID!, input: UpdateCustomerInput!): Customer!
  updateCustomerV2(customerInput: UpdateCustomerInput!, id: ID!, profileInput: CreateCustomerProfileInput!): Customer!
  updatePlot(geoBounds: [[Float!]!], id: ID!, input: UpdatePlotInput!): Plot!
  updateProject(id: ID!, input: UpdateProjectInput!): Project!
  updateTender(id: ID!, imageFileNames: [String!], profileInput: CreateTenderProfileInput!, removeImageFileNames: [String!], tenderInput: UpdateTenderInput!): Tender!
  updateTenderV2(attachmentFileNames: [String!]!, id: ID!, imageFileNames: [String!]!, profileInput: CreateTenderProfileInput!, removeAttachmentFileNames: [String!], removeImageFileNames: [String!], tenderInput: UpdateTenderInput!): Tender!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  updateVisitRecord(id: ID!, input: UpdateVisitRecordInput!): VisitRecord!
  voidTender(id: ID!): Tender!
  winTender(id: ID!, input: WinTenderInput!): Tender!
}

"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "cscd-bds/store/ent.Noder") {
  """The id of the object."""
  id: ID!
}

type Operation implements Node {
  """成交额累计"""
  cjeLj: Float
  """成交额预算"""
  cjeYs: Float
  createdAt: Time!
  id: ID!
  updatedAt: Time!
  """现金流累计"""
  xjlLj: Float
  """现金流预算"""
  xjlYs: Float
  """项目管理费"""
  xmglf: Float
  """项目设计费"""
  xmsjf: Float
  """营业额累计"""
  yyeLj: Float
  """营业额预算"""
  yyeYs: Float
}

"""A connection to a list of items."""
type OperationConnection {
  """A list of edges."""
  edges: [OperationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type OperationEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Operation
}

"""Ordering options for Operation connections"""
input OperationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Operations."""
  field: OperationOrderField!
}

"""Properties by which Operation connections can be ordered."""
enum OperationOrderField {
  CREATED_AT
}

"""
OperationWhereInput is used for filtering Operation objects.
Input was generated by ent.
"""
input OperationWhereInput {
  and: [OperationWhereInput!]
  """cje_lj field predicates"""
  cjeLj: Float
  cjeLjGT: Float
  cjeLjGTE: Float
  cjeLjIn: [Float!]
  cjeLjIsNil: Boolean
  cjeLjLT: Float
  cjeLjLTE: Float
  cjeLjNEQ: Float
  cjeLjNotIn: [Float!]
  cjeLjNotNil: Boolean
  """cje_ys field predicates"""
  cjeYs: Float
  cjeYsGT: Float
  cjeYsGTE: Float
  cjeYsIn: [Float!]
  cjeYsIsNil: Boolean
  cjeYsLT: Float
  cjeYsLTE: Float
  cjeYsNEQ: Float
  cjeYsNotIn: [Float!]
  cjeYsNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  not: OperationWhereInput
  or: [OperationWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """xjl_lj field predicates"""
  xjlLj: Float
  xjlLjGT: Float
  xjlLjGTE: Float
  xjlLjIn: [Float!]
  xjlLjIsNil: Boolean
  xjlLjLT: Float
  xjlLjLTE: Float
  xjlLjNEQ: Float
  xjlLjNotIn: [Float!]
  xjlLjNotNil: Boolean
  """xjl_ys field predicates"""
  xjlYs: Float
  xjlYsGT: Float
  xjlYsGTE: Float
  xjlYsIn: [Float!]
  xjlYsIsNil: Boolean
  xjlYsLT: Float
  xjlYsLTE: Float
  xjlYsNEQ: Float
  xjlYsNotIn: [Float!]
  xjlYsNotNil: Boolean
  """xmglf field predicates"""
  xmglf: Float
  xmglfGT: Float
  xmglfGTE: Float
  xmglfIn: [Float!]
  xmglfIsNil: Boolean
  xmglfLT: Float
  xmglfLTE: Float
  xmglfNEQ: Float
  xmglfNotIn: [Float!]
  xmglfNotNil: Boolean
  """xmsjf field predicates"""
  xmsjf: Float
  xmsjfGT: Float
  xmsjfGTE: Float
  xmsjfIn: [Float!]
  xmsjfIsNil: Boolean
  xmsjfLT: Float
  xmsjfLTE: Float
  xmsjfNEQ: Float
  xmsjfNotIn: [Float!]
  xmsjfNotNil: Boolean
  """yye_lj field predicates"""
  yyeLj: Float
  yyeLjGT: Float
  yyeLjGTE: Float
  yyeLjIn: [Float!]
  yyeLjIsNil: Boolean
  yyeLjLT: Float
  yyeLjLTE: Float
  yyeLjNEQ: Float
  yyeLjNotIn: [Float!]
  yyeLjNotNil: Boolean
  """yye_ys field predicates"""
  yyeYs: Float
  yyeYsGT: Float
  yyeYsGTE: Float
  yyeYsIn: [Float!]
  yyeYsIsNil: Boolean
  yyeYsLT: Float
  yyeYsLTE: Float
  yyeYsNEQ: Float
  yyeYsNotIn: [Float!]
  yyeYsNotNil: Boolean
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}

type POI {
  address: String!
  id: ID!
  location: Location!
  name: String!
}

"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
}

type Plot implements Node {
  colorHex: String!
  createdAt: Time!
  district: District!
  districtID: ID!
  geoBounds: [[Float!]!]
  id: ID!
  name: String!
  updatedAt: Time!
}

"""A connection to a list of items."""
type PlotConnection {
  """A list of edges."""
  edges: [PlotEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type PlotEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Plot
}

"""Ordering options for Plot connections"""
input PlotOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Plots."""
  field: PlotOrderField!
}

"""Properties by which Plot connections can be ordered."""
enum PlotOrderField {
  CREATED_AT
}

"""
PlotWhereInput is used for filtering Plot objects.
Input was generated by ent.
"""
input PlotWhereInput {
  and: [PlotWhereInput!]
  """color_hex field predicates"""
  colorHex: String
  colorHexContains: String
  colorHexContainsFold: String
  colorHexEqualFold: String
  colorHexGT: String
  colorHexGTE: String
  colorHexHasPrefix: String
  colorHexHasSuffix: String
  colorHexIn: [String!]
  colorHexLT: String
  colorHexLTE: String
  colorHexNEQ: String
  colorHexNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """district_id field predicates"""
  districtID: ID
  districtIDContains: ID
  districtIDContainsFold: ID
  districtIDEqualFold: ID
  districtIDGT: ID
  districtIDGTE: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIn: [ID!]
  districtIDLT: ID
  districtIDLTE: ID
  districtIDNEQ: ID
  districtIDNotIn: [ID!]
  """district edge predicates"""
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: PlotWhereInput
  or: [PlotWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type PotentialTender implements Node {
  address: String
  amount: String
  contact: String
  contactAddress: String
  contactEmail: String
  contactPhone: String
  createdAt: Time!
  date: String
  description: String
  id: ID!
  location: String
  refURL: String!
  requirement: String
  size: String
  status: String
  title: String!
  type: String
  updatedAt: Time!
}

"""A connection to a list of items."""
type PotentialTenderConnection {
  """A list of edges."""
  edges: [PotentialTenderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type PotentialTenderEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: PotentialTender
}

"""Ordering options for PotentialTender connections"""
input PotentialTenderOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order PotentialTenders."""
  field: PotentialTenderOrderField!
}

"""Properties by which PotentialTender connections can be ordered."""
enum PotentialTenderOrderField {
  CREATED_AT
}

"""
PotentialTenderWhereInput is used for filtering PotentialTender objects.
Input was generated by ent.
"""
input PotentialTenderWhereInput {
  """address field predicates"""
  address: String
  addressContains: String
  addressContainsFold: String
  addressEqualFold: String
  addressGT: String
  addressGTE: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIn: [String!]
  addressIsNil: Boolean
  addressLT: String
  addressLTE: String
  addressNEQ: String
  addressNotIn: [String!]
  addressNotNil: Boolean
  """amount field predicates"""
  amount: String
  amountContains: String
  amountContainsFold: String
  amountEqualFold: String
  amountGT: String
  amountGTE: String
  amountHasPrefix: String
  amountHasSuffix: String
  amountIn: [String!]
  amountIsNil: Boolean
  amountLT: String
  amountLTE: String
  amountNEQ: String
  amountNotIn: [String!]
  amountNotNil: Boolean
  and: [PotentialTenderWhereInput!]
  """contact field predicates"""
  contact: String
  """contact_address field predicates"""
  contactAddress: String
  contactAddressContains: String
  contactAddressContainsFold: String
  contactAddressEqualFold: String
  contactAddressGT: String
  contactAddressGTE: String
  contactAddressHasPrefix: String
  contactAddressHasSuffix: String
  contactAddressIn: [String!]
  contactAddressIsNil: Boolean
  contactAddressLT: String
  contactAddressLTE: String
  contactAddressNEQ: String
  contactAddressNotIn: [String!]
  contactAddressNotNil: Boolean
  contactContains: String
  contactContainsFold: String
  """contact_email field predicates"""
  contactEmail: String
  contactEmailContains: String
  contactEmailContainsFold: String
  contactEmailEqualFold: String
  contactEmailGT: String
  contactEmailGTE: String
  contactEmailHasPrefix: String
  contactEmailHasSuffix: String
  contactEmailIn: [String!]
  contactEmailIsNil: Boolean
  contactEmailLT: String
  contactEmailLTE: String
  contactEmailNEQ: String
  contactEmailNotIn: [String!]
  contactEmailNotNil: Boolean
  contactEqualFold: String
  contactGT: String
  contactGTE: String
  contactHasPrefix: String
  contactHasSuffix: String
  contactIn: [String!]
  contactIsNil: Boolean
  contactLT: String
  contactLTE: String
  contactNEQ: String
  contactNotIn: [String!]
  contactNotNil: Boolean
  """contact_phone field predicates"""
  contactPhone: String
  contactPhoneContains: String
  contactPhoneContainsFold: String
  contactPhoneEqualFold: String
  contactPhoneGT: String
  contactPhoneGTE: String
  contactPhoneHasPrefix: String
  contactPhoneHasSuffix: String
  contactPhoneIn: [String!]
  contactPhoneIsNil: Boolean
  contactPhoneLT: String
  contactPhoneLTE: String
  contactPhoneNEQ: String
  contactPhoneNotIn: [String!]
  contactPhoneNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """date field predicates"""
  date: String
  dateContains: String
  dateContainsFold: String
  dateEqualFold: String
  dateGT: String
  dateGTE: String
  dateHasPrefix: String
  dateHasSuffix: String
  dateIn: [String!]
  dateIsNil: Boolean
  dateLT: String
  dateLTE: String
  dateNEQ: String
  dateNotIn: [String!]
  dateNotNil: Boolean
  """description field predicates"""
  description: String
  descriptionContains: String
  descriptionContainsFold: String
  descriptionEqualFold: String
  descriptionGT: String
  descriptionGTE: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIn: [String!]
  descriptionIsNil: Boolean
  descriptionLT: String
  descriptionLTE: String
  descriptionNEQ: String
  descriptionNotIn: [String!]
  descriptionNotNil: Boolean
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """location field predicates"""
  location: String
  locationContains: String
  locationContainsFold: String
  locationEqualFold: String
  locationGT: String
  locationGTE: String
  locationHasPrefix: String
  locationHasSuffix: String
  locationIn: [String!]
  locationIsNil: Boolean
  locationLT: String
  locationLTE: String
  locationNEQ: String
  locationNotIn: [String!]
  locationNotNil: Boolean
  not: PotentialTenderWhereInput
  or: [PotentialTenderWhereInput!]
  """ref_url field predicates"""
  refURL: String
  refURLContains: String
  refURLContainsFold: String
  refURLEqualFold: String
  refURLGT: String
  refURLGTE: String
  refURLHasPrefix: String
  refURLHasSuffix: String
  refURLIn: [String!]
  refURLLT: String
  refURLLTE: String
  refURLNEQ: String
  refURLNotIn: [String!]
  """requirement field predicates"""
  requirement: String
  requirementContains: String
  requirementContainsFold: String
  requirementEqualFold: String
  requirementGT: String
  requirementGTE: String
  requirementHasPrefix: String
  requirementHasSuffix: String
  requirementIn: [String!]
  requirementIsNil: Boolean
  requirementLT: String
  requirementLTE: String
  requirementNEQ: String
  requirementNotIn: [String!]
  requirementNotNil: Boolean
  """size field predicates"""
  size: String
  sizeContains: String
  sizeContainsFold: String
  sizeEqualFold: String
  sizeGT: String
  sizeGTE: String
  sizeHasPrefix: String
  sizeHasSuffix: String
  sizeIn: [String!]
  sizeIsNil: Boolean
  sizeLT: String
  sizeLTE: String
  sizeNEQ: String
  sizeNotIn: [String!]
  sizeNotNil: Boolean
  """status field predicates"""
  status: String
  statusContains: String
  statusContainsFold: String
  statusEqualFold: String
  statusGT: String
  statusGTE: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIn: [String!]
  statusIsNil: Boolean
  statusLT: String
  statusLTE: String
  statusNEQ: String
  statusNotIn: [String!]
  statusNotNil: Boolean
  """title field predicates"""
  title: String
  titleContains: String
  titleContainsFold: String
  titleEqualFold: String
  titleGT: String
  titleGTE: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIn: [String!]
  titleLT: String
  titleLTE: String
  titleNEQ: String
  titleNotIn: [String!]
  """type field predicates"""
  type: String
  typeContains: String
  typeContainsFold: String
  typeEqualFold: String
  typeGT: String
  typeGTE: String
  typeHasPrefix: String
  typeHasSuffix: String
  typeIn: [String!]
  typeIsNil: Boolean
  typeLT: String
  typeLTE: String
  typeNEQ: String
  typeNotIn: [String!]
  typeNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Project implements Node {
  """累計扣款"""
  accumulateDeduction: Float
  """散件已完成數量"""
  bulkMaterialsCompletedQuantity: Float
  """散件總訂貨數量"""
  bulkMaterialsTotalOrderQuantity: Float
  """散件未完成數量"""
  bulkMaterialsUncompletedQuantity: Float
  code: String!
  """合約补料數量"""
  contractSupplementaryCount: Int
  """总包VO數量"""
  contractorVoCount: Int
  createdAt: Time!
  """BD圖紙完成數量"""
  diagramBdFinishCount: Int
  """BD圖紙總數"""
  diagramBdTotalCount: Int
  """C版批圖率分母"""
  diagramCApprovalRatioDenominator: Int
  """C版批圖率分子"""
  diagramCApprovalRatioNumerator: Int
  """施工圖紙完成數量"""
  diagramConstructionFinishCount: Int
  """施工圖紙總數"""
  diagramConstructionTotalCount: Int
  """加工圖完成數量"""
  diagramProcessingFinishCount: Int
  """加工圖總數"""
  diagramProcessingTotalCount: Int
  id: ID!
  """是否完成"""
  isFinished: Boolean!
  """業主VO數量"""
  ownerVoCount: Int
  """糧期"""
  payDate: Time
  """执修费"""
  repairFee: Float
  """營業額累計完成"""
  revenueAccumulatedCompleted: Float
  """營業額當年完成"""
  revenueCurrentYearCompleted: Float
  """營業額KPI"""
  revenueKpi: Float
  """分判VA數量"""
  subcontractorVaCount: Int
  """單元件安裝數量"""
  unitComponentInstallation: Float
  """單元件生產數量"""
  unitComponentProduction: Float
  """單元件總數"""
  unitComponentTotal: Float
  """單元件庫存累計"""
  unitInventoryTotal: Float
  updatedAt: Time!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder
    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
}

"""A connection to a list of items."""
type ProjectConnection {
  """A list of edges."""
  edges: [ProjectEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type ProjectEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Project
}

"""Ordering options for Project connections"""
input ProjectOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Projects."""
  field: ProjectOrderField!
}

"""Properties by which Project connections can be ordered."""
enum ProjectOrderField {
  CODE
  CREATED_AT
}

"""
ProjectWhereInput is used for filtering Project objects.
Input was generated by ent.
"""
input ProjectWhereInput {
  """accumulate_deduction field predicates"""
  accumulateDeduction: Float
  accumulateDeductionGT: Float
  accumulateDeductionGTE: Float
  accumulateDeductionIn: [Float!]
  accumulateDeductionIsNil: Boolean
  accumulateDeductionLT: Float
  accumulateDeductionLTE: Float
  accumulateDeductionNEQ: Float
  accumulateDeductionNotIn: [Float!]
  accumulateDeductionNotNil: Boolean
  and: [ProjectWhereInput!]
  """bulk_materials_completed_quantity field predicates"""
  bulkMaterialsCompletedQuantity: Float
  bulkMaterialsCompletedQuantityGT: Float
  bulkMaterialsCompletedQuantityGTE: Float
  bulkMaterialsCompletedQuantityIn: [Float!]
  bulkMaterialsCompletedQuantityIsNil: Boolean
  bulkMaterialsCompletedQuantityLT: Float
  bulkMaterialsCompletedQuantityLTE: Float
  bulkMaterialsCompletedQuantityNEQ: Float
  bulkMaterialsCompletedQuantityNotIn: [Float!]
  bulkMaterialsCompletedQuantityNotNil: Boolean
  """bulk_materials_total_order_quantity field predicates"""
  bulkMaterialsTotalOrderQuantity: Float
  bulkMaterialsTotalOrderQuantityGT: Float
  bulkMaterialsTotalOrderQuantityGTE: Float
  bulkMaterialsTotalOrderQuantityIn: [Float!]
  bulkMaterialsTotalOrderQuantityIsNil: Boolean
  bulkMaterialsTotalOrderQuantityLT: Float
  bulkMaterialsTotalOrderQuantityLTE: Float
  bulkMaterialsTotalOrderQuantityNEQ: Float
  bulkMaterialsTotalOrderQuantityNotIn: [Float!]
  bulkMaterialsTotalOrderQuantityNotNil: Boolean
  """bulk_materials_uncompleted_quantity field predicates"""
  bulkMaterialsUncompletedQuantity: Float
  bulkMaterialsUncompletedQuantityGT: Float
  bulkMaterialsUncompletedQuantityGTE: Float
  bulkMaterialsUncompletedQuantityIn: [Float!]
  bulkMaterialsUncompletedQuantityIsNil: Boolean
  bulkMaterialsUncompletedQuantityLT: Float
  bulkMaterialsUncompletedQuantityLTE: Float
  bulkMaterialsUncompletedQuantityNEQ: Float
  bulkMaterialsUncompletedQuantityNotIn: [Float!]
  bulkMaterialsUncompletedQuantityNotNil: Boolean
  """code field predicates"""
  code: String
  codeContains: String
  codeContainsFold: String
  codeEqualFold: String
  codeGT: String
  codeGTE: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIn: [String!]
  codeLT: String
  codeLTE: String
  codeNEQ: String
  codeNotIn: [String!]
  """contract_supplementary_count field predicates"""
  contractSupplementaryCount: Int
  contractSupplementaryCountGT: Int
  contractSupplementaryCountGTE: Int
  contractSupplementaryCountIn: [Int!]
  contractSupplementaryCountIsNil: Boolean
  contractSupplementaryCountLT: Int
  contractSupplementaryCountLTE: Int
  contractSupplementaryCountNEQ: Int
  contractSupplementaryCountNotIn: [Int!]
  contractSupplementaryCountNotNil: Boolean
  """contractor_vo_count field predicates"""
  contractorVoCount: Int
  contractorVoCountGT: Int
  contractorVoCountGTE: Int
  contractorVoCountIn: [Int!]
  contractorVoCountIsNil: Boolean
  contractorVoCountLT: Int
  contractorVoCountLTE: Int
  contractorVoCountNEQ: Int
  contractorVoCountNotIn: [Int!]
  contractorVoCountNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """diagram_bd_finish_count field predicates"""
  diagramBdFinishCount: Int
  diagramBdFinishCountGT: Int
  diagramBdFinishCountGTE: Int
  diagramBdFinishCountIn: [Int!]
  diagramBdFinishCountIsNil: Boolean
  diagramBdFinishCountLT: Int
  diagramBdFinishCountLTE: Int
  diagramBdFinishCountNEQ: Int
  diagramBdFinishCountNotIn: [Int!]
  diagramBdFinishCountNotNil: Boolean
  """diagram_bd_total_count field predicates"""
  diagramBdTotalCount: Int
  diagramBdTotalCountGT: Int
  diagramBdTotalCountGTE: Int
  diagramBdTotalCountIn: [Int!]
  diagramBdTotalCountIsNil: Boolean
  diagramBdTotalCountLT: Int
  diagramBdTotalCountLTE: Int
  diagramBdTotalCountNEQ: Int
  diagramBdTotalCountNotIn: [Int!]
  diagramBdTotalCountNotNil: Boolean
  """diagram_c_approval_ratio_denominator field predicates"""
  diagramCApprovalRatioDenominator: Int
  diagramCApprovalRatioDenominatorGT: Int
  diagramCApprovalRatioDenominatorGTE: Int
  diagramCApprovalRatioDenominatorIn: [Int!]
  diagramCApprovalRatioDenominatorIsNil: Boolean
  diagramCApprovalRatioDenominatorLT: Int
  diagramCApprovalRatioDenominatorLTE: Int
  diagramCApprovalRatioDenominatorNEQ: Int
  diagramCApprovalRatioDenominatorNotIn: [Int!]
  diagramCApprovalRatioDenominatorNotNil: Boolean
  """diagram_c_approval_ratio_numerator field predicates"""
  diagramCApprovalRatioNumerator: Int
  diagramCApprovalRatioNumeratorGT: Int
  diagramCApprovalRatioNumeratorGTE: Int
  diagramCApprovalRatioNumeratorIn: [Int!]
  diagramCApprovalRatioNumeratorIsNil: Boolean
  diagramCApprovalRatioNumeratorLT: Int
  diagramCApprovalRatioNumeratorLTE: Int
  diagramCApprovalRatioNumeratorNEQ: Int
  diagramCApprovalRatioNumeratorNotIn: [Int!]
  diagramCApprovalRatioNumeratorNotNil: Boolean
  """diagram_construction_finish_count field predicates"""
  diagramConstructionFinishCount: Int
  diagramConstructionFinishCountGT: Int
  diagramConstructionFinishCountGTE: Int
  diagramConstructionFinishCountIn: [Int!]
  diagramConstructionFinishCountIsNil: Boolean
  diagramConstructionFinishCountLT: Int
  diagramConstructionFinishCountLTE: Int
  diagramConstructionFinishCountNEQ: Int
  diagramConstructionFinishCountNotIn: [Int!]
  diagramConstructionFinishCountNotNil: Boolean
  """diagram_construction_total_count field predicates"""
  diagramConstructionTotalCount: Int
  diagramConstructionTotalCountGT: Int
  diagramConstructionTotalCountGTE: Int
  diagramConstructionTotalCountIn: [Int!]
  diagramConstructionTotalCountIsNil: Boolean
  diagramConstructionTotalCountLT: Int
  diagramConstructionTotalCountLTE: Int
  diagramConstructionTotalCountNEQ: Int
  diagramConstructionTotalCountNotIn: [Int!]
  diagramConstructionTotalCountNotNil: Boolean
  """diagram_processing_finish_count field predicates"""
  diagramProcessingFinishCount: Int
  diagramProcessingFinishCountGT: Int
  diagramProcessingFinishCountGTE: Int
  diagramProcessingFinishCountIn: [Int!]
  diagramProcessingFinishCountIsNil: Boolean
  diagramProcessingFinishCountLT: Int
  diagramProcessingFinishCountLTE: Int
  diagramProcessingFinishCountNEQ: Int
  diagramProcessingFinishCountNotIn: [Int!]
  diagramProcessingFinishCountNotNil: Boolean
  """diagram_processing_total_count field predicates"""
  diagramProcessingTotalCount: Int
  diagramProcessingTotalCountGT: Int
  diagramProcessingTotalCountGTE: Int
  diagramProcessingTotalCountIn: [Int!]
  diagramProcessingTotalCountIsNil: Boolean
  diagramProcessingTotalCountLT: Int
  diagramProcessingTotalCountLTE: Int
  diagramProcessingTotalCountNEQ: Int
  diagramProcessingTotalCountNotIn: [Int!]
  diagramProcessingTotalCountNotNil: Boolean
  """users edge predicates"""
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """is_finished field predicates"""
  isFinished: Boolean
  isFinishedNEQ: Boolean
  not: ProjectWhereInput
  or: [ProjectWhereInput!]
  """owner_vo_count field predicates"""
  ownerVoCount: Int
  ownerVoCountGT: Int
  ownerVoCountGTE: Int
  ownerVoCountIn: [Int!]
  ownerVoCountIsNil: Boolean
  ownerVoCountLT: Int
  ownerVoCountLTE: Int
  ownerVoCountNEQ: Int
  ownerVoCountNotIn: [Int!]
  ownerVoCountNotNil: Boolean
  """pay_date field predicates"""
  payDate: Time
  payDateGT: Time
  payDateGTE: Time
  payDateIn: [Time!]
  payDateIsNil: Boolean
  payDateLT: Time
  payDateLTE: Time
  payDateNEQ: Time
  payDateNotIn: [Time!]
  payDateNotNil: Boolean
  """repair_fee field predicates"""
  repairFee: Float
  repairFeeGT: Float
  repairFeeGTE: Float
  repairFeeIn: [Float!]
  repairFeeIsNil: Boolean
  repairFeeLT: Float
  repairFeeLTE: Float
  repairFeeNEQ: Float
  repairFeeNotIn: [Float!]
  repairFeeNotNil: Boolean
  """revenue_accumulated_completed field predicates"""
  revenueAccumulatedCompleted: Float
  revenueAccumulatedCompletedGT: Float
  revenueAccumulatedCompletedGTE: Float
  revenueAccumulatedCompletedIn: [Float!]
  revenueAccumulatedCompletedIsNil: Boolean
  revenueAccumulatedCompletedLT: Float
  revenueAccumulatedCompletedLTE: Float
  revenueAccumulatedCompletedNEQ: Float
  revenueAccumulatedCompletedNotIn: [Float!]
  revenueAccumulatedCompletedNotNil: Boolean
  """revenue_current_year_completed field predicates"""
  revenueCurrentYearCompleted: Float
  revenueCurrentYearCompletedGT: Float
  revenueCurrentYearCompletedGTE: Float
  revenueCurrentYearCompletedIn: [Float!]
  revenueCurrentYearCompletedIsNil: Boolean
  revenueCurrentYearCompletedLT: Float
  revenueCurrentYearCompletedLTE: Float
  revenueCurrentYearCompletedNEQ: Float
  revenueCurrentYearCompletedNotIn: [Float!]
  revenueCurrentYearCompletedNotNil: Boolean
  """revenue_kpi field predicates"""
  revenueKpi: Float
  revenueKpiGT: Float
  revenueKpiGTE: Float
  revenueKpiIn: [Float!]
  revenueKpiIsNil: Boolean
  revenueKpiLT: Float
  revenueKpiLTE: Float
  revenueKpiNEQ: Float
  revenueKpiNotIn: [Float!]
  revenueKpiNotNil: Boolean
  """subcontractor_va_count field predicates"""
  subcontractorVaCount: Int
  subcontractorVaCountGT: Int
  subcontractorVaCountGTE: Int
  subcontractorVaCountIn: [Int!]
  subcontractorVaCountIsNil: Boolean
  subcontractorVaCountLT: Int
  subcontractorVaCountLTE: Int
  subcontractorVaCountNEQ: Int
  subcontractorVaCountNotIn: [Int!]
  subcontractorVaCountNotNil: Boolean
  """unit_component_installation field predicates"""
  unitComponentInstallation: Float
  unitComponentInstallationGT: Float
  unitComponentInstallationGTE: Float
  unitComponentInstallationIn: [Float!]
  unitComponentInstallationIsNil: Boolean
  unitComponentInstallationLT: Float
  unitComponentInstallationLTE: Float
  unitComponentInstallationNEQ: Float
  unitComponentInstallationNotIn: [Float!]
  unitComponentInstallationNotNil: Boolean
  """unit_component_production field predicates"""
  unitComponentProduction: Float
  unitComponentProductionGT: Float
  unitComponentProductionGTE: Float
  unitComponentProductionIn: [Float!]
  unitComponentProductionIsNil: Boolean
  unitComponentProductionLT: Float
  unitComponentProductionLTE: Float
  unitComponentProductionNEQ: Float
  unitComponentProductionNotIn: [Float!]
  unitComponentProductionNotNil: Boolean
  """unit_component_total field predicates"""
  unitComponentTotal: Float
  unitComponentTotalGT: Float
  unitComponentTotalGTE: Float
  unitComponentTotalIn: [Float!]
  unitComponentTotalIsNil: Boolean
  unitComponentTotalLT: Float
  unitComponentTotalLTE: Float
  unitComponentTotalNEQ: Float
  unitComponentTotalNotIn: [Float!]
  unitComponentTotalNotNil: Boolean
  """unit_inventory_total field predicates"""
  unitInventoryTotal: Float
  unitInventoryTotalGT: Float
  unitInventoryTotalGTE: Float
  unitInventoryTotalIn: [Float!]
  unitInventoryTotalIsNil: Boolean
  unitInventoryTotalLT: Float
  unitInventoryTotalLTE: Float
  unitInventoryTotalNEQ: Float
  unitInventoryTotalNotIn: [Float!]
  unitInventoryTotalNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Province implements Node {
  adcode: Int!
  area: Area
  areaID: ID
  center: GeoJson
  cities(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Cities returned from the connection."""
    orderBy: CityOrder
    """Filtering options for Cities returned from the connection."""
    where: CityWhereInput
  ): CityConnection!
  country: Country!
  countryID: ID!
  createdAt: Time!
  districts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Districts returned from the connection."""
    orderBy: DistrictOrder
    """Filtering options for Districts returned from the connection."""
    where: DistrictWhereInput
  ): DistrictConnection!
  id: ID!
  name: String!
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
}

"""A connection to a list of items."""
type ProvinceConnection {
  """A list of edges."""
  edges: [ProvinceEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type ProvinceEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Province
}

"""Ordering options for Province connections"""
input ProvinceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Provinces."""
  field: ProvinceOrderField!
}

"""Properties by which Province connections can be ordered."""
enum ProvinceOrderField {
  CREATED_AT
}

"""
ProvinceWhereInput is used for filtering Province objects.
Input was generated by ent.
"""
input ProvinceWhereInput {
  """adcode field predicates"""
  adcode: Int
  adcodeGT: Int
  adcodeGTE: Int
  adcodeIn: [Int!]
  adcodeLT: Int
  adcodeLTE: Int
  adcodeNEQ: Int
  adcodeNotIn: [Int!]
  and: [ProvinceWhereInput!]
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDIsNil: Boolean
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  areaIDNotNil: Boolean
  """country_id field predicates"""
  countryID: ID
  countryIDContains: ID
  countryIDContainsFold: ID
  countryIDEqualFold: ID
  countryIDGT: ID
  countryIDGTE: ID
  countryIDHasPrefix: ID
  countryIDHasSuffix: ID
  countryIDIn: [ID!]
  countryIDLT: ID
  countryIDLTE: ID
  countryIDNEQ: ID
  countryIDNotIn: [ID!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """cities edge predicates"""
  hasCities: Boolean
  hasCitiesWith: [CityWhereInput!]
  """country edge predicates"""
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
  """districts edge predicates"""
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: ProvinceWhereInput
  or: [ProvinceWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

type Query {
  amapRegeo(lat: Float!, lng: Float!): [Location!]!
  areas(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Areas returned from the connection."""
    orderBy: AreaOrder
    """Filtering options for Areas returned from the connection."""
    where: AreaWhereInput
  ): AreaConnection!
  biToken: String!
  cities(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Cities returned from the connection."""
    orderBy: CityOrder
    """Filtering options for Cities returned from the connection."""
    where: CityWhereInput
  ): CityConnection!
  competitors(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Competitors returned from the connection."""
    orderBy: [CompetitorOrder!]
    """Filtering options for Competitors returned from the connection."""
    where: CompetitorWhereInput
  ): CompetitorConnection!
  countries(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Countries returned from the connection."""
    orderBy: CountryOrder
    """Filtering options for Countries returned from the connection."""
    where: CountryWhereInput
  ): CountryConnection!
  customerProfiles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for CustomerProfiles returned from the connection."""
    orderBy: [CustomerProfileOrder!]
    """Filtering options for CustomerProfiles returned from the connection."""
    where: CustomerProfileWhereInput
  ): CustomerProfileConnection!
  customers(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Customers returned from the connection."""
    orderBy: [CustomerOrder!]
    """Filtering options for Customers returned from the connection."""
    where: CustomerWhereInput
  ): CustomerConnection!
  districts(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Districts returned from the connection."""
    orderBy: DistrictOrder
    """Filtering options for Districts returned from the connection."""
    where: DistrictWhereInput
  ): DistrictConnection!
  inputtips(areaId: ID!, keyword: String!): [Location!]!
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  operations(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Operations returned from the connection."""
    orderBy: OperationOrder
    """Filtering options for Operations returned from the connection."""
    where: OperationWhereInput
  ): OperationConnection!
  plots(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Plots returned from the connection."""
    orderBy: PlotOrder
    """Filtering options for Plots returned from the connection."""
    where: PlotWhereInput
  ): PlotConnection!
  potentialTenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for PotentialTenders returned from the connection."""
    orderBy: [PotentialTenderOrder!]
    """Filtering options for PotentialTenders returned from the connection."""
    where: PotentialTenderWhereInput
  ): PotentialTenderConnection!
  projects(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Projects returned from the connection."""
    orderBy: [ProjectOrder!]
    """Filtering options for Projects returned from the connection."""
    where: ProjectWhereInput
  ): ProjectConnection!
  provinces(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Provinces returned from the connection."""
    orderBy: ProvinceOrder
    """Filtering options for Provinces returned from the connection."""
    where: ProvinceWhereInput
  ): ProvinceConnection!
  searchFeishuUser(keyword: String!): [FeishuUser!]!
  searchLocation(keyword: String!): [Location!]!
  session: Session!
  tenderCompetitors(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for TenderCompetitors returned from the connection."""
    orderBy: [TenderCompetitorOrder!]
    """Filtering options for TenderCompetitors returned from the connection."""
    where: TenderCompetitorWhereInput
  ): TenderCompetitorConnection!
  tenderProfiles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for TenderProfiles returned from the connection."""
    orderBy: [TenderProfileOrder!]
    """Filtering options for TenderProfiles returned from the connection."""
    where: TenderProfileWhereInput
  ): TenderProfileConnection!
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  topCompetitors(first: Int = 10): [TopCompetitor!]!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder
    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
  visitRecords(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for VisitRecords returned from the connection."""
    orderBy: [VisitRecordOrder!]
    """Filtering options for VisitRecords returned from the connection."""
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}

type Session {
  avatarUrl: String!
  email: String!
  hasEditAccess: Boolean!
  hasMapAccess: Boolean!
  isAdmin: Boolean!
  isCeo: Boolean!
  isSuperAdmin: Boolean!
  name: String!
  userId: String!
  username: String!
}

type Subscription {
  projectWarning: String!
}

type Tender implements Node {
  activeProfile: TenderProfile
  activeProfileID: ID
  address: String
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int!
  approver: User
  approverID: ID
  """則師，只限港澳"""
  architect: String
  area: Area!
  areaID: ID!
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  city: City
  cityID: ID
  classify: Int
  code: String!
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  competitors: [TenderCompetitor!]
  """施工面積，只限港澳"""
  constructionArea: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time!
  createdBy: User
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  currentProgress: String
  customer: Customer
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  """業主，只限港澳"""
  developer: String
  discoveryDate: Time!
  district: District
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finder: User
  finderID: ID
  followingSales: [User!]
  fullAddress: String
  geoBounds: [[Float]]
  geoCoordinate: GeoJson
  id: ID!
  images: [String!]
  keyProject: Boolean!
  """最後一次投標金額，只限港澳"""
  lastTenderAmount: Float
  levelInvolved: Int
  managementCompany: String
  name: String!
  ownerSituations: String
  pendingProfile: TenderProfile
  pendingProfileID: ID
  prepareToBid: Boolean!
  profiles(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for TenderProfiles returned from the connection."""
    orderBy: [TenderProfileOrder!]
    """Filtering options for TenderProfiles returned from the connection."""
    where: TenderProfileWhereInput
  ): TenderProfileConnection!
  projectCode: String
  projectDefinition: String
  projectType: String
  province: Province
  provinceID: ID
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int!
  """交標日期，只限港澳"""
  tenderClosingDate: Time
  """投標編號，只限港澳"""
  tenderCode: String
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  """中標金額"""
  tenderWinAmount: Float
  tenderWinCompany: String
  """中標日期，只限港澳"""
  tenderWinDate: Time
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time!
  visitRecords(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for VisitRecords returned from the connection."""
    orderBy: [VisitRecordOrder!]
    """Filtering options for VisitRecords returned from the connection."""
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}

type TenderCompetitor implements Node {
  amount: Float!
  competitor: Competitor!
  competitorID: ID!
  createdAt: Time!
  id: ID!
  """是否中标"""
  result: Boolean!
  tender: Tender!
  tenderID: ID!
  updatedAt: Time!
}

"""A connection to a list of items."""
type TenderCompetitorConnection {
  """A list of edges."""
  edges: [TenderCompetitorEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type TenderCompetitorEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: TenderCompetitor
}

"""Ordering options for TenderCompetitor connections"""
input TenderCompetitorOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order TenderCompetitors."""
  field: TenderCompetitorOrderField!
}

"""Properties by which TenderCompetitor connections can be ordered."""
enum TenderCompetitorOrderField {
  CREATED_AT
}

"""
TenderCompetitorWhereInput is used for filtering TenderCompetitor objects.
Input was generated by ent.
"""
input TenderCompetitorWhereInput {
  """amount field predicates"""
  amount: Float
  amountGT: Float
  amountGTE: Float
  amountIn: [Float!]
  amountLT: Float
  amountLTE: Float
  amountNEQ: Float
  amountNotIn: [Float!]
  and: [TenderCompetitorWhereInput!]
  """competitor_id field predicates"""
  competitorID: ID
  competitorIDContains: ID
  competitorIDContainsFold: ID
  competitorIDEqualFold: ID
  competitorIDGT: ID
  competitorIDGTE: ID
  competitorIDHasPrefix: ID
  competitorIDHasSuffix: ID
  competitorIDIn: [ID!]
  competitorIDLT: ID
  competitorIDLTE: ID
  competitorIDNEQ: ID
  competitorIDNotIn: [ID!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """competitor edge predicates"""
  hasCompetitor: Boolean
  hasCompetitorWith: [CompetitorWhereInput!]
  """tender edge predicates"""
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  not: TenderCompetitorWhereInput
  or: [TenderCompetitorWhereInput!]
  """result field predicates"""
  result: Boolean
  resultNEQ: Boolean
  """tender_id field predicates"""
  tenderID: ID
  tenderIDContains: ID
  tenderIDContainsFold: ID
  tenderIDEqualFold: ID
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDIn: [ID!]
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDNEQ: ID
  tenderIDNotIn: [ID!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

"""A connection to a list of items."""
type TenderConnection {
  """A list of edges."""
  edges: [TenderEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type TenderEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: Tender
}

"""Ordering options for Tender connections"""
input TenderOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Tenders."""
  field: TenderOrderField!
}

"""Properties by which Tender connections can be ordered."""
enum TenderOrderField {
  APPROVAL_STATUS
  CLOSING_DATE
  CREATED_AT
  NAME
  TENDER_DATE
}

type TenderProfile implements Node {
  address: String
  """審核日期"""
  approvalDate: Time
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕 4 已撤回"""
  approvalStatus: Int!
  approver: User
  approverID: ID
  """則師，只限港澳"""
  architect: String
  attachments: [String!]
  biddingDate: Time
  biddingInstructions: String
  city: City
  cityID: ID
  classify: Int
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  """施工面積，只限港澳"""
  constructionArea: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdAt: Time!
  createdBy: User
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  currentProgress: String
  customer: Customer
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  """業主，只限港澳"""
  developer: String
  discoveryDate: Time
  district: District
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finder: User
  finderID: ID
  fullAddress: String
  geoCoordinate: [Float!]
  id: ID!
  images: [String!]
  keyProject: Boolean!
  """最後一次投標金額，只限港澳"""
  lastTenderAmount: Float
  levelInvolved: Int
  managementCompany: String
  name: String
  ownerSituations: String
  prepareToBid: Boolean!
  projectCode: String
  projectDefinition: String
  projectType: String
  province: Province
  provinceID: ID
  remark: String
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int!
  tender: Tender!
  """投標金額"""
  tenderAmount: Float
  """交標日期，只限港澳"""
  tenderClosingDate: Time
  """投標編號，只限港澳"""
  tenderCode: String
  tenderDate: Time
  tenderForm: String
  tenderID: ID!
  tenderSituations: String
  """得標金額"""
  tenderWinAmount: Float
  tenderWinCompany: String
  """得標日期，只限港澳"""
  tenderWinDate: Time
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time!
}

"""A connection to a list of items."""
type TenderProfileConnection {
  """A list of edges."""
  edges: [TenderProfileEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type TenderProfileEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: TenderProfile
}

"""Ordering options for TenderProfile connections"""
input TenderProfileOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order TenderProfiles."""
  field: TenderProfileOrderField!
}

"""Properties by which TenderProfile connections can be ordered."""
enum TenderProfileOrderField {
  APPROVAL_STATUS
  CLOSING_DATE
  CREATED_AT
  NAME
  TENDER_DATE
}

"""
TenderProfileWhereInput is used for filtering TenderProfile objects.
Input was generated by ent.
"""
input TenderProfileWhereInput {
  """address field predicates"""
  address: String
  addressContains: String
  addressContainsFold: String
  addressEqualFold: String
  addressGT: String
  addressGTE: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIn: [String!]
  addressIsNil: Boolean
  addressLT: String
  addressLTE: String
  addressNEQ: String
  addressNotIn: [String!]
  addressNotNil: Boolean
  and: [TenderProfileWhereInput!]
  """approval_date field predicates"""
  approvalDate: Time
  approvalDateGT: Time
  approvalDateGTE: Time
  approvalDateIn: [Time!]
  approvalDateIsNil: Boolean
  approvalDateLT: Time
  approvalDateLTE: Time
  approvalDateNEQ: Time
  approvalDateNotIn: [Time!]
  approvalDateNotNil: Boolean
  """approval_msg_id field predicates"""
  approvalMsgID: String
  approvalMsgIDContains: String
  approvalMsgIDContainsFold: String
  approvalMsgIDEqualFold: String
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIn: [String!]
  approvalMsgIDIsNil: Boolean
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDNEQ: String
  approvalMsgIDNotIn: [String!]
  approvalMsgIDNotNil: Boolean
  """approval_status field predicates"""
  approvalStatus: Int
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusIn: [Int!]
  approvalStatusLT: Int
  approvalStatusLTE: Int
  approvalStatusNEQ: Int
  approvalStatusNotIn: [Int!]
  """approver_id field predicates"""
  approverID: ID
  approverIDContains: ID
  approverIDContainsFold: ID
  approverIDEqualFold: ID
  approverIDGT: ID
  approverIDGTE: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIn: [ID!]
  approverIDIsNil: Boolean
  approverIDLT: ID
  approverIDLTE: ID
  approverIDNEQ: ID
  approverIDNotIn: [ID!]
  approverIDNotNil: Boolean
  """architect field predicates"""
  architect: String
  architectContains: String
  architectContainsFold: String
  architectEqualFold: String
  architectGT: String
  architectGTE: String
  architectHasPrefix: String
  architectHasSuffix: String
  architectIn: [String!]
  architectIsNil: Boolean
  architectLT: String
  architectLTE: String
  architectNEQ: String
  architectNotIn: [String!]
  architectNotNil: Boolean
  """bidding_date field predicates"""
  biddingDate: Time
  biddingDateGT: Time
  biddingDateGTE: Time
  biddingDateIn: [Time!]
  biddingDateIsNil: Boolean
  biddingDateLT: Time
  biddingDateLTE: Time
  biddingDateNEQ: Time
  biddingDateNotIn: [Time!]
  biddingDateNotNil: Boolean
  """bidding_instructions field predicates"""
  biddingInstructions: String
  biddingInstructionsContains: String
  biddingInstructionsContainsFold: String
  biddingInstructionsEqualFold: String
  biddingInstructionsGT: String
  biddingInstructionsGTE: String
  biddingInstructionsHasPrefix: String
  biddingInstructionsHasSuffix: String
  biddingInstructionsIn: [String!]
  biddingInstructionsIsNil: Boolean
  biddingInstructionsLT: String
  biddingInstructionsLTE: String
  biddingInstructionsNEQ: String
  biddingInstructionsNotIn: [String!]
  biddingInstructionsNotNil: Boolean
  """city_id field predicates"""
  cityID: ID
  cityIDContains: ID
  cityIDContainsFold: ID
  cityIDEqualFold: ID
  cityIDGT: ID
  cityIDGTE: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIn: [ID!]
  cityIDIsNil: Boolean
  cityIDLT: ID
  cityIDLTE: ID
  cityIDNEQ: ID
  cityIDNotIn: [ID!]
  cityIDNotNil: Boolean
  """classify field predicates"""
  classify: Int
  classifyGT: Int
  classifyGTE: Int
  classifyIn: [Int!]
  classifyIsNil: Boolean
  classifyLT: Int
  classifyLTE: Int
  classifyNEQ: Int
  classifyNotIn: [Int!]
  classifyNotNil: Boolean
  """competitive_partnership_rating field predicates"""
  competitivePartnershipRating: Int
  competitivePartnershipRatingGT: Int
  competitivePartnershipRatingGTE: Int
  competitivePartnershipRatingIn: [Int!]
  competitivePartnershipRatingIsNil: Boolean
  competitivePartnershipRatingLT: Int
  competitivePartnershipRatingLTE: Int
  competitivePartnershipRatingNEQ: Int
  competitivePartnershipRatingNotIn: [Int!]
  competitivePartnershipRatingNotNil: Boolean
  """competitive_partnership_rating_overview field predicates"""
  competitivePartnershipRatingOverview: String
  competitivePartnershipRatingOverviewContains: String
  competitivePartnershipRatingOverviewContainsFold: String
  competitivePartnershipRatingOverviewEqualFold: String
  competitivePartnershipRatingOverviewGT: String
  competitivePartnershipRatingOverviewGTE: String
  competitivePartnershipRatingOverviewHasPrefix: String
  competitivePartnershipRatingOverviewHasSuffix: String
  competitivePartnershipRatingOverviewIn: [String!]
  competitivePartnershipRatingOverviewIsNil: Boolean
  competitivePartnershipRatingOverviewLT: String
  competitivePartnershipRatingOverviewLTE: String
  competitivePartnershipRatingOverviewNEQ: String
  competitivePartnershipRatingOverviewNotIn: [String!]
  competitivePartnershipRatingOverviewNotNil: Boolean
  """competitor_situations field predicates"""
  competitorSituations: String
  competitorSituationsContains: String
  competitorSituationsContainsFold: String
  competitorSituationsEqualFold: String
  competitorSituationsGT: String
  competitorSituationsGTE: String
  competitorSituationsHasPrefix: String
  competitorSituationsHasSuffix: String
  competitorSituationsIn: [String!]
  competitorSituationsIsNil: Boolean
  competitorSituationsLT: String
  competitorSituationsLTE: String
  competitorSituationsNEQ: String
  competitorSituationsNotIn: [String!]
  competitorSituationsNotNil: Boolean
  """construction_area field predicates"""
  constructionArea: String
  constructionAreaContains: String
  constructionAreaContainsFold: String
  constructionAreaEqualFold: String
  constructionAreaGT: String
  constructionAreaGTE: String
  constructionAreaHasPrefix: String
  constructionAreaHasSuffix: String
  constructionAreaIn: [String!]
  constructionAreaIsNil: Boolean
  constructionAreaLT: String
  constructionAreaLTE: String
  constructionAreaNEQ: String
  constructionAreaNotIn: [String!]
  constructionAreaNotNil: Boolean
  """consulting_firm field predicates"""
  consultingFirm: String
  consultingFirmContains: String
  consultingFirmContainsFold: String
  consultingFirmEqualFold: String
  consultingFirmGT: String
  consultingFirmGTE: String
  consultingFirmHasPrefix: String
  consultingFirmHasSuffix: String
  consultingFirmIn: [String!]
  consultingFirmIsNil: Boolean
  consultingFirmLT: String
  consultingFirmLTE: String
  consultingFirmNEQ: String
  consultingFirmNotIn: [String!]
  consultingFirmNotNil: Boolean
  """contract_form field predicates"""
  contractForm: String
  contractFormContains: String
  contractFormContainsFold: String
  contractFormEqualFold: String
  contractFormGT: String
  contractFormGTE: String
  contractFormHasPrefix: String
  contractFormHasSuffix: String
  contractFormIn: [String!]
  contractFormIsNil: Boolean
  contractFormLT: String
  contractFormLTE: String
  contractFormNEQ: String
  contractFormNotIn: [String!]
  contractFormNotNil: Boolean
  """contractor field predicates"""
  contractor: String
  contractorContains: String
  contractorContainsFold: String
  contractorEqualFold: String
  contractorGT: String
  contractorGTE: String
  contractorHasPrefix: String
  contractorHasSuffix: String
  contractorIn: [String!]
  contractorIsNil: Boolean
  contractorLT: String
  contractorLTE: String
  contractorNEQ: String
  contractorNotIn: [String!]
  contractorNotNil: Boolean
  """cost_engineer field predicates"""
  costEngineer: String
  costEngineerContains: String
  costEngineerContainsFold: String
  costEngineerEqualFold: String
  costEngineerGT: String
  costEngineerGTE: String
  costEngineerHasPrefix: String
  costEngineerHasSuffix: String
  costEngineerIn: [String!]
  costEngineerIsNil: Boolean
  costEngineerLT: String
  costEngineerLTE: String
  costEngineerNEQ: String
  costEngineerNotIn: [String!]
  costEngineerNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDIsNil: Boolean
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  createdByIDNotNil: Boolean
  """credit_and_payment_rating field predicates"""
  creditAndPaymentRating: Int
  creditAndPaymentRatingGT: Int
  creditAndPaymentRatingGTE: Int
  creditAndPaymentRatingIn: [Int!]
  creditAndPaymentRatingIsNil: Boolean
  creditAndPaymentRatingLT: Int
  creditAndPaymentRatingLTE: Int
  creditAndPaymentRatingNEQ: Int
  creditAndPaymentRatingNotIn: [Int!]
  creditAndPaymentRatingNotNil: Boolean
  """credit_and_payment_rating_overview field predicates"""
  creditAndPaymentRatingOverview: String
  creditAndPaymentRatingOverviewContains: String
  creditAndPaymentRatingOverviewContainsFold: String
  creditAndPaymentRatingOverviewEqualFold: String
  creditAndPaymentRatingOverviewGT: String
  creditAndPaymentRatingOverviewGTE: String
  creditAndPaymentRatingOverviewHasPrefix: String
  creditAndPaymentRatingOverviewHasSuffix: String
  creditAndPaymentRatingOverviewIn: [String!]
  creditAndPaymentRatingOverviewIsNil: Boolean
  creditAndPaymentRatingOverviewLT: String
  creditAndPaymentRatingOverviewLTE: String
  creditAndPaymentRatingOverviewNEQ: String
  creditAndPaymentRatingOverviewNotIn: [String!]
  creditAndPaymentRatingOverviewNotNil: Boolean
  """current_progress field predicates"""
  currentProgress: String
  currentProgressContains: String
  currentProgressContainsFold: String
  currentProgressEqualFold: String
  currentProgressGT: String
  currentProgressGTE: String
  currentProgressHasPrefix: String
  currentProgressHasSuffix: String
  currentProgressIn: [String!]
  currentProgressIsNil: Boolean
  currentProgressLT: String
  currentProgressLTE: String
  currentProgressNEQ: String
  currentProgressNotIn: [String!]
  currentProgressNotNil: Boolean
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDIsNil: Boolean
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  customerIDNotNil: Boolean
  """customer_relationship_rating field predicates"""
  customerRelationshipRating: Int
  customerRelationshipRatingGT: Int
  customerRelationshipRatingGTE: Int
  customerRelationshipRatingIn: [Int!]
  customerRelationshipRatingIsNil: Boolean
  customerRelationshipRatingLT: Int
  customerRelationshipRatingLTE: Int
  customerRelationshipRatingNEQ: Int
  customerRelationshipRatingNotIn: [Int!]
  customerRelationshipRatingNotNil: Boolean
  """customer_relationship_rating_overview field predicates"""
  customerRelationshipRatingOverview: String
  customerRelationshipRatingOverviewContains: String
  customerRelationshipRatingOverviewContainsFold: String
  customerRelationshipRatingOverviewEqualFold: String
  customerRelationshipRatingOverviewGT: String
  customerRelationshipRatingOverviewGTE: String
  customerRelationshipRatingOverviewHasPrefix: String
  customerRelationshipRatingOverviewHasSuffix: String
  customerRelationshipRatingOverviewIn: [String!]
  customerRelationshipRatingOverviewIsNil: Boolean
  customerRelationshipRatingOverviewLT: String
  customerRelationshipRatingOverviewLTE: String
  customerRelationshipRatingOverviewNEQ: String
  customerRelationshipRatingOverviewNotIn: [String!]
  customerRelationshipRatingOverviewNotNil: Boolean
  """design_unit field predicates"""
  designUnit: String
  designUnitContains: String
  designUnitContainsFold: String
  designUnitEqualFold: String
  designUnitGT: String
  designUnitGTE: String
  designUnitHasPrefix: String
  designUnitHasSuffix: String
  designUnitIn: [String!]
  designUnitIsNil: Boolean
  designUnitLT: String
  designUnitLTE: String
  designUnitNEQ: String
  designUnitNotIn: [String!]
  designUnitNotNil: Boolean
  """developer field predicates"""
  developer: String
  developerContains: String
  developerContainsFold: String
  developerEqualFold: String
  developerGT: String
  developerGTE: String
  developerHasPrefix: String
  developerHasSuffix: String
  developerIn: [String!]
  developerIsNil: Boolean
  developerLT: String
  developerLTE: String
  developerNEQ: String
  developerNotIn: [String!]
  developerNotNil: Boolean
  """discovery_date field predicates"""
  discoveryDate: Time
  discoveryDateGT: Time
  discoveryDateGTE: Time
  discoveryDateIn: [Time!]
  discoveryDateIsNil: Boolean
  discoveryDateLT: Time
  discoveryDateLTE: Time
  discoveryDateNEQ: Time
  discoveryDateNotIn: [Time!]
  discoveryDateNotNil: Boolean
  """district_id field predicates"""
  districtID: ID
  districtIDContains: ID
  districtIDContainsFold: ID
  districtIDEqualFold: ID
  districtIDGT: ID
  districtIDGTE: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIn: [ID!]
  districtIDIsNil: Boolean
  districtIDLT: ID
  districtIDLTE: ID
  districtIDNEQ: ID
  districtIDNotIn: [ID!]
  districtIDNotNil: Boolean
  """estimated_amount field predicates"""
  estimatedAmount: Float
  estimatedAmountGT: Float
  estimatedAmountGTE: Float
  estimatedAmountIn: [Float!]
  estimatedAmountIsNil: Boolean
  estimatedAmountLT: Float
  estimatedAmountLTE: Float
  estimatedAmountNEQ: Float
  estimatedAmountNotIn: [Float!]
  estimatedAmountNotNil: Boolean
  """estimated_project_end_date field predicates"""
  estimatedProjectEndDate: Time
  estimatedProjectEndDateGT: Time
  estimatedProjectEndDateGTE: Time
  estimatedProjectEndDateIn: [Time!]
  estimatedProjectEndDateIsNil: Boolean
  estimatedProjectEndDateLT: Time
  estimatedProjectEndDateLTE: Time
  estimatedProjectEndDateNEQ: Time
  estimatedProjectEndDateNotIn: [Time!]
  estimatedProjectEndDateNotNil: Boolean
  """estimated_project_start_date field predicates"""
  estimatedProjectStartDate: Time
  estimatedProjectStartDateGT: Time
  estimatedProjectStartDateGTE: Time
  estimatedProjectStartDateIn: [Time!]
  estimatedProjectStartDateIsNil: Boolean
  estimatedProjectStartDateLT: Time
  estimatedProjectStartDateLTE: Time
  estimatedProjectStartDateNEQ: Time
  estimatedProjectStartDateNotIn: [Time!]
  estimatedProjectStartDateNotNil: Boolean
  """facade_consultant field predicates"""
  facadeConsultant: String
  facadeConsultantContains: String
  facadeConsultantContainsFold: String
  facadeConsultantEqualFold: String
  facadeConsultantGT: String
  facadeConsultantGTE: String
  facadeConsultantHasPrefix: String
  facadeConsultantHasSuffix: String
  facadeConsultantIn: [String!]
  facadeConsultantIsNil: Boolean
  facadeConsultantLT: String
  facadeConsultantLTE: String
  facadeConsultantNEQ: String
  facadeConsultantNotIn: [String!]
  facadeConsultantNotNil: Boolean
  """finder_id field predicates"""
  finderID: ID
  finderIDContains: ID
  finderIDContainsFold: ID
  finderIDEqualFold: ID
  finderIDGT: ID
  finderIDGTE: ID
  finderIDHasPrefix: ID
  finderIDHasSuffix: ID
  finderIDIn: [ID!]
  finderIDIsNil: Boolean
  finderIDLT: ID
  finderIDLTE: ID
  finderIDNEQ: ID
  finderIDNotIn: [ID!]
  finderIDNotNil: Boolean
  """full_address field predicates"""
  fullAddress: String
  fullAddressContains: String
  fullAddressContainsFold: String
  fullAddressEqualFold: String
  fullAddressGT: String
  fullAddressGTE: String
  fullAddressHasPrefix: String
  fullAddressHasSuffix: String
  fullAddressIn: [String!]
  fullAddressIsNil: Boolean
  fullAddressLT: String
  fullAddressLTE: String
  fullAddressNEQ: String
  fullAddressNotIn: [String!]
  fullAddressNotNil: Boolean
  """approver edge predicates"""
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """city edge predicates"""
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """district edge predicates"""
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """finder edge predicates"""
  hasFinder: Boolean
  hasFinderWith: [UserWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """tender edge predicates"""
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """key_project field predicates"""
  keyProject: Boolean
  keyProjectNEQ: Boolean
  """last_tender_amount field predicates"""
  lastTenderAmount: Float
  lastTenderAmountGT: Float
  lastTenderAmountGTE: Float
  lastTenderAmountIn: [Float!]
  lastTenderAmountIsNil: Boolean
  lastTenderAmountLT: Float
  lastTenderAmountLTE: Float
  lastTenderAmountNEQ: Float
  lastTenderAmountNotIn: [Float!]
  lastTenderAmountNotNil: Boolean
  """level_involved field predicates"""
  levelInvolved: Int
  levelInvolvedGT: Int
  levelInvolvedGTE: Int
  levelInvolvedIn: [Int!]
  levelInvolvedIsNil: Boolean
  levelInvolvedLT: Int
  levelInvolvedLTE: Int
  levelInvolvedNEQ: Int
  levelInvolvedNotIn: [Int!]
  levelInvolvedNotNil: Boolean
  """management_company field predicates"""
  managementCompany: String
  managementCompanyContains: String
  managementCompanyContainsFold: String
  managementCompanyEqualFold: String
  managementCompanyGT: String
  managementCompanyGTE: String
  managementCompanyHasPrefix: String
  managementCompanyHasSuffix: String
  managementCompanyIn: [String!]
  managementCompanyIsNil: Boolean
  managementCompanyLT: String
  managementCompanyLTE: String
  managementCompanyNEQ: String
  managementCompanyNotIn: [String!]
  managementCompanyNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameIsNil: Boolean
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  nameNotNil: Boolean
  not: TenderProfileWhereInput
  or: [TenderProfileWhereInput!]
  """owner_situations field predicates"""
  ownerSituations: String
  ownerSituationsContains: String
  ownerSituationsContainsFold: String
  ownerSituationsEqualFold: String
  ownerSituationsGT: String
  ownerSituationsGTE: String
  ownerSituationsHasPrefix: String
  ownerSituationsHasSuffix: String
  ownerSituationsIn: [String!]
  ownerSituationsIsNil: Boolean
  ownerSituationsLT: String
  ownerSituationsLTE: String
  ownerSituationsNEQ: String
  ownerSituationsNotIn: [String!]
  ownerSituationsNotNil: Boolean
  """prepare_to_bid field predicates"""
  prepareToBid: Boolean
  prepareToBidNEQ: Boolean
  """project_code field predicates"""
  projectCode: String
  projectCodeContains: String
  projectCodeContainsFold: String
  projectCodeEqualFold: String
  projectCodeGT: String
  projectCodeGTE: String
  projectCodeHasPrefix: String
  projectCodeHasSuffix: String
  projectCodeIn: [String!]
  projectCodeIsNil: Boolean
  projectCodeLT: String
  projectCodeLTE: String
  projectCodeNEQ: String
  projectCodeNotIn: [String!]
  projectCodeNotNil: Boolean
  """project_definition field predicates"""
  projectDefinition: String
  projectDefinitionContains: String
  projectDefinitionContainsFold: String
  projectDefinitionEqualFold: String
  projectDefinitionGT: String
  projectDefinitionGTE: String
  projectDefinitionHasPrefix: String
  projectDefinitionHasSuffix: String
  projectDefinitionIn: [String!]
  projectDefinitionIsNil: Boolean
  projectDefinitionLT: String
  projectDefinitionLTE: String
  projectDefinitionNEQ: String
  projectDefinitionNotIn: [String!]
  projectDefinitionNotNil: Boolean
  """project_type field predicates"""
  projectType: String
  projectTypeContains: String
  projectTypeContainsFold: String
  projectTypeEqualFold: String
  projectTypeGT: String
  projectTypeGTE: String
  projectTypeHasPrefix: String
  projectTypeHasSuffix: String
  projectTypeIn: [String!]
  projectTypeIsNil: Boolean
  projectTypeLT: String
  projectTypeLTE: String
  projectTypeNEQ: String
  projectTypeNotIn: [String!]
  projectTypeNotNil: Boolean
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDIsNil: Boolean
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  provinceIDNotNil: Boolean
  """remark field predicates"""
  remark: String
  remarkContains: String
  remarkContainsFold: String
  remarkEqualFold: String
  remarkGT: String
  remarkGTE: String
  remarkHasPrefix: String
  remarkHasSuffix: String
  remarkIn: [String!]
  remarkIsNil: Boolean
  remarkLT: String
  remarkLTE: String
  remarkNEQ: String
  remarkNotIn: [String!]
  remarkNotNil: Boolean
  """size_and_value_rating field predicates"""
  sizeAndValueRating: Int
  sizeAndValueRatingGT: Int
  sizeAndValueRatingGTE: Int
  sizeAndValueRatingIn: [Int!]
  sizeAndValueRatingIsNil: Boolean
  sizeAndValueRatingLT: Int
  sizeAndValueRatingLTE: Int
  sizeAndValueRatingNEQ: Int
  sizeAndValueRatingNotIn: [Int!]
  sizeAndValueRatingNotNil: Boolean
  """size_and_value_rating_overview field predicates"""
  sizeAndValueRatingOverview: String
  sizeAndValueRatingOverviewContains: String
  sizeAndValueRatingOverviewContainsFold: String
  sizeAndValueRatingOverviewEqualFold: String
  sizeAndValueRatingOverviewGT: String
  sizeAndValueRatingOverviewGTE: String
  sizeAndValueRatingOverviewHasPrefix: String
  sizeAndValueRatingOverviewHasSuffix: String
  sizeAndValueRatingOverviewIn: [String!]
  sizeAndValueRatingOverviewIsNil: Boolean
  sizeAndValueRatingOverviewLT: String
  sizeAndValueRatingOverviewLTE: String
  sizeAndValueRatingOverviewNEQ: String
  sizeAndValueRatingOverviewNotIn: [String!]
  sizeAndValueRatingOverviewNotNil: Boolean
  """status field predicates"""
  status: Int
  statusGT: Int
  statusGTE: Int
  statusIn: [Int!]
  statusLT: Int
  statusLTE: Int
  statusNEQ: Int
  statusNotIn: [Int!]
  """tender_amount field predicates"""
  tenderAmount: Float
  tenderAmountGT: Float
  tenderAmountGTE: Float
  tenderAmountIn: [Float!]
  tenderAmountIsNil: Boolean
  tenderAmountLT: Float
  tenderAmountLTE: Float
  tenderAmountNEQ: Float
  tenderAmountNotIn: [Float!]
  tenderAmountNotNil: Boolean
  """tender_closing_date field predicates"""
  tenderClosingDate: Time
  tenderClosingDateGT: Time
  tenderClosingDateGTE: Time
  tenderClosingDateIn: [Time!]
  tenderClosingDateIsNil: Boolean
  tenderClosingDateLT: Time
  tenderClosingDateLTE: Time
  tenderClosingDateNEQ: Time
  tenderClosingDateNotIn: [Time!]
  tenderClosingDateNotNil: Boolean
  """tender_code field predicates"""
  tenderCode: String
  tenderCodeContains: String
  tenderCodeContainsFold: String
  tenderCodeEqualFold: String
  tenderCodeGT: String
  tenderCodeGTE: String
  tenderCodeHasPrefix: String
  tenderCodeHasSuffix: String
  tenderCodeIn: [String!]
  tenderCodeIsNil: Boolean
  tenderCodeLT: String
  tenderCodeLTE: String
  tenderCodeNEQ: String
  tenderCodeNotIn: [String!]
  tenderCodeNotNil: Boolean
  """tender_date field predicates"""
  tenderDate: Time
  tenderDateGT: Time
  tenderDateGTE: Time
  tenderDateIn: [Time!]
  tenderDateIsNil: Boolean
  tenderDateLT: Time
  tenderDateLTE: Time
  tenderDateNEQ: Time
  tenderDateNotIn: [Time!]
  tenderDateNotNil: Boolean
  """tender_form field predicates"""
  tenderForm: String
  tenderFormContains: String
  tenderFormContainsFold: String
  tenderFormEqualFold: String
  tenderFormGT: String
  tenderFormGTE: String
  tenderFormHasPrefix: String
  tenderFormHasSuffix: String
  tenderFormIn: [String!]
  tenderFormIsNil: Boolean
  tenderFormLT: String
  tenderFormLTE: String
  tenderFormNEQ: String
  tenderFormNotIn: [String!]
  tenderFormNotNil: Boolean
  """tender_id field predicates"""
  tenderID: ID
  tenderIDContains: ID
  tenderIDContainsFold: ID
  tenderIDEqualFold: ID
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDIn: [ID!]
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDNEQ: ID
  tenderIDNotIn: [ID!]
  """tender_situations field predicates"""
  tenderSituations: String
  tenderSituationsContains: String
  tenderSituationsContainsFold: String
  tenderSituationsEqualFold: String
  tenderSituationsGT: String
  tenderSituationsGTE: String
  tenderSituationsHasPrefix: String
  tenderSituationsHasSuffix: String
  tenderSituationsIn: [String!]
  tenderSituationsIsNil: Boolean
  tenderSituationsLT: String
  tenderSituationsLTE: String
  tenderSituationsNEQ: String
  tenderSituationsNotIn: [String!]
  tenderSituationsNotNil: Boolean
  """tender_win_amount field predicates"""
  tenderWinAmount: Float
  tenderWinAmountGT: Float
  tenderWinAmountGTE: Float
  tenderWinAmountIn: [Float!]
  tenderWinAmountIsNil: Boolean
  tenderWinAmountLT: Float
  tenderWinAmountLTE: Float
  tenderWinAmountNEQ: Float
  tenderWinAmountNotIn: [Float!]
  tenderWinAmountNotNil: Boolean
  """tender_win_company field predicates"""
  tenderWinCompany: String
  tenderWinCompanyContains: String
  tenderWinCompanyContainsFold: String
  tenderWinCompanyEqualFold: String
  tenderWinCompanyGT: String
  tenderWinCompanyGTE: String
  tenderWinCompanyHasPrefix: String
  tenderWinCompanyHasSuffix: String
  tenderWinCompanyIn: [String!]
  tenderWinCompanyIsNil: Boolean
  tenderWinCompanyLT: String
  tenderWinCompanyLTE: String
  tenderWinCompanyNEQ: String
  tenderWinCompanyNotIn: [String!]
  tenderWinCompanyNotNil: Boolean
  """tender_win_date field predicates"""
  tenderWinDate: Time
  tenderWinDateGT: Time
  tenderWinDateGTE: Time
  tenderWinDateIn: [Time!]
  tenderWinDateIsNil: Boolean
  tenderWinDateLT: Time
  tenderWinDateLTE: Time
  tenderWinDateNEQ: Time
  tenderWinDateNotIn: [Time!]
  tenderWinDateNotNil: Boolean
  """tendering_agency field predicates"""
  tenderingAgency: String
  tenderingAgencyContains: String
  tenderingAgencyContainsFold: String
  tenderingAgencyEqualFold: String
  tenderingAgencyGT: String
  tenderingAgencyGTE: String
  tenderingAgencyHasPrefix: String
  tenderingAgencyHasSuffix: String
  tenderingAgencyIn: [String!]
  tenderingAgencyIsNil: Boolean
  tenderingAgencyLT: String
  tenderingAgencyLTE: String
  tenderingAgencyNEQ: String
  tenderingAgencyNotIn: [String!]
  tenderingAgencyNotNil: Boolean
  """time_limit_rating field predicates"""
  timeLimitRating: Int
  timeLimitRatingGT: Int
  timeLimitRatingGTE: Int
  timeLimitRatingIn: [Int!]
  timeLimitRatingIsNil: Boolean
  timeLimitRatingLT: Int
  timeLimitRatingLTE: Int
  timeLimitRatingNEQ: Int
  timeLimitRatingNotIn: [Int!]
  timeLimitRatingNotNil: Boolean
  """time_limit_rating_overview field predicates"""
  timeLimitRatingOverview: String
  timeLimitRatingOverviewContains: String
  timeLimitRatingOverviewContainsFold: String
  timeLimitRatingOverviewEqualFold: String
  timeLimitRatingOverviewGT: String
  timeLimitRatingOverviewGTE: String
  timeLimitRatingOverviewHasPrefix: String
  timeLimitRatingOverviewHasSuffix: String
  timeLimitRatingOverviewIn: [String!]
  timeLimitRatingOverviewIsNil: Boolean
  timeLimitRatingOverviewLT: String
  timeLimitRatingOverviewLTE: String
  timeLimitRatingOverviewNEQ: String
  timeLimitRatingOverviewNotIn: [String!]
  timeLimitRatingOverviewNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

"""
TenderWhereInput is used for filtering Tender objects.
Input was generated by ent.
"""
input TenderWhereInput {
  """active_profile_id field predicates"""
  activeProfileID: ID
  activeProfileIDContains: ID
  activeProfileIDContainsFold: ID
  activeProfileIDEqualFold: ID
  activeProfileIDGT: ID
  activeProfileIDGTE: ID
  activeProfileIDHasPrefix: ID
  activeProfileIDHasSuffix: ID
  activeProfileIDIn: [ID!]
  activeProfileIDIsNil: Boolean
  activeProfileIDLT: ID
  activeProfileIDLTE: ID
  activeProfileIDNEQ: ID
  activeProfileIDNotIn: [ID!]
  activeProfileIDNotNil: Boolean
  """address field predicates"""
  address: String
  addressContains: String
  addressContainsFold: String
  addressEqualFold: String
  addressGT: String
  addressGTE: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIn: [String!]
  addressIsNil: Boolean
  addressLT: String
  addressLTE: String
  addressNEQ: String
  addressNotIn: [String!]
  addressNotNil: Boolean
  and: [TenderWhereInput!]
  """approval_msg_id field predicates"""
  approvalMsgID: String
  approvalMsgIDContains: String
  approvalMsgIDContainsFold: String
  approvalMsgIDEqualFold: String
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIn: [String!]
  approvalMsgIDIsNil: Boolean
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDNEQ: String
  approvalMsgIDNotIn: [String!]
  approvalMsgIDNotNil: Boolean
  """approval_status field predicates"""
  approvalStatus: Int
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusIn: [Int!]
  approvalStatusLT: Int
  approvalStatusLTE: Int
  approvalStatusNEQ: Int
  approvalStatusNotIn: [Int!]
  """approver_id field predicates"""
  approverID: ID
  approverIDContains: ID
  approverIDContainsFold: ID
  approverIDEqualFold: ID
  approverIDGT: ID
  approverIDGTE: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIn: [ID!]
  approverIDIsNil: Boolean
  approverIDLT: ID
  approverIDLTE: ID
  approverIDNEQ: ID
  approverIDNotIn: [ID!]
  approverIDNotNil: Boolean
  """architect field predicates"""
  architect: String
  architectContains: String
  architectContainsFold: String
  architectEqualFold: String
  architectGT: String
  architectGTE: String
  architectHasPrefix: String
  architectHasSuffix: String
  architectIn: [String!]
  architectIsNil: Boolean
  architectLT: String
  architectLTE: String
  architectNEQ: String
  architectNotIn: [String!]
  architectNotNil: Boolean
  """area_id field predicates"""
  areaID: ID
  areaIDContains: ID
  areaIDContainsFold: ID
  areaIDEqualFold: ID
  areaIDGT: ID
  areaIDGTE: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIn: [ID!]
  areaIDLT: ID
  areaIDLTE: ID
  areaIDNEQ: ID
  areaIDNotIn: [ID!]
  """bidding_date field predicates"""
  biddingDate: Time
  biddingDateGT: Time
  biddingDateGTE: Time
  biddingDateIn: [Time!]
  biddingDateIsNil: Boolean
  biddingDateLT: Time
  biddingDateLTE: Time
  biddingDateNEQ: Time
  biddingDateNotIn: [Time!]
  biddingDateNotNil: Boolean
  """bidding_instructions field predicates"""
  biddingInstructions: String
  biddingInstructionsContains: String
  biddingInstructionsContainsFold: String
  biddingInstructionsEqualFold: String
  biddingInstructionsGT: String
  biddingInstructionsGTE: String
  biddingInstructionsHasPrefix: String
  biddingInstructionsHasSuffix: String
  biddingInstructionsIn: [String!]
  biddingInstructionsIsNil: Boolean
  biddingInstructionsLT: String
  biddingInstructionsLTE: String
  biddingInstructionsNEQ: String
  biddingInstructionsNotIn: [String!]
  biddingInstructionsNotNil: Boolean
  """city_id field predicates"""
  cityID: ID
  cityIDContains: ID
  cityIDContainsFold: ID
  cityIDEqualFold: ID
  cityIDGT: ID
  cityIDGTE: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIn: [ID!]
  cityIDIsNil: Boolean
  cityIDLT: ID
  cityIDLTE: ID
  cityIDNEQ: ID
  cityIDNotIn: [ID!]
  cityIDNotNil: Boolean
  """classify field predicates"""
  classify: Int
  classifyGT: Int
  classifyGTE: Int
  classifyIn: [Int!]
  classifyIsNil: Boolean
  classifyLT: Int
  classifyLTE: Int
  classifyNEQ: Int
  classifyNotIn: [Int!]
  classifyNotNil: Boolean
  """code field predicates"""
  code: String
  codeContains: String
  codeContainsFold: String
  codeEqualFold: String
  codeGT: String
  codeGTE: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIn: [String!]
  codeLT: String
  codeLTE: String
  codeNEQ: String
  codeNotIn: [String!]
  """competitive_partnership_rating field predicates"""
  competitivePartnershipRating: Int
  competitivePartnershipRatingGT: Int
  competitivePartnershipRatingGTE: Int
  competitivePartnershipRatingIn: [Int!]
  competitivePartnershipRatingIsNil: Boolean
  competitivePartnershipRatingLT: Int
  competitivePartnershipRatingLTE: Int
  competitivePartnershipRatingNEQ: Int
  competitivePartnershipRatingNotIn: [Int!]
  competitivePartnershipRatingNotNil: Boolean
  """competitive_partnership_rating_overview field predicates"""
  competitivePartnershipRatingOverview: String
  competitivePartnershipRatingOverviewContains: String
  competitivePartnershipRatingOverviewContainsFold: String
  competitivePartnershipRatingOverviewEqualFold: String
  competitivePartnershipRatingOverviewGT: String
  competitivePartnershipRatingOverviewGTE: String
  competitivePartnershipRatingOverviewHasPrefix: String
  competitivePartnershipRatingOverviewHasSuffix: String
  competitivePartnershipRatingOverviewIn: [String!]
  competitivePartnershipRatingOverviewIsNil: Boolean
  competitivePartnershipRatingOverviewLT: String
  competitivePartnershipRatingOverviewLTE: String
  competitivePartnershipRatingOverviewNEQ: String
  competitivePartnershipRatingOverviewNotIn: [String!]
  competitivePartnershipRatingOverviewNotNil: Boolean
  """competitor_situations field predicates"""
  competitorSituations: String
  competitorSituationsContains: String
  competitorSituationsContainsFold: String
  competitorSituationsEqualFold: String
  competitorSituationsGT: String
  competitorSituationsGTE: String
  competitorSituationsHasPrefix: String
  competitorSituationsHasSuffix: String
  competitorSituationsIn: [String!]
  competitorSituationsIsNil: Boolean
  competitorSituationsLT: String
  competitorSituationsLTE: String
  competitorSituationsNEQ: String
  competitorSituationsNotIn: [String!]
  competitorSituationsNotNil: Boolean
  """construction_area field predicates"""
  constructionArea: String
  constructionAreaContains: String
  constructionAreaContainsFold: String
  constructionAreaEqualFold: String
  constructionAreaGT: String
  constructionAreaGTE: String
  constructionAreaHasPrefix: String
  constructionAreaHasSuffix: String
  constructionAreaIn: [String!]
  constructionAreaIsNil: Boolean
  constructionAreaLT: String
  constructionAreaLTE: String
  constructionAreaNEQ: String
  constructionAreaNotIn: [String!]
  constructionAreaNotNil: Boolean
  """consulting_firm field predicates"""
  consultingFirm: String
  consultingFirmContains: String
  consultingFirmContainsFold: String
  consultingFirmEqualFold: String
  consultingFirmGT: String
  consultingFirmGTE: String
  consultingFirmHasPrefix: String
  consultingFirmHasSuffix: String
  consultingFirmIn: [String!]
  consultingFirmIsNil: Boolean
  consultingFirmLT: String
  consultingFirmLTE: String
  consultingFirmNEQ: String
  consultingFirmNotIn: [String!]
  consultingFirmNotNil: Boolean
  """contract_form field predicates"""
  contractForm: String
  contractFormContains: String
  contractFormContainsFold: String
  contractFormEqualFold: String
  contractFormGT: String
  contractFormGTE: String
  contractFormHasPrefix: String
  contractFormHasSuffix: String
  contractFormIn: [String!]
  contractFormIsNil: Boolean
  contractFormLT: String
  contractFormLTE: String
  contractFormNEQ: String
  contractFormNotIn: [String!]
  contractFormNotNil: Boolean
  """contractor field predicates"""
  contractor: String
  contractorContains: String
  contractorContainsFold: String
  contractorEqualFold: String
  contractorGT: String
  contractorGTE: String
  contractorHasPrefix: String
  contractorHasSuffix: String
  contractorIn: [String!]
  contractorIsNil: Boolean
  contractorLT: String
  contractorLTE: String
  contractorNEQ: String
  contractorNotIn: [String!]
  contractorNotNil: Boolean
  """cost_engineer field predicates"""
  costEngineer: String
  costEngineerContains: String
  costEngineerContainsFold: String
  costEngineerEqualFold: String
  costEngineerGT: String
  costEngineerGTE: String
  costEngineerHasPrefix: String
  costEngineerHasSuffix: String
  costEngineerIn: [String!]
  costEngineerIsNil: Boolean
  costEngineerLT: String
  costEngineerLTE: String
  costEngineerNEQ: String
  costEngineerNotIn: [String!]
  costEngineerNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """created_by_id field predicates"""
  createdByID: ID
  createdByIDContains: ID
  createdByIDContainsFold: ID
  createdByIDEqualFold: ID
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIn: [ID!]
  createdByIDIsNil: Boolean
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDNEQ: ID
  createdByIDNotIn: [ID!]
  createdByIDNotNil: Boolean
  """credit_and_payment_rating field predicates"""
  creditAndPaymentRating: Int
  creditAndPaymentRatingGT: Int
  creditAndPaymentRatingGTE: Int
  creditAndPaymentRatingIn: [Int!]
  creditAndPaymentRatingIsNil: Boolean
  creditAndPaymentRatingLT: Int
  creditAndPaymentRatingLTE: Int
  creditAndPaymentRatingNEQ: Int
  creditAndPaymentRatingNotIn: [Int!]
  creditAndPaymentRatingNotNil: Boolean
  """credit_and_payment_rating_overview field predicates"""
  creditAndPaymentRatingOverview: String
  creditAndPaymentRatingOverviewContains: String
  creditAndPaymentRatingOverviewContainsFold: String
  creditAndPaymentRatingOverviewEqualFold: String
  creditAndPaymentRatingOverviewGT: String
  creditAndPaymentRatingOverviewGTE: String
  creditAndPaymentRatingOverviewHasPrefix: String
  creditAndPaymentRatingOverviewHasSuffix: String
  creditAndPaymentRatingOverviewIn: [String!]
  creditAndPaymentRatingOverviewIsNil: Boolean
  creditAndPaymentRatingOverviewLT: String
  creditAndPaymentRatingOverviewLTE: String
  creditAndPaymentRatingOverviewNEQ: String
  creditAndPaymentRatingOverviewNotIn: [String!]
  creditAndPaymentRatingOverviewNotNil: Boolean
  """current_progress field predicates"""
  currentProgress: String
  currentProgressContains: String
  currentProgressContainsFold: String
  currentProgressEqualFold: String
  currentProgressGT: String
  currentProgressGTE: String
  currentProgressHasPrefix: String
  currentProgressHasSuffix: String
  currentProgressIn: [String!]
  currentProgressIsNil: Boolean
  currentProgressLT: String
  currentProgressLTE: String
  currentProgressNEQ: String
  currentProgressNotIn: [String!]
  currentProgressNotNil: Boolean
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDIsNil: Boolean
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  customerIDNotNil: Boolean
  """customer_relationship_rating field predicates"""
  customerRelationshipRating: Int
  customerRelationshipRatingGT: Int
  customerRelationshipRatingGTE: Int
  customerRelationshipRatingIn: [Int!]
  customerRelationshipRatingIsNil: Boolean
  customerRelationshipRatingLT: Int
  customerRelationshipRatingLTE: Int
  customerRelationshipRatingNEQ: Int
  customerRelationshipRatingNotIn: [Int!]
  customerRelationshipRatingNotNil: Boolean
  """customer_relationship_rating_overview field predicates"""
  customerRelationshipRatingOverview: String
  customerRelationshipRatingOverviewContains: String
  customerRelationshipRatingOverviewContainsFold: String
  customerRelationshipRatingOverviewEqualFold: String
  customerRelationshipRatingOverviewGT: String
  customerRelationshipRatingOverviewGTE: String
  customerRelationshipRatingOverviewHasPrefix: String
  customerRelationshipRatingOverviewHasSuffix: String
  customerRelationshipRatingOverviewIn: [String!]
  customerRelationshipRatingOverviewIsNil: Boolean
  customerRelationshipRatingOverviewLT: String
  customerRelationshipRatingOverviewLTE: String
  customerRelationshipRatingOverviewNEQ: String
  customerRelationshipRatingOverviewNotIn: [String!]
  customerRelationshipRatingOverviewNotNil: Boolean
  """design_unit field predicates"""
  designUnit: String
  designUnitContains: String
  designUnitContainsFold: String
  designUnitEqualFold: String
  designUnitGT: String
  designUnitGTE: String
  designUnitHasPrefix: String
  designUnitHasSuffix: String
  designUnitIn: [String!]
  designUnitIsNil: Boolean
  designUnitLT: String
  designUnitLTE: String
  designUnitNEQ: String
  designUnitNotIn: [String!]
  designUnitNotNil: Boolean
  """developer field predicates"""
  developer: String
  developerContains: String
  developerContainsFold: String
  developerEqualFold: String
  developerGT: String
  developerGTE: String
  developerHasPrefix: String
  developerHasSuffix: String
  developerIn: [String!]
  developerIsNil: Boolean
  developerLT: String
  developerLTE: String
  developerNEQ: String
  developerNotIn: [String!]
  developerNotNil: Boolean
  """discovery_date field predicates"""
  discoveryDate: Time
  discoveryDateGT: Time
  discoveryDateGTE: Time
  discoveryDateIn: [Time!]
  discoveryDateLT: Time
  discoveryDateLTE: Time
  discoveryDateNEQ: Time
  discoveryDateNotIn: [Time!]
  """district_id field predicates"""
  districtID: ID
  districtIDContains: ID
  districtIDContainsFold: ID
  districtIDEqualFold: ID
  districtIDGT: ID
  districtIDGTE: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIn: [ID!]
  districtIDIsNil: Boolean
  districtIDLT: ID
  districtIDLTE: ID
  districtIDNEQ: ID
  districtIDNotIn: [ID!]
  districtIDNotNil: Boolean
  """estimated_amount field predicates"""
  estimatedAmount: Float
  estimatedAmountGT: Float
  estimatedAmountGTE: Float
  estimatedAmountIn: [Float!]
  estimatedAmountIsNil: Boolean
  estimatedAmountLT: Float
  estimatedAmountLTE: Float
  estimatedAmountNEQ: Float
  estimatedAmountNotIn: [Float!]
  estimatedAmountNotNil: Boolean
  """estimated_project_end_date field predicates"""
  estimatedProjectEndDate: Time
  estimatedProjectEndDateGT: Time
  estimatedProjectEndDateGTE: Time
  estimatedProjectEndDateIn: [Time!]
  estimatedProjectEndDateIsNil: Boolean
  estimatedProjectEndDateLT: Time
  estimatedProjectEndDateLTE: Time
  estimatedProjectEndDateNEQ: Time
  estimatedProjectEndDateNotIn: [Time!]
  estimatedProjectEndDateNotNil: Boolean
  """estimated_project_start_date field predicates"""
  estimatedProjectStartDate: Time
  estimatedProjectStartDateGT: Time
  estimatedProjectStartDateGTE: Time
  estimatedProjectStartDateIn: [Time!]
  estimatedProjectStartDateIsNil: Boolean
  estimatedProjectStartDateLT: Time
  estimatedProjectStartDateLTE: Time
  estimatedProjectStartDateNEQ: Time
  estimatedProjectStartDateNotIn: [Time!]
  estimatedProjectStartDateNotNil: Boolean
  """facade_consultant field predicates"""
  facadeConsultant: String
  facadeConsultantContains: String
  facadeConsultantContainsFold: String
  facadeConsultantEqualFold: String
  facadeConsultantGT: String
  facadeConsultantGTE: String
  facadeConsultantHasPrefix: String
  facadeConsultantHasSuffix: String
  facadeConsultantIn: [String!]
  facadeConsultantIsNil: Boolean
  facadeConsultantLT: String
  facadeConsultantLTE: String
  facadeConsultantNEQ: String
  facadeConsultantNotIn: [String!]
  facadeConsultantNotNil: Boolean
  """finder_id field predicates"""
  finderID: ID
  finderIDContains: ID
  finderIDContainsFold: ID
  finderIDEqualFold: ID
  finderIDGT: ID
  finderIDGTE: ID
  finderIDHasPrefix: ID
  finderIDHasSuffix: ID
  finderIDIn: [ID!]
  finderIDIsNil: Boolean
  finderIDLT: ID
  finderIDLTE: ID
  finderIDNEQ: ID
  finderIDNotIn: [ID!]
  finderIDNotNil: Boolean
  """full_address field predicates"""
  fullAddress: String
  fullAddressContains: String
  fullAddressContainsFold: String
  fullAddressEqualFold: String
  fullAddressGT: String
  fullAddressGTE: String
  fullAddressHasPrefix: String
  fullAddressHasSuffix: String
  fullAddressIn: [String!]
  fullAddressIsNil: Boolean
  fullAddressLT: String
  fullAddressLTE: String
  fullAddressNEQ: String
  fullAddressNotIn: [String!]
  fullAddressNotNil: Boolean
  """active_profile edge predicates"""
  hasActiveProfile: Boolean
  hasActiveProfileWith: [TenderProfileWhereInput!]
  """approver edge predicates"""
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """area edge predicates"""
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """city edge predicates"""
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """competitors edge predicates"""
  hasCompetitors: Boolean
  hasCompetitorsWith: [TenderCompetitorWhereInput!]
  """created_by edge predicates"""
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """district edge predicates"""
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """finder edge predicates"""
  hasFinder: Boolean
  hasFinderWith: [UserWhereInput!]
  """following_sales edge predicates"""
  hasFollowingSales: Boolean
  hasFollowingSalesWith: [UserWhereInput!]
  """pending_profile edge predicates"""
  hasPendingProfile: Boolean
  hasPendingProfileWith: [TenderProfileWhereInput!]
  """profiles edge predicates"""
  hasProfiles: Boolean
  hasProfilesWith: [TenderProfileWhereInput!]
  """province edge predicates"""
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """key_project field predicates"""
  keyProject: Boolean
  keyProjectNEQ: Boolean
  """last_tender_amount field predicates"""
  lastTenderAmount: Float
  lastTenderAmountGT: Float
  lastTenderAmountGTE: Float
  lastTenderAmountIn: [Float!]
  lastTenderAmountIsNil: Boolean
  lastTenderAmountLT: Float
  lastTenderAmountLTE: Float
  lastTenderAmountNEQ: Float
  lastTenderAmountNotIn: [Float!]
  lastTenderAmountNotNil: Boolean
  """level_involved field predicates"""
  levelInvolved: Int
  levelInvolvedGT: Int
  levelInvolvedGTE: Int
  levelInvolvedIn: [Int!]
  levelInvolvedIsNil: Boolean
  levelInvolvedLT: Int
  levelInvolvedLTE: Int
  levelInvolvedNEQ: Int
  levelInvolvedNotIn: [Int!]
  levelInvolvedNotNil: Boolean
  """management_company field predicates"""
  managementCompany: String
  managementCompanyContains: String
  managementCompanyContainsFold: String
  managementCompanyEqualFold: String
  managementCompanyGT: String
  managementCompanyGTE: String
  managementCompanyHasPrefix: String
  managementCompanyHasSuffix: String
  managementCompanyIn: [String!]
  managementCompanyIsNil: Boolean
  managementCompanyLT: String
  managementCompanyLTE: String
  managementCompanyNEQ: String
  managementCompanyNotIn: [String!]
  managementCompanyNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  not: TenderWhereInput
  or: [TenderWhereInput!]
  """owner_situations field predicates"""
  ownerSituations: String
  ownerSituationsContains: String
  ownerSituationsContainsFold: String
  ownerSituationsEqualFold: String
  ownerSituationsGT: String
  ownerSituationsGTE: String
  ownerSituationsHasPrefix: String
  ownerSituationsHasSuffix: String
  ownerSituationsIn: [String!]
  ownerSituationsIsNil: Boolean
  ownerSituationsLT: String
  ownerSituationsLTE: String
  ownerSituationsNEQ: String
  ownerSituationsNotIn: [String!]
  ownerSituationsNotNil: Boolean
  """pending_profile_id field predicates"""
  pendingProfileID: ID
  pendingProfileIDContains: ID
  pendingProfileIDContainsFold: ID
  pendingProfileIDEqualFold: ID
  pendingProfileIDGT: ID
  pendingProfileIDGTE: ID
  pendingProfileIDHasPrefix: ID
  pendingProfileIDHasSuffix: ID
  pendingProfileIDIn: [ID!]
  pendingProfileIDIsNil: Boolean
  pendingProfileIDLT: ID
  pendingProfileIDLTE: ID
  pendingProfileIDNEQ: ID
  pendingProfileIDNotIn: [ID!]
  pendingProfileIDNotNil: Boolean
  """prepare_to_bid field predicates"""
  prepareToBid: Boolean
  prepareToBidNEQ: Boolean
  """project_code field predicates"""
  projectCode: String
  projectCodeContains: String
  projectCodeContainsFold: String
  projectCodeEqualFold: String
  projectCodeGT: String
  projectCodeGTE: String
  projectCodeHasPrefix: String
  projectCodeHasSuffix: String
  projectCodeIn: [String!]
  projectCodeIsNil: Boolean
  projectCodeLT: String
  projectCodeLTE: String
  projectCodeNEQ: String
  projectCodeNotIn: [String!]
  projectCodeNotNil: Boolean
  """project_definition field predicates"""
  projectDefinition: String
  projectDefinitionContains: String
  projectDefinitionContainsFold: String
  projectDefinitionEqualFold: String
  projectDefinitionGT: String
  projectDefinitionGTE: String
  projectDefinitionHasPrefix: String
  projectDefinitionHasSuffix: String
  projectDefinitionIn: [String!]
  projectDefinitionIsNil: Boolean
  projectDefinitionLT: String
  projectDefinitionLTE: String
  projectDefinitionNEQ: String
  projectDefinitionNotIn: [String!]
  projectDefinitionNotNil: Boolean
  """project_type field predicates"""
  projectType: String
  projectTypeContains: String
  projectTypeContainsFold: String
  projectTypeEqualFold: String
  projectTypeGT: String
  projectTypeGTE: String
  projectTypeHasPrefix: String
  projectTypeHasSuffix: String
  projectTypeIn: [String!]
  projectTypeIsNil: Boolean
  projectTypeLT: String
  projectTypeLTE: String
  projectTypeNEQ: String
  projectTypeNotIn: [String!]
  projectTypeNotNil: Boolean
  """province_id field predicates"""
  provinceID: ID
  provinceIDContains: ID
  provinceIDContainsFold: ID
  provinceIDEqualFold: ID
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIn: [ID!]
  provinceIDIsNil: Boolean
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDNEQ: ID
  provinceIDNotIn: [ID!]
  provinceIDNotNil: Boolean
  """remark field predicates"""
  remark: String
  remarkContains: String
  remarkContainsFold: String
  remarkEqualFold: String
  remarkGT: String
  remarkGTE: String
  remarkHasPrefix: String
  remarkHasSuffix: String
  remarkIn: [String!]
  remarkIsNil: Boolean
  remarkLT: String
  remarkLTE: String
  remarkNEQ: String
  remarkNotIn: [String!]
  remarkNotNil: Boolean
  """size_and_value_rating field predicates"""
  sizeAndValueRating: Int
  sizeAndValueRatingGT: Int
  sizeAndValueRatingGTE: Int
  sizeAndValueRatingIn: [Int!]
  sizeAndValueRatingIsNil: Boolean
  sizeAndValueRatingLT: Int
  sizeAndValueRatingLTE: Int
  sizeAndValueRatingNEQ: Int
  sizeAndValueRatingNotIn: [Int!]
  sizeAndValueRatingNotNil: Boolean
  """size_and_value_rating_overview field predicates"""
  sizeAndValueRatingOverview: String
  sizeAndValueRatingOverviewContains: String
  sizeAndValueRatingOverviewContainsFold: String
  sizeAndValueRatingOverviewEqualFold: String
  sizeAndValueRatingOverviewGT: String
  sizeAndValueRatingOverviewGTE: String
  sizeAndValueRatingOverviewHasPrefix: String
  sizeAndValueRatingOverviewHasSuffix: String
  sizeAndValueRatingOverviewIn: [String!]
  sizeAndValueRatingOverviewIsNil: Boolean
  sizeAndValueRatingOverviewLT: String
  sizeAndValueRatingOverviewLTE: String
  sizeAndValueRatingOverviewNEQ: String
  sizeAndValueRatingOverviewNotIn: [String!]
  sizeAndValueRatingOverviewNotNil: Boolean
  """status field predicates"""
  status: Int
  statusGT: Int
  statusGTE: Int
  statusIn: [Int!]
  statusLT: Int
  statusLTE: Int
  statusNEQ: Int
  statusNotIn: [Int!]
  """tender_closing_date field predicates"""
  tenderClosingDate: Time
  tenderClosingDateGT: Time
  tenderClosingDateGTE: Time
  tenderClosingDateIn: [Time!]
  tenderClosingDateIsNil: Boolean
  tenderClosingDateLT: Time
  tenderClosingDateLTE: Time
  tenderClosingDateNEQ: Time
  tenderClosingDateNotIn: [Time!]
  tenderClosingDateNotNil: Boolean
  """tender_code field predicates"""
  tenderCode: String
  tenderCodeContains: String
  tenderCodeContainsFold: String
  tenderCodeEqualFold: String
  tenderCodeGT: String
  tenderCodeGTE: String
  tenderCodeHasPrefix: String
  tenderCodeHasSuffix: String
  tenderCodeIn: [String!]
  tenderCodeIsNil: Boolean
  tenderCodeLT: String
  tenderCodeLTE: String
  tenderCodeNEQ: String
  tenderCodeNotIn: [String!]
  tenderCodeNotNil: Boolean
  """tender_date field predicates"""
  tenderDate: Time
  tenderDateGT: Time
  tenderDateGTE: Time
  tenderDateIn: [Time!]
  tenderDateIsNil: Boolean
  tenderDateLT: Time
  tenderDateLTE: Time
  tenderDateNEQ: Time
  tenderDateNotIn: [Time!]
  tenderDateNotNil: Boolean
  """tender_form field predicates"""
  tenderForm: String
  tenderFormContains: String
  tenderFormContainsFold: String
  tenderFormEqualFold: String
  tenderFormGT: String
  tenderFormGTE: String
  tenderFormHasPrefix: String
  tenderFormHasSuffix: String
  tenderFormIn: [String!]
  tenderFormIsNil: Boolean
  tenderFormLT: String
  tenderFormLTE: String
  tenderFormNEQ: String
  tenderFormNotIn: [String!]
  tenderFormNotNil: Boolean
  """tender_situations field predicates"""
  tenderSituations: String
  tenderSituationsContains: String
  tenderSituationsContainsFold: String
  tenderSituationsEqualFold: String
  tenderSituationsGT: String
  tenderSituationsGTE: String
  tenderSituationsHasPrefix: String
  tenderSituationsHasSuffix: String
  tenderSituationsIn: [String!]
  tenderSituationsIsNil: Boolean
  tenderSituationsLT: String
  tenderSituationsLTE: String
  tenderSituationsNEQ: String
  tenderSituationsNotIn: [String!]
  tenderSituationsNotNil: Boolean
  """tender_win_amount field predicates"""
  tenderWinAmount: Float
  tenderWinAmountGT: Float
  tenderWinAmountGTE: Float
  tenderWinAmountIn: [Float!]
  tenderWinAmountIsNil: Boolean
  tenderWinAmountLT: Float
  tenderWinAmountLTE: Float
  tenderWinAmountNEQ: Float
  tenderWinAmountNotIn: [Float!]
  tenderWinAmountNotNil: Boolean
  """tender_win_company field predicates"""
  tenderWinCompany: String
  tenderWinCompanyContains: String
  tenderWinCompanyContainsFold: String
  tenderWinCompanyEqualFold: String
  tenderWinCompanyGT: String
  tenderWinCompanyGTE: String
  tenderWinCompanyHasPrefix: String
  tenderWinCompanyHasSuffix: String
  tenderWinCompanyIn: [String!]
  tenderWinCompanyIsNil: Boolean
  tenderWinCompanyLT: String
  tenderWinCompanyLTE: String
  tenderWinCompanyNEQ: String
  tenderWinCompanyNotIn: [String!]
  tenderWinCompanyNotNil: Boolean
  """tender_win_date field predicates"""
  tenderWinDate: Time
  tenderWinDateGT: Time
  tenderWinDateGTE: Time
  tenderWinDateIn: [Time!]
  tenderWinDateIsNil: Boolean
  tenderWinDateLT: Time
  tenderWinDateLTE: Time
  tenderWinDateNEQ: Time
  tenderWinDateNotIn: [Time!]
  tenderWinDateNotNil: Boolean
  """tendering_agency field predicates"""
  tenderingAgency: String
  tenderingAgencyContains: String
  tenderingAgencyContainsFold: String
  tenderingAgencyEqualFold: String
  tenderingAgencyGT: String
  tenderingAgencyGTE: String
  tenderingAgencyHasPrefix: String
  tenderingAgencyHasSuffix: String
  tenderingAgencyIn: [String!]
  tenderingAgencyIsNil: Boolean
  tenderingAgencyLT: String
  tenderingAgencyLTE: String
  tenderingAgencyNEQ: String
  tenderingAgencyNotIn: [String!]
  tenderingAgencyNotNil: Boolean
  """time_limit_rating field predicates"""
  timeLimitRating: Int
  timeLimitRatingGT: Int
  timeLimitRatingGTE: Int
  timeLimitRatingIn: [Int!]
  timeLimitRatingIsNil: Boolean
  timeLimitRatingLT: Int
  timeLimitRatingLTE: Int
  timeLimitRatingNEQ: Int
  timeLimitRatingNotIn: [Int!]
  timeLimitRatingNotNil: Boolean
  """time_limit_rating_overview field predicates"""
  timeLimitRatingOverview: String
  timeLimitRatingOverviewContains: String
  timeLimitRatingOverviewContainsFold: String
  timeLimitRatingOverviewEqualFold: String
  timeLimitRatingOverviewGT: String
  timeLimitRatingOverviewGTE: String
  timeLimitRatingOverviewHasPrefix: String
  timeLimitRatingOverviewHasSuffix: String
  timeLimitRatingOverviewIn: [String!]
  timeLimitRatingOverviewIsNil: Boolean
  timeLimitRatingOverviewLT: String
  timeLimitRatingOverviewLTE: String
  timeLimitRatingOverviewNEQ: String
  timeLimitRatingOverviewNotIn: [String!]
  timeLimitRatingOverviewNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
}

scalar Time

type TopCompetitor {
  id: ID!
  name: String!
  shortName: String!
  winRate: Float!
}

"""
UpdateAreaInput is used for update Area object.
Input was generated by ent.
"""
input UpdateAreaInput {
  addCustomerIDs: [ID!]
  addProvinceIDs: [ID!]
  addTenderIDs: [ID!]
  addUserIDs: [ID!]
  clearCustomers: Boolean
  clearLeaderChatID: Boolean
  clearProvinces: Boolean
  clearSalesChatID: Boolean
  clearTenders: Boolean
  clearUsers: Boolean
  code: String
  leaderChatID: String
  name: String
  removeCustomerIDs: [ID!]
  removeProvinceIDs: [ID!]
  removeTenderIDs: [ID!]
  removeUserIDs: [ID!]
  salesChatID: String
  updatedAt: Time
}

"""
UpdateCityInput is used for update City object.
Input was generated by ent.
"""
input UpdateCityInput {
  adcode: Int
  addDistrictIDs: [ID!]
  addTenderIDs: [ID!]
  clearDistricts: Boolean
  clearTenders: Boolean
  name: String
  provCode: Int
  provinceID: ID
  removeDistrictIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateCompetitorInput is used for update Competitor object.
Input was generated by ent.
"""
input UpdateCompetitorInput {
  addTenderIDs: [ID!]
  clearTenders: Boolean
  name: String
  removeTenderIDs: [ID!]
  shortName: String
  updatedAt: Time
}

"""
UpdateCountryInput is used for update Country object.
Input was generated by ent.
"""
input UpdateCountryInput {
  adcode: Int
  addProvinceIDs: [ID!]
  clearProvinces: Boolean
  name: String
  removeProvinceIDs: [ID!]
  updatedAt: Time
}

"""
UpdateCustomerInput is used for update Customer object.
Input was generated by ent.
"""
input UpdateCustomerInput {
  activeProfileID: ID
  addProfileIDs: [ID!]
  addTenderIDs: [ID!]
  addVisitRecordIDs: [ID!]
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int
  approverID: ID
  areaID: ID
  clearActiveProfile: Boolean
  clearApprover: Boolean
  clearContactPerson: Boolean
  clearContactPersonEmail: Boolean
  clearContactPersonPhone: Boolean
  clearContactPersonPosition: Boolean
  clearCreatedBy: Boolean
  clearIndustry: Boolean
  clearOwnerType: Boolean
  clearPendingProfile: Boolean
  clearProfiles: Boolean
  clearSales: Boolean
  clearSize: Boolean
  clearTenders: Boolean
  clearUpdatedBy: Boolean
  clearVisitRecords: Boolean
  contactPerson: String
  contactPersonEmail: String
  contactPersonPhone: String
  contactPersonPosition: String
  createdByID: ID
  industry: Int
  name: String
  ownerType: Int
  pendingProfileID: ID
  removeProfileIDs: [ID!]
  removeTenderIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  salesID: ID
  size: Int
  updatedAt: Time
  updatedByID: ID
}

"""
UpdateDistrictInput is used for update District object.
Input was generated by ent.
"""
input UpdateDistrictInput {
  adcode: Int
  addPlotIDs: [ID!]
  addTenderIDs: [ID!]
  cityCode: Int
  cityID: ID
  clearCity: Boolean
  clearPlots: Boolean
  clearTenders: Boolean
  name: String
  provCode: Int
  provinceID: ID
  removePlotIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdatePlotInput is used for update Plot object.
Input was generated by ent.
"""
input UpdatePlotInput {
  colorHex: String
  districtID: ID
  name: String
  updatedAt: Time
}

"""
UpdateProjectInput is used for update Project object.
Input was generated by ent.
"""
input UpdateProjectInput {
  """累計扣款"""
  accumulateDeduction: Float
  addUserIDs: [ID!]
  """散件已完成數量"""
  bulkMaterialsCompletedQuantity: Float
  """散件總訂貨數量"""
  bulkMaterialsTotalOrderQuantity: Float
  """散件未完成數量"""
  bulkMaterialsUncompletedQuantity: Float
  clearAccumulateDeduction: Boolean
  clearBulkMaterialsCompletedQuantity: Boolean
  clearBulkMaterialsTotalOrderQuantity: Boolean
  clearBulkMaterialsUncompletedQuantity: Boolean
  clearContractSupplementaryCount: Boolean
  clearContractorVoCount: Boolean
  clearDiagramBdFinishCount: Boolean
  clearDiagramBdTotalCount: Boolean
  clearDiagramCApprovalRatioDenominator: Boolean
  clearDiagramCApprovalRatioNumerator: Boolean
  clearDiagramConstructionFinishCount: Boolean
  clearDiagramConstructionTotalCount: Boolean
  clearDiagramProcessingFinishCount: Boolean
  clearDiagramProcessingTotalCount: Boolean
  clearOwnerVoCount: Boolean
  clearPayDate: Boolean
  clearRepairFee: Boolean
  clearRevenueAccumulatedCompleted: Boolean
  clearRevenueCurrentYearCompleted: Boolean
  clearRevenueKpi: Boolean
  clearSubcontractorVaCount: Boolean
  clearUnitComponentInstallation: Boolean
  clearUnitComponentProduction: Boolean
  clearUnitComponentTotal: Boolean
  clearUnitInventoryTotal: Boolean
  clearUsers: Boolean
  code: String
  """合約补料數量"""
  contractSupplementaryCount: Int
  """总包VO數量"""
  contractorVoCount: Int
  """BD圖紙完成數量"""
  diagramBdFinishCount: Int
  """BD圖紙總數"""
  diagramBdTotalCount: Int
  """C版批圖率分母"""
  diagramCApprovalRatioDenominator: Int
  """C版批圖率分子"""
  diagramCApprovalRatioNumerator: Int
  """施工圖紙完成數量"""
  diagramConstructionFinishCount: Int
  """施工圖紙總數"""
  diagramConstructionTotalCount: Int
  """加工圖完成數量"""
  diagramProcessingFinishCount: Int
  """加工圖總數"""
  diagramProcessingTotalCount: Int
  """是否完成"""
  isFinished: Boolean
  """業主VO數量"""
  ownerVoCount: Int
  """糧期"""
  payDate: Time
  removeUserIDs: [ID!]
  """执修费"""
  repairFee: Float
  """營業額累計完成"""
  revenueAccumulatedCompleted: Float
  """營業額當年完成"""
  revenueCurrentYearCompleted: Float
  """營業額KPI"""
  revenueKpi: Float
  """分判VA數量"""
  subcontractorVaCount: Int
  """單元件安裝數量"""
  unitComponentInstallation: Float
  """單元件生產數量"""
  unitComponentProduction: Float
  """單元件總數"""
  unitComponentTotal: Float
  """單元件庫存累計"""
  unitInventoryTotal: Float
  updatedAt: Time
}

"""
UpdateProvinceInput is used for update Province object.
Input was generated by ent.
"""
input UpdateProvinceInput {
  adcode: Int
  addCityIDs: [ID!]
  addDistrictIDs: [ID!]
  addTenderIDs: [ID!]
  areaID: ID
  clearArea: Boolean
  clearCities: Boolean
  clearDistricts: Boolean
  clearTenders: Boolean
  countryID: ID
  name: String
  removeCityIDs: [ID!]
  removeDistrictIDs: [ID!]
  removeTenderIDs: [ID!]
  updatedAt: Time
}

"""
UpdateTenderCompetitorInput is used for update TenderCompetitor object.
Input was generated by ent.
"""
input UpdateTenderCompetitorInput {
  amount: Float
  competitorID: ID
  """是否中标"""
  result: Boolean
  tenderID: ID
  updatedAt: Time
}

"""
UpdateTenderInput is used for update Tender object.
Input was generated by ent.
"""
input UpdateTenderInput {
  activeProfileID: ID
  addCompetitorIDs: [ID!]
  addFollowingSaleIDs: [ID!]
  addProfileIDs: [ID!]
  addVisitRecordIDs: [ID!]
  address: String
  appendAttachements: [String!]
  appendImages: [String!]
  """審核飛書訊息ID"""
  approvalMsgID: String
  """1 待審核 2 已通過 3 已拒絕"""
  approvalStatus: Int
  approverID: ID
  """則師，只限港澳"""
  architect: String
  areaID: ID
  attachements: [String!]
  biddingDate: Time
  biddingInstructions: String
  cityID: ID
  classify: Int
  clearActiveProfile: Boolean
  clearAddress: Boolean
  clearApprovalMsgID: Boolean
  clearApprover: Boolean
  clearArchitect: Boolean
  clearAttachements: Boolean
  clearBiddingDate: Boolean
  clearBiddingInstructions: Boolean
  clearCity: Boolean
  clearClassify: Boolean
  clearCompetitivePartnershipRating: Boolean
  clearCompetitivePartnershipRatingOverview: Boolean
  clearCompetitorSituations: Boolean
  clearCompetitors: Boolean
  clearConstructionArea: Boolean
  clearConsultingFirm: Boolean
  clearContractForm: Boolean
  clearContractor: Boolean
  clearCostEngineer: Boolean
  clearCreatedBy: Boolean
  clearCreditAndPaymentRating: Boolean
  clearCreditAndPaymentRatingOverview: Boolean
  clearCurrentProgress: Boolean
  clearCustomer: Boolean
  clearCustomerRelationshipRating: Boolean
  clearCustomerRelationshipRatingOverview: Boolean
  clearDesignUnit: Boolean
  clearDeveloper: Boolean
  clearDistrict: Boolean
  clearEstimatedAmount: Boolean
  clearEstimatedProjectEndDate: Boolean
  clearEstimatedProjectStartDate: Boolean
  clearFacadeConsultant: Boolean
  clearFinder: Boolean
  clearFollowingSales: Boolean
  clearFullAddress: Boolean
  clearImages: Boolean
  clearLastTenderAmount: Boolean
  clearLevelInvolved: Boolean
  clearManagementCompany: Boolean
  clearOwnerSituations: Boolean
  clearPendingProfile: Boolean
  clearProfiles: Boolean
  clearProjectCode: Boolean
  clearProjectDefinition: Boolean
  clearProjectType: Boolean
  clearProvince: Boolean
  clearRemark: Boolean
  clearSizeAndValueRating: Boolean
  clearSizeAndValueRatingOverview: Boolean
  clearTenderClosingDate: Boolean
  clearTenderCode: Boolean
  clearTenderDate: Boolean
  clearTenderForm: Boolean
  clearTenderSituations: Boolean
  clearTenderWinAmount: Boolean
  clearTenderWinCompany: Boolean
  clearTenderWinDate: Boolean
  clearTenderingAgency: Boolean
  clearTimeLimitRating: Boolean
  clearTimeLimitRatingOverview: Boolean
  clearVisitRecords: Boolean
  code: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  competitorSituations: String
  """施工面積，只限港澳"""
  constructionArea: String
  consultingFirm: String
  contractForm: String
  contractor: String
  costEngineer: String
  createdByID: ID
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  currentProgress: String
  customerID: ID
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  designUnit: String
  """業主，只限港澳"""
  developer: String
  discoveryDate: Time
  districtID: ID
  estimatedAmount: Float
  estimatedProjectEndDate: Time
  estimatedProjectStartDate: Time
  facadeConsultant: String
  finderID: ID
  fullAddress: String
  images: [String!]
  keyProject: Boolean
  """最後一次投標金額，只限港澳"""
  lastTenderAmount: Float
  levelInvolved: Int
  managementCompany: String
  name: String
  ownerSituations: String
  pendingProfileID: ID
  prepareToBid: Boolean
  projectCode: String
  projectDefinition: String
  projectType: String
  provinceID: ID
  remark: String
  removeCompetitorIDs: [ID!]
  removeFollowingSaleIDs: [ID!]
  removeProfileIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  status: Int
  """交標日期，只限港澳"""
  tenderClosingDate: Time
  """投標編號，只限港澳"""
  tenderCode: String
  tenderDate: Time
  tenderForm: String
  tenderSituations: String
  """中標金額"""
  tenderWinAmount: Float
  tenderWinCompany: String
  """中標日期，只限港澳"""
  tenderWinDate: Time
  tenderingAgency: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  updatedAt: Time
}

"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  addAreaIDs: [ID!]
  addCustomerIDs: [ID!]
  addProjectIDs: [ID!]
  addTeamMemberIDs: [ID!]
  addTenderIDs: [ID!]
  addVisitRecordIDs: [ID!]
  avatarURL: String
  clearAreas: Boolean
  clearAvatarURL: Boolean
  clearCustomers: Boolean
  clearEmail: Boolean
  clearLeader: Boolean
  clearName: Boolean
  clearProjects: Boolean
  clearTeamMembers: Boolean
  clearTenders: Boolean
  clearUsername: Boolean
  clearVisitRecords: Boolean
  disabled: Boolean
  email: String
  hasEditAccess: Boolean
  hasMapAccess: Boolean
  isAdmin: Boolean
  isCeo: Boolean
  isSuperAdmin: Boolean
  leaderID: ID
  name: String
  openID: String
  removeAreaIDs: [ID!]
  removeCustomerIDs: [ID!]
  removeProjectIDs: [ID!]
  removeTeamMemberIDs: [ID!]
  removeTenderIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  updatedAt: Time
  username: String
}

"""
UpdateVisitRecordInput is used for update VisitRecord object.
Input was generated by ent.
"""
input UpdateVisitRecordInput {
  addFollowUpByIDs: [ID!]
  clearFollowUpBys: Boolean
  clearNextStep: Boolean
  clearTender: Boolean
  commContent: String
  commPeople: String
  customerID: ID
  date: Time
  nextStep: String
  removeFollowUpByIDs: [ID!]
  tenderID: ID
  updatedAt: Time
  visitType: Int
}

type User implements Node {
  areas(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Areas returned from the connection."""
    orderBy: AreaOrder
    """Filtering options for Areas returned from the connection."""
    where: AreaWhereInput
  ): AreaConnection!
  avatarURL: String
  createdAt: Time!
  customers(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Customers returned from the connection."""
    orderBy: [CustomerOrder!]
    """Filtering options for Customers returned from the connection."""
    where: CustomerWhereInput
  ): CustomerConnection!
  disabled: Boolean!
  email: String
  hasEditAccess: Boolean!
  hasMapAccess: Boolean!
  id: ID!
  isAdmin: Boolean!
  isCeo: Boolean!
  isSuperAdmin: Boolean!
  leader: User
  leaderID: ID
  myTenders(after: Cursor, before: Cursor, first: Int, last: Int, orderBy: [TenderOrder!], where: TenderWhereInput): TenderConnection!
  myVisitRecords(after: Cursor, before: Cursor, first: Int, last: Int, orderBy: [VisitRecordOrder!], where: VisitRecordWhereInput): VisitRecordConnection!
  name: String
  openID: String!
  projects(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Projects returned from the connection."""
    orderBy: [ProjectOrder!]
    """Filtering options for Projects returned from the connection."""
    where: ProjectWhereInput
  ): ProjectConnection!
  teamMembers: [User!]
  tenders(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Tenders returned from the connection."""
    orderBy: [TenderOrder!]
    """Filtering options for Tenders returned from the connection."""
    where: TenderWhereInput
  ): TenderConnection!
  updatedAt: Time!
  username: String
  visitRecords(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for VisitRecords returned from the connection."""
    orderBy: [VisitRecordOrder!]
    """Filtering options for VisitRecords returned from the connection."""
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}

"""A connection to a list of items."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: User
}

"""Ordering options for User connections"""
input UserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Users."""
  field: UserOrderField!
}

"""Properties by which User connections can be ordered."""
enum UserOrderField {
  CREATED_AT
}

"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  and: [UserWhereInput!]
  """avatar_url field predicates"""
  avatarURL: String
  avatarURLContains: String
  avatarURLContainsFold: String
  avatarURLEqualFold: String
  avatarURLGT: String
  avatarURLGTE: String
  avatarURLHasPrefix: String
  avatarURLHasSuffix: String
  avatarURLIn: [String!]
  avatarURLIsNil: Boolean
  avatarURLLT: String
  avatarURLLTE: String
  avatarURLNEQ: String
  avatarURLNotIn: [String!]
  avatarURLNotNil: Boolean
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """disabled field predicates"""
  disabled: Boolean
  disabledNEQ: Boolean
  """email field predicates"""
  email: String
  emailContains: String
  emailContainsFold: String
  emailEqualFold: String
  emailGT: String
  emailGTE: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIn: [String!]
  emailIsNil: Boolean
  emailLT: String
  emailLTE: String
  emailNEQ: String
  emailNotIn: [String!]
  emailNotNil: Boolean
  """areas edge predicates"""
  hasAreas: Boolean
  hasAreasWith: [AreaWhereInput!]
  """customers edge predicates"""
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """has_edit_access field predicates"""
  hasEditAccess: Boolean
  hasEditAccessNEQ: Boolean
  """leader edge predicates"""
  hasLeader: Boolean
  hasLeaderWith: [UserWhereInput!]
  """has_map_access field predicates"""
  hasMapAccess: Boolean
  hasMapAccessNEQ: Boolean
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  """team_members edge predicates"""
  hasTeamMembers: Boolean
  hasTeamMembersWith: [UserWhereInput!]
  """tenders edge predicates"""
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """visit_records edge predicates"""
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """is_admin field predicates"""
  isAdmin: Boolean
  isAdminNEQ: Boolean
  """is_ceo field predicates"""
  isCeo: Boolean
  isCeoNEQ: Boolean
  """is_super_admin field predicates"""
  isSuperAdmin: Boolean
  isSuperAdminNEQ: Boolean
  """leader_id field predicates"""
  leaderID: ID
  leaderIDContains: ID
  leaderIDContainsFold: ID
  leaderIDEqualFold: ID
  leaderIDGT: ID
  leaderIDGTE: ID
  leaderIDHasPrefix: ID
  leaderIDHasSuffix: ID
  leaderIDIn: [ID!]
  leaderIDIsNil: Boolean
  leaderIDLT: ID
  leaderIDLTE: ID
  leaderIDNEQ: ID
  leaderIDNotIn: [ID!]
  leaderIDNotNil: Boolean
  """name field predicates"""
  name: String
  nameContains: String
  nameContainsFold: String
  nameEqualFold: String
  nameGT: String
  nameGTE: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIn: [String!]
  nameIsNil: Boolean
  nameLT: String
  nameLTE: String
  nameNEQ: String
  nameNotIn: [String!]
  nameNotNil: Boolean
  not: UserWhereInput
  """open_id field predicates"""
  openID: String
  openIDContains: String
  openIDContainsFold: String
  openIDEqualFold: String
  openIDGT: String
  openIDGTE: String
  openIDHasPrefix: String
  openIDHasSuffix: String
  openIDIn: [String!]
  openIDLT: String
  openIDLTE: String
  openIDNEQ: String
  openIDNotIn: [String!]
  or: [UserWhereInput!]
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """username field predicates"""
  username: String
  usernameContains: String
  usernameContainsFold: String
  usernameEqualFold: String
  usernameGT: String
  usernameGTE: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameIn: [String!]
  usernameIsNil: Boolean
  usernameLT: String
  usernameLTE: String
  usernameNEQ: String
  usernameNotIn: [String!]
  usernameNotNil: Boolean
}

type VisitRecord implements Node {
  commContent: String!
  commPeople: String!
  createdAt: Time!
  customer: Customer!
  customerID: ID!
  date: Time!
  followupbys(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor
    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor
    """Returns the first _n_ elements from the list."""
    first: Int
    """Returns the last _n_ elements from the list."""
    last: Int
    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder
    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection! @goField(name: "FollowUpBys", forceResolver: false)
  id: ID!
  nextStep: String
  tender: Tender
  tenderID: ID
  updatedAt: Time!
  visitType: Int!
}

"""A connection to a list of items."""
type VisitRecordConnection {
  """A list of edges."""
  edges: [VisitRecordEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type VisitRecordEdge {
  """A cursor for use in pagination."""
  cursor: Cursor!
  """The item at the end of the edge."""
  node: VisitRecord
}

"""Ordering options for VisitRecord connections"""
input VisitRecordOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order VisitRecords."""
  field: VisitRecordOrderField!
}

"""Properties by which VisitRecord connections can be ordered."""
enum VisitRecordOrderField {
  CREATED_AT
  DATE
}

"""
VisitRecordWhereInput is used for filtering VisitRecord objects.
Input was generated by ent.
"""
input VisitRecordWhereInput {
  and: [VisitRecordWhereInput!]
  """comm_content field predicates"""
  commContent: String
  commContentContains: String
  commContentContainsFold: String
  commContentEqualFold: String
  commContentGT: String
  commContentGTE: String
  commContentHasPrefix: String
  commContentHasSuffix: String
  commContentIn: [String!]
  commContentLT: String
  commContentLTE: String
  commContentNEQ: String
  commContentNotIn: [String!]
  """comm_people field predicates"""
  commPeople: String
  commPeopleContains: String
  commPeopleContainsFold: String
  commPeopleEqualFold: String
  commPeopleGT: String
  commPeopleGTE: String
  commPeopleHasPrefix: String
  commPeopleHasSuffix: String
  commPeopleIn: [String!]
  commPeopleLT: String
  commPeopleLTE: String
  commPeopleNEQ: String
  commPeopleNotIn: [String!]
  """created_at field predicates"""
  createdAt: Time
  createdAtGT: Time
  createdAtGTE: Time
  createdAtIn: [Time!]
  createdAtLT: Time
  createdAtLTE: Time
  createdAtNEQ: Time
  createdAtNotIn: [Time!]
  """customer_id field predicates"""
  customerID: ID
  customerIDContains: ID
  customerIDContainsFold: ID
  customerIDEqualFold: ID
  customerIDGT: ID
  customerIDGTE: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIn: [ID!]
  customerIDLT: ID
  customerIDLTE: ID
  customerIDNEQ: ID
  customerIDNotIn: [ID!]
  """date field predicates"""
  date: Time
  dateGT: Time
  dateGTE: Time
  dateIn: [Time!]
  dateLT: Time
  dateLTE: Time
  dateNEQ: Time
  dateNotIn: [Time!]
  """customer edge predicates"""
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """followUpBys edge predicates"""
  hasFollowUpBys: Boolean
  hasFollowUpBysWith: [UserWhereInput!]
  """tender edge predicates"""
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """id field predicates"""
  id: ID
  idGT: ID
  idGTE: ID
  idIn: [ID!]
  idLT: ID
  idLTE: ID
  idNEQ: ID
  idNotIn: [ID!]
  """next_step field predicates"""
  nextStep: String
  nextStepContains: String
  nextStepContainsFold: String
  nextStepEqualFold: String
  nextStepGT: String
  nextStepGTE: String
  nextStepHasPrefix: String
  nextStepHasSuffix: String
  nextStepIn: [String!]
  nextStepIsNil: Boolean
  nextStepLT: String
  nextStepLTE: String
  nextStepNEQ: String
  nextStepNotIn: [String!]
  nextStepNotNil: Boolean
  not: VisitRecordWhereInput
  or: [VisitRecordWhereInput!]
  """tender_id field predicates"""
  tenderID: ID
  tenderIDContains: ID
  tenderIDContainsFold: ID
  tenderIDEqualFold: ID
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDIn: [ID!]
  tenderIDIsNil: Boolean
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDNEQ: ID
  tenderIDNotIn: [ID!]
  tenderIDNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtIn: [Time!]
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtNEQ: Time
  updatedAtNotIn: [Time!]
  """visit_type field predicates"""
  visitType: Int
  visitTypeGT: Int
  visitTypeGTE: Int
  visitTypeIn: [Int!]
  visitTypeLT: Int
  visitTypeLTE: Int
  visitTypeNEQ: Int
  visitTypeNotIn: [Int!]
}

input WinLostTenderCompetitorInput {
  amount: Float!
  id: ID!
}

input WinTenderInput {
  competitors: [WinLostTenderCompetitorInput!]!
  projectCode: String!
  projectDefinition: String!
  tenderWinAmount: Float!
}