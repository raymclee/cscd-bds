/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authImport } from './routes/__auth'
import { Route as authSessionImport } from './routes/__auth/session'
import { Route as authportalImport } from './routes/__auth/__portal'
import { Route as authmapImport } from './routes/__auth/__map'
import { Route as authimapImport } from './routes/__auth/__imap'
import { Route as authmapIndexImport } from './routes/__auth/__map/index'
import { Route as authmapHomeImport } from './routes/__auth/__map/home'
import { Route as authmapEditImport } from './routes/__auth/__map/edit'
import { Route as authimapH2Import } from './routes/__auth/__imap/h2'
import { Route as authportalPortalTendersIndexImport } from './routes/__auth/__portal/portal/tenders.index'
import { Route as authportalPortalTendersIdImport } from './routes/__auth/__portal/portal/tenders.$id'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const AccessDeniedLazyImport = createFileRoute('/access-denied')()
const authmapDashboardLazyImport = createFileRoute('/__auth/__map/dashboard')()
const authmapAreaMapLazyImport = createFileRoute('/__auth/__map/area-map')()
const authimapH3LazyImport = createFileRoute('/__auth/__imap/h3')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AccessDeniedLazyRoute = AccessDeniedLazyImport.update({
  id: '/access-denied',
  path: '/access-denied',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/access-denied.lazy').then((d) => d.Route))

const authRoute = authImport
  .update({
    id: '/__auth',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/__auth.lazy').then((d) => d.Route))

const authSessionRoute = authSessionImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => authRoute,
} as any)

const authportalRoute = authportalImport
  .update({
    id: '/__portal',
    getParentRoute: () => authRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__portal.lazy').then((d) => d.Route))

const authmapRoute = authmapImport.update({
  id: '/__map',
  getParentRoute: () => authRoute,
} as any)

const authimapRoute = authimapImport
  .update({
    id: '/__imap',
    getParentRoute: () => authRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__imap.lazy').then((d) => d.Route))

const authmapIndexRoute = authmapIndexImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => authmapRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__map/index.lazy').then((d) => d.Route))

const authmapDashboardLazyRoute = authmapDashboardLazyImport
  .update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => authmapRoute,
  } as any)
  .lazy(() =>
    import('./routes/__auth/__map/dashboard.lazy').then((d) => d.Route),
  )

const authmapAreaMapLazyRoute = authmapAreaMapLazyImport
  .update({
    id: '/area-map',
    path: '/area-map',
    getParentRoute: () => authmapRoute,
  } as any)
  .lazy(() =>
    import('./routes/__auth/__map/area-map.lazy').then((d) => d.Route),
  )

const authimapH3LazyRoute = authimapH3LazyImport
  .update({
    id: '/h3',
    path: '/h3',
    getParentRoute: () => authimapRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__imap/h3.lazy').then((d) => d.Route))

const authmapHomeRoute = authmapHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => authmapRoute,
} as any)

const authmapEditRoute = authmapEditImport
  .update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => authmapRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__map/edit.lazy').then((d) => d.Route))

const authimapH2Route = authimapH2Import
  .update({
    id: '/h2',
    path: '/h2',
    getParentRoute: () => authimapRoute,
  } as any)
  .lazy(() => import('./routes/__auth/__imap/h2.lazy').then((d) => d.Route))

const authportalPortalTendersIndexRoute = authportalPortalTendersIndexImport
  .update({
    id: '/portal/tenders/',
    path: '/portal/tenders/',
    getParentRoute: () => authportalRoute,
  } as any)
  .lazy(() =>
    import('./routes/__auth/__portal/portal/tenders.index.lazy').then(
      (d) => d.Route,
    ),
  )

const authportalPortalTendersIdRoute = authportalPortalTendersIdImport
  .update({
    id: '/portal/tenders/$id',
    path: '/portal/tenders/$id',
    getParentRoute: () => authportalRoute,
  } as any)
  .lazy(() =>
    import('./routes/__auth/__portal/portal/tenders.$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/access-denied': {
      id: '/access-denied'
      path: '/access-denied'
      fullPath: '/access-denied'
      preLoaderRoute: typeof AccessDeniedLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/__auth/__imap': {
      id: '/__auth/__imap'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authimapImport
      parentRoute: typeof authImport
    }
    '/__auth/__map': {
      id: '/__auth/__map'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authmapImport
      parentRoute: typeof authImport
    }
    '/__auth/__portal': {
      id: '/__auth/__portal'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authportalImport
      parentRoute: typeof authImport
    }
    '/__auth/session': {
      id: '/__auth/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof authSessionImport
      parentRoute: typeof authImport
    }
    '/__auth/__imap/h2': {
      id: '/__auth/__imap/h2'
      path: '/h2'
      fullPath: '/h2'
      preLoaderRoute: typeof authimapH2Import
      parentRoute: typeof authimapImport
    }
    '/__auth/__map/edit': {
      id: '/__auth/__map/edit'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof authmapEditImport
      parentRoute: typeof authmapImport
    }
    '/__auth/__map/home': {
      id: '/__auth/__map/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof authmapHomeImport
      parentRoute: typeof authmapImport
    }
    '/__auth/__imap/h3': {
      id: '/__auth/__imap/h3'
      path: '/h3'
      fullPath: '/h3'
      preLoaderRoute: typeof authimapH3LazyImport
      parentRoute: typeof authimapImport
    }
    '/__auth/__map/area-map': {
      id: '/__auth/__map/area-map'
      path: '/area-map'
      fullPath: '/area-map'
      preLoaderRoute: typeof authmapAreaMapLazyImport
      parentRoute: typeof authmapImport
    }
    '/__auth/__map/dashboard': {
      id: '/__auth/__map/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authmapDashboardLazyImport
      parentRoute: typeof authmapImport
    }
    '/__auth/__map/': {
      id: '/__auth/__map/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authmapIndexImport
      parentRoute: typeof authmapImport
    }
    '/__auth/__portal/portal/tenders/$id': {
      id: '/__auth/__portal/portal/tenders/$id'
      path: '/portal/tenders/$id'
      fullPath: '/portal/tenders/$id'
      preLoaderRoute: typeof authportalPortalTendersIdImport
      parentRoute: typeof authportalImport
    }
    '/__auth/__portal/portal/tenders/': {
      id: '/__auth/__portal/portal/tenders/'
      path: '/portal/tenders'
      fullPath: '/portal/tenders'
      preLoaderRoute: typeof authportalPortalTendersIndexImport
      parentRoute: typeof authportalImport
    }
  }
}

// Create and export the route tree

interface authimapRouteChildren {
  authimapH2Route: typeof authimapH2Route
  authimapH3LazyRoute: typeof authimapH3LazyRoute
}

const authimapRouteChildren: authimapRouteChildren = {
  authimapH2Route: authimapH2Route,
  authimapH3LazyRoute: authimapH3LazyRoute,
}

const authimapRouteWithChildren = authimapRoute._addFileChildren(
  authimapRouteChildren,
)

interface authmapRouteChildren {
  authmapEditRoute: typeof authmapEditRoute
  authmapHomeRoute: typeof authmapHomeRoute
  authmapAreaMapLazyRoute: typeof authmapAreaMapLazyRoute
  authmapDashboardLazyRoute: typeof authmapDashboardLazyRoute
  authmapIndexRoute: typeof authmapIndexRoute
}

const authmapRouteChildren: authmapRouteChildren = {
  authmapEditRoute: authmapEditRoute,
  authmapHomeRoute: authmapHomeRoute,
  authmapAreaMapLazyRoute: authmapAreaMapLazyRoute,
  authmapDashboardLazyRoute: authmapDashboardLazyRoute,
  authmapIndexRoute: authmapIndexRoute,
}

const authmapRouteWithChildren =
  authmapRoute._addFileChildren(authmapRouteChildren)

interface authportalRouteChildren {
  authportalPortalTendersIdRoute: typeof authportalPortalTendersIdRoute
  authportalPortalTendersIndexRoute: typeof authportalPortalTendersIndexRoute
}

const authportalRouteChildren: authportalRouteChildren = {
  authportalPortalTendersIdRoute: authportalPortalTendersIdRoute,
  authportalPortalTendersIndexRoute: authportalPortalTendersIndexRoute,
}

const authportalRouteWithChildren = authportalRoute._addFileChildren(
  authportalRouteChildren,
)

interface authRouteChildren {
  authimapRoute: typeof authimapRouteWithChildren
  authmapRoute: typeof authmapRouteWithChildren
  authportalRoute: typeof authportalRouteWithChildren
  authSessionRoute: typeof authSessionRoute
}

const authRouteChildren: authRouteChildren = {
  authimapRoute: authimapRouteWithChildren,
  authmapRoute: authmapRouteWithChildren,
  authportalRoute: authportalRouteWithChildren,
  authSessionRoute: authSessionRoute,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof authportalRouteWithChildren
  '/access-denied': typeof AccessDeniedLazyRoute
  '/login': typeof LoginLazyRoute
  '/session': typeof authSessionRoute
  '/h2': typeof authimapH2Route
  '/edit': typeof authmapEditRoute
  '/home': typeof authmapHomeRoute
  '/h3': typeof authimapH3LazyRoute
  '/area-map': typeof authmapAreaMapLazyRoute
  '/dashboard': typeof authmapDashboardLazyRoute
  '/': typeof authmapIndexRoute
  '/portal/tenders/$id': typeof authportalPortalTendersIdRoute
  '/portal/tenders': typeof authportalPortalTendersIndexRoute
}

export interface FileRoutesByTo {
  '': typeof authportalRouteWithChildren
  '/access-denied': typeof AccessDeniedLazyRoute
  '/login': typeof LoginLazyRoute
  '/session': typeof authSessionRoute
  '/h2': typeof authimapH2Route
  '/edit': typeof authmapEditRoute
  '/home': typeof authmapHomeRoute
  '/h3': typeof authimapH3LazyRoute
  '/area-map': typeof authmapAreaMapLazyRoute
  '/dashboard': typeof authmapDashboardLazyRoute
  '/': typeof authmapIndexRoute
  '/portal/tenders/$id': typeof authportalPortalTendersIdRoute
  '/portal/tenders': typeof authportalPortalTendersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/__auth': typeof authRouteWithChildren
  '/access-denied': typeof AccessDeniedLazyRoute
  '/login': typeof LoginLazyRoute
  '/__auth/__imap': typeof authimapRouteWithChildren
  '/__auth/__map': typeof authmapRouteWithChildren
  '/__auth/__portal': typeof authportalRouteWithChildren
  '/__auth/session': typeof authSessionRoute
  '/__auth/__imap/h2': typeof authimapH2Route
  '/__auth/__map/edit': typeof authmapEditRoute
  '/__auth/__map/home': typeof authmapHomeRoute
  '/__auth/__imap/h3': typeof authimapH3LazyRoute
  '/__auth/__map/area-map': typeof authmapAreaMapLazyRoute
  '/__auth/__map/dashboard': typeof authmapDashboardLazyRoute
  '/__auth/__map/': typeof authmapIndexRoute
  '/__auth/__portal/portal/tenders/$id': typeof authportalPortalTendersIdRoute
  '/__auth/__portal/portal/tenders/': typeof authportalPortalTendersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/access-denied'
    | '/login'
    | '/session'
    | '/h2'
    | '/edit'
    | '/home'
    | '/h3'
    | '/area-map'
    | '/dashboard'
    | '/'
    | '/portal/tenders/$id'
    | '/portal/tenders'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/access-denied'
    | '/login'
    | '/session'
    | '/h2'
    | '/edit'
    | '/home'
    | '/h3'
    | '/area-map'
    | '/dashboard'
    | '/'
    | '/portal/tenders/$id'
    | '/portal/tenders'
  id:
    | '__root__'
    | '/__auth'
    | '/access-denied'
    | '/login'
    | '/__auth/__imap'
    | '/__auth/__map'
    | '/__auth/__portal'
    | '/__auth/session'
    | '/__auth/__imap/h2'
    | '/__auth/__map/edit'
    | '/__auth/__map/home'
    | '/__auth/__imap/h3'
    | '/__auth/__map/area-map'
    | '/__auth/__map/dashboard'
    | '/__auth/__map/'
    | '/__auth/__portal/portal/tenders/$id'
    | '/__auth/__portal/portal/tenders/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRoute: typeof authRouteWithChildren
  AccessDeniedLazyRoute: typeof AccessDeniedLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  authRoute: authRouteWithChildren,
  AccessDeniedLazyRoute: AccessDeniedLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/__auth",
        "/access-denied",
        "/login"
      ]
    },
    "/__auth": {
      "filePath": "__auth.tsx",
      "children": [
        "/__auth/__imap",
        "/__auth/__map",
        "/__auth/__portal",
        "/__auth/session"
      ]
    },
    "/access-denied": {
      "filePath": "access-denied.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/__auth/__imap": {
      "filePath": "__auth/__imap.tsx",
      "parent": "/__auth",
      "children": [
        "/__auth/__imap/h2",
        "/__auth/__imap/h3"
      ]
    },
    "/__auth/__map": {
      "filePath": "__auth/__map.tsx",
      "parent": "/__auth",
      "children": [
        "/__auth/__map/edit",
        "/__auth/__map/home",
        "/__auth/__map/area-map",
        "/__auth/__map/dashboard",
        "/__auth/__map/"
      ]
    },
    "/__auth/__portal": {
      "filePath": "__auth/__portal.tsx",
      "parent": "/__auth",
      "children": [
        "/__auth/__portal/portal/tenders/$id",
        "/__auth/__portal/portal/tenders/"
      ]
    },
    "/__auth/session": {
      "filePath": "__auth/session.tsx",
      "parent": "/__auth"
    },
    "/__auth/__imap/h2": {
      "filePath": "__auth/__imap/h2.tsx",
      "parent": "/__auth/__imap"
    },
    "/__auth/__map/edit": {
      "filePath": "__auth/__map/edit.tsx",
      "parent": "/__auth/__map"
    },
    "/__auth/__map/home": {
      "filePath": "__auth/__map/home.tsx",
      "parent": "/__auth/__map"
    },
    "/__auth/__imap/h3": {
      "filePath": "__auth/__imap/h3.lazy.tsx",
      "parent": "/__auth/__imap"
    },
    "/__auth/__map/area-map": {
      "filePath": "__auth/__map/area-map.lazy.tsx",
      "parent": "/__auth/__map"
    },
    "/__auth/__map/dashboard": {
      "filePath": "__auth/__map/dashboard.lazy.tsx",
      "parent": "/__auth/__map"
    },
    "/__auth/__map/": {
      "filePath": "__auth/__map/index.tsx",
      "parent": "/__auth/__map"
    },
    "/__auth/__portal/portal/tenders/$id": {
      "filePath": "__auth/__portal/portal/tenders.$id.tsx",
      "parent": "/__auth/__portal"
    },
    "/__auth/__portal/portal/tenders/": {
      "filePath": "__auth/__portal/portal/tenders.index.tsx",
      "parent": "/__auth/__portal"
    }
  }
}
ROUTE_MANIFEST_END */
