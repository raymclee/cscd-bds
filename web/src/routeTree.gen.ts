/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as mapImport } from './routes/__map'
import { Route as authImport } from './routes/__auth'
import { Route as mapIndexImport } from './routes/__map/index'
import { Route as mapHomeImport } from './routes/__map/home'
import { Route as mapEditImport } from './routes/__map/edit'
import { Route as authSessionImport } from './routes/__auth/session'

// Create Virtual Routes

const mapDashboardLazyImport = createFileRoute('/__map/dashboard')()
const mapAreaMapLazyImport = createFileRoute('/__map/area-map')()
const map7LazyImport = createFileRoute('/__map/7')()
const map4LazyImport = createFileRoute('/__map/4')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const mapRoute = mapImport.update({
  id: '/__map',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport
  .update({
    id: '/__auth',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/__auth.lazy').then((d) => d.Route))

const mapIndexRoute = mapIndexImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/index.lazy').then((d) => d.Route))

const mapDashboardLazyRoute = mapDashboardLazyImport
  .update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/dashboard.lazy').then((d) => d.Route))

const mapAreaMapLazyRoute = mapAreaMapLazyImport
  .update({
    id: '/area-map',
    path: '/area-map',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/area-map.lazy').then((d) => d.Route))

const map7LazyRoute = map7LazyImport
  .update({
    id: '/7',
    path: '/7',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/7.lazy').then((d) => d.Route))

const map4LazyRoute = map4LazyImport
  .update({
    id: '/4',
    path: '/4',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/4.lazy').then((d) => d.Route))

const mapHomeRoute = mapHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => mapRoute,
} as any)

const mapEditRoute = mapEditImport
  .update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => mapRoute,
  } as any)
  .lazy(() => import('./routes/__map/edit.lazy').then((d) => d.Route))

const authSessionRoute = authSessionImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => authRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/__map': {
      id: '/__map'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof mapImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/__auth/session': {
      id: '/__auth/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof authSessionImport
      parentRoute: typeof authImport
    }
    '/__map/edit': {
      id: '/__map/edit'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof mapEditImport
      parentRoute: typeof mapImport
    }
    '/__map/home': {
      id: '/__map/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof mapHomeImport
      parentRoute: typeof mapImport
    }
    '/__map/4': {
      id: '/__map/4'
      path: '/4'
      fullPath: '/4'
      preLoaderRoute: typeof map4LazyImport
      parentRoute: typeof mapImport
    }
    '/__map/7': {
      id: '/__map/7'
      path: '/7'
      fullPath: '/7'
      preLoaderRoute: typeof map7LazyImport
      parentRoute: typeof mapImport
    }
    '/__map/area-map': {
      id: '/__map/area-map'
      path: '/area-map'
      fullPath: '/area-map'
      preLoaderRoute: typeof mapAreaMapLazyImport
      parentRoute: typeof mapImport
    }
    '/__map/dashboard': {
      id: '/__map/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof mapDashboardLazyImport
      parentRoute: typeof mapImport
    }
    '/__map/': {
      id: '/__map/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mapIndexImport
      parentRoute: typeof mapImport
    }
  }
}

// Create and export the route tree

interface authRouteChildren {
  authSessionRoute: typeof authSessionRoute
}

const authRouteChildren: authRouteChildren = {
  authSessionRoute: authSessionRoute,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface mapRouteChildren {
  mapEditRoute: typeof mapEditRoute
  mapHomeRoute: typeof mapHomeRoute
  map4LazyRoute: typeof map4LazyRoute
  map7LazyRoute: typeof map7LazyRoute
  mapAreaMapLazyRoute: typeof mapAreaMapLazyRoute
  mapDashboardLazyRoute: typeof mapDashboardLazyRoute
  mapIndexRoute: typeof mapIndexRoute
}

const mapRouteChildren: mapRouteChildren = {
  mapEditRoute: mapEditRoute,
  mapHomeRoute: mapHomeRoute,
  map4LazyRoute: map4LazyRoute,
  map7LazyRoute: map7LazyRoute,
  mapAreaMapLazyRoute: mapAreaMapLazyRoute,
  mapDashboardLazyRoute: mapDashboardLazyRoute,
  mapIndexRoute: mapIndexRoute,
}

const mapRouteWithChildren = mapRoute._addFileChildren(mapRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof mapRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/session': typeof authSessionRoute
  '/edit': typeof mapEditRoute
  '/home': typeof mapHomeRoute
  '/4': typeof map4LazyRoute
  '/7': typeof map7LazyRoute
  '/area-map': typeof mapAreaMapLazyRoute
  '/dashboard': typeof mapDashboardLazyRoute
  '/': typeof mapIndexRoute
}

export interface FileRoutesByTo {
  '': typeof authRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/session': typeof authSessionRoute
  '/edit': typeof mapEditRoute
  '/home': typeof mapHomeRoute
  '/4': typeof map4LazyRoute
  '/7': typeof map7LazyRoute
  '/area-map': typeof mapAreaMapLazyRoute
  '/dashboard': typeof mapDashboardLazyRoute
  '/': typeof mapIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/__auth': typeof authRouteWithChildren
  '/__map': typeof mapRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/__auth/session': typeof authSessionRoute
  '/__map/edit': typeof mapEditRoute
  '/__map/home': typeof mapHomeRoute
  '/__map/4': typeof map4LazyRoute
  '/__map/7': typeof map7LazyRoute
  '/__map/area-map': typeof mapAreaMapLazyRoute
  '/__map/dashboard': typeof mapDashboardLazyRoute
  '/__map/': typeof mapIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/login'
    | '/session'
    | '/edit'
    | '/home'
    | '/4'
    | '/7'
    | '/area-map'
    | '/dashboard'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/about'
    | '/login'
    | '/session'
    | '/edit'
    | '/home'
    | '/4'
    | '/7'
    | '/area-map'
    | '/dashboard'
    | '/'
  id:
    | '__root__'
    | '/__auth'
    | '/__map'
    | '/about'
    | '/login'
    | '/__auth/session'
    | '/__map/edit'
    | '/__map/home'
    | '/__map/4'
    | '/__map/7'
    | '/__map/area-map'
    | '/__map/dashboard'
    | '/__map/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRoute: typeof authRouteWithChildren
  mapRoute: typeof mapRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  authRoute: authRouteWithChildren,
  mapRoute: mapRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/__auth",
        "/__map",
        "/about",
        "/login"
      ]
    },
    "/__auth": {
      "filePath": "__auth.tsx",
      "children": [
        "/__auth/session"
      ]
    },
    "/__map": {
      "filePath": "__map.tsx",
      "children": [
        "/__map/edit",
        "/__map/home",
        "/__map/4",
        "/__map/7",
        "/__map/area-map",
        "/__map/dashboard",
        "/__map/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/__auth/session": {
      "filePath": "__auth/session.tsx",
      "parent": "/__auth"
    },
    "/__map/edit": {
      "filePath": "__map/edit.tsx",
      "parent": "/__map"
    },
    "/__map/home": {
      "filePath": "__map/home.tsx",
      "parent": "/__map"
    },
    "/__map/4": {
      "filePath": "__map/4.lazy.tsx",
      "parent": "/__map"
    },
    "/__map/7": {
      "filePath": "__map/7.lazy.tsx",
      "parent": "/__map"
    },
    "/__map/area-map": {
      "filePath": "__map/area-map.lazy.tsx",
      "parent": "/__map"
    },
    "/__map/dashboard": {
      "filePath": "__map/dashboard.lazy.tsx",
      "parent": "/__map"
    },
    "/__map/": {
      "filePath": "__map/index.tsx",
      "parent": "/__map"
    }
  }
}
ROUTE_MANIFEST_END */
