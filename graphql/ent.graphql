directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Area implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  code: String!
  leaderChatID: String
  salesChatID: String
  customers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Customers returned from the connection.
    """
    orderBy: [CustomerOrder!]

    """
    Filtering options for Customers returned from the connection.
    """
    where: CustomerWhereInput
  ): CustomerConnection!
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
  provinces(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Provinces returned from the connection.
    """
    orderBy: ProvinceOrder

    """
    Filtering options for Provinces returned from the connection.
    """
    where: ProvinceWhereInput
  ): ProvinceConnection!
}
"""
A connection to a list of items.
"""
type AreaConnection {
  """
  A list of edges.
  """
  edges: [AreaEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AreaEdge {
  """
  The item at the end of the edge.
  """
  node: Area
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Area connections
"""
input AreaOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Areas.
  """
  field: AreaOrderField!
}
"""
Properties by which Area connections can be ordered.
"""
enum AreaOrderField {
  CREATED_AT
}
"""
AreaWhereInput is used for filtering Area objects.
Input was generated by ent.
"""
input AreaWhereInput {
  not: AreaWhereInput
  and: [AreaWhereInput!]
  or: [AreaWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  leader_chat_id field predicates
  """
  leaderChatID: String
  leaderChatIDNEQ: String
  leaderChatIDIn: [String!]
  leaderChatIDNotIn: [String!]
  leaderChatIDGT: String
  leaderChatIDGTE: String
  leaderChatIDLT: String
  leaderChatIDLTE: String
  leaderChatIDContains: String
  leaderChatIDHasPrefix: String
  leaderChatIDHasSuffix: String
  leaderChatIDIsNil: Boolean
  leaderChatIDNotNil: Boolean
  leaderChatIDEqualFold: String
  leaderChatIDContainsFold: String
  """
  sales_chat_id field predicates
  """
  salesChatID: String
  salesChatIDNEQ: String
  salesChatIDIn: [String!]
  salesChatIDNotIn: [String!]
  salesChatIDGT: String
  salesChatIDGTE: String
  salesChatIDLT: String
  salesChatIDLTE: String
  salesChatIDContains: String
  salesChatIDHasPrefix: String
  salesChatIDHasSuffix: String
  salesChatIDIsNil: Boolean
  salesChatIDNotNil: Boolean
  salesChatIDEqualFold: String
  salesChatIDContainsFold: String
  """
  customers edge predicates
  """
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  provinces edge predicates
  """
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
}
type City implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  adcode: Int!
  provCode: Int!
  name: String!
  provinceID: ID!
  districts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Districts returned from the connection.
    """
    orderBy: DistrictOrder

    """
    Filtering options for Districts returned from the connection.
    """
    where: DistrictWhereInput
  ): DistrictConnection!
  province: Province!
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
}
"""
A connection to a list of items.
"""
type CityConnection {
  """
  A list of edges.
  """
  edges: [CityEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CityEdge {
  """
  The item at the end of the edge.
  """
  node: City
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for City connections
"""
input CityOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Cities.
  """
  field: CityOrderField!
}
"""
Properties by which City connections can be ordered.
"""
enum CityOrderField {
  CREATED_AT
}
"""
CityWhereInput is used for filtering City objects.
Input was generated by ent.
"""
input CityWhereInput {
  not: CityWhereInput
  and: [CityWhereInput!]
  or: [CityWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  adcode field predicates
  """
  adcode: Int
  adcodeNEQ: Int
  adcodeIn: [Int!]
  adcodeNotIn: [Int!]
  adcodeGT: Int
  adcodeGTE: Int
  adcodeLT: Int
  adcodeLTE: Int
  """
  prov_code field predicates
  """
  provCode: Int
  provCodeNEQ: Int
  provCodeIn: [Int!]
  provCodeNotIn: [Int!]
  provCodeGT: Int
  provCodeGTE: Int
  provCodeLT: Int
  provCodeLTE: Int
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  province_id field predicates
  """
  provinceID: ID
  provinceIDNEQ: ID
  provinceIDIn: [ID!]
  provinceIDNotIn: [ID!]
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDContains: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDEqualFold: ID
  provinceIDContainsFold: ID
  """
  districts edge predicates
  """
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """
  province edge predicates
  """
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
}
type Competitor implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  shortName: String!
  name: String!
  tenders: [TenderCompetitor!]
}
"""
A connection to a list of items.
"""
type CompetitorConnection {
  """
  A list of edges.
  """
  edges: [CompetitorEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CompetitorEdge {
  """
  The item at the end of the edge.
  """
  node: Competitor
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Competitor connections
"""
input CompetitorOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Competitors.
  """
  field: CompetitorOrderField!
}
"""
Properties by which Competitor connections can be ordered.
"""
enum CompetitorOrderField {
  CREATED_AT
  NAME
}
"""
CompetitorWhereInput is used for filtering Competitor objects.
Input was generated by ent.
"""
input CompetitorWhereInput {
  not: CompetitorWhereInput
  and: [CompetitorWhereInput!]
  or: [CompetitorWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  short_name field predicates
  """
  shortName: String
  shortNameNEQ: String
  shortNameIn: [String!]
  shortNameNotIn: [String!]
  shortNameGT: String
  shortNameGTE: String
  shortNameLT: String
  shortNameLTE: String
  shortNameContains: String
  shortNameHasPrefix: String
  shortNameHasSuffix: String
  shortNameEqualFold: String
  shortNameContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderCompetitorWhereInput!]
}
type Country implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  adcode: Int!
  name: String!
  provinces(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Provinces returned from the connection.
    """
    orderBy: ProvinceOrder

    """
    Filtering options for Provinces returned from the connection.
    """
    where: ProvinceWhereInput
  ): ProvinceConnection!
}
"""
A connection to a list of items.
"""
type CountryConnection {
  """
  A list of edges.
  """
  edges: [CountryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CountryEdge {
  """
  The item at the end of the edge.
  """
  node: Country
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Country connections
"""
input CountryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Countries.
  """
  field: CountryOrderField!
}
"""
Properties by which Country connections can be ordered.
"""
enum CountryOrderField {
  CREATED_AT
}
"""
CountryWhereInput is used for filtering Country objects.
Input was generated by ent.
"""
input CountryWhereInput {
  not: CountryWhereInput
  and: [CountryWhereInput!]
  or: [CountryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  adcode field predicates
  """
  adcode: Int
  adcodeNEQ: Int
  adcodeIn: [Int!]
  adcodeNotIn: [Int!]
  adcodeGT: Int
  adcodeGTE: Int
  adcodeLT: Int
  adcodeLTE: Int
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  provinces edge predicates
  """
  hasProvinces: Boolean
  hasProvincesWith: [ProvinceWhereInput!]
}
"""
CreateAreaInput is used for create Area object.
Input was generated by ent.
"""
input CreateAreaInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  code: String!
  leaderChatID: String
  salesChatID: String
  customerIDs: [ID!]
  tenderIDs: [ID!]
  userIDs: [ID!]
  provinceIDs: [ID!]
}
"""
CreateCityInput is used for create City object.
Input was generated by ent.
"""
input CreateCityInput {
  createdAt: Time
  updatedAt: Time
  adcode: Int!
  provCode: Int!
  name: String!
  districtIDs: [ID!]
  provinceID: ID!
  tenderIDs: [ID!]
}
"""
CreateCompetitorInput is used for create Competitor object.
Input was generated by ent.
"""
input CreateCompetitorInput {
  createdAt: Time
  updatedAt: Time
  shortName: String!
  name: String!
  tenderIDs: [ID!]
}
"""
CreateCountryInput is used for create Country object.
Input was generated by ent.
"""
input CreateCountryInput {
  createdAt: Time
  updatedAt: Time
  adcode: Int!
  name: String!
  provinceIDs: [ID!]
}
"""
CreateCustomerInput is used for create Customer object.
Input was generated by ent.
"""
input CreateCustomerInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int
  ownerType: Int
  industry: Int
  size: Int
  contactPerson: String
  contactPersonPosition: String
  contactPersonPhone: String
  contactPersonEmail: String
  areaID: ID!
  tenderIDs: [ID!]
  salesID: ID
  createdByID: ID
  updatedByID: ID
  approverID: ID
  visitRecordIDs: [ID!]
  profileIDs: [ID!]
  activeProfileID: ID
  pendingProfileID: ID
}
"""
CreateCustomerProfileInput is used for create CustomerProfile object.
Input was generated by ent.
"""
input CreateCustomerProfileInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  """
  1 待審核 2 已通過 3 已拒絕 4 已撤回
  """
  approvalStatus: Int
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  """
  審核日期
  """
  approvalDate: Time
  ownerType: Int
  industry: Int
  size: Int
  contactPerson: String
  contactPersonPosition: String
  contactPersonPhone: String
  contactPersonEmail: String
  customerID: ID!
  createdByID: ID
  approverID: ID
  salesID: ID
}
"""
CreateDistrictInput is used for create District object.
Input was generated by ent.
"""
input CreateDistrictInput {
  createdAt: Time
  updatedAt: Time
  adcode: Int!
  provCode: Int!
  cityCode: Int!
  name: String!
  provinceID: ID!
  cityID: ID
  tenderIDs: [ID!]
  plotIDs: [ID!]
}
"""
CreatePlotInput is used for create Plot object.
Input was generated by ent.
"""
input CreatePlotInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  colorHex: String!
  districtID: ID!
}
"""
CreateProvinceInput is used for create Province object.
Input was generated by ent.
"""
input CreateProvinceInput {
  createdAt: Time
  updatedAt: Time
  adcode: Int!
  name: String!
  districtIDs: [ID!]
  cityIDs: [ID!]
  countryID: ID!
  tenderIDs: [ID!]
  areaID: ID
}
"""
CreateTenderCompetitorInput is used for create TenderCompetitor object.
Input was generated by ent.
"""
input CreateTenderCompetitorInput {
  createdAt: Time
  updatedAt: Time
  amount: Float!
  """
  是否中标
  """
  result: Boolean
  tenderID: ID!
  competitorID: ID!
}
"""
CreateTenderInput is used for create Tender object.
Input was generated by ent.
"""
input CreateTenderInput {
  createdAt: Time
  updatedAt: Time
  code: String!
  status: Int
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  name: String!
  estimatedAmount: Float
  tenderDate: Time
  classify: Int
  discoveryDate: Time!
  address: String
  fullAddress: String
  contractor: String
  levelInvolved: Int
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  prepareToBid: Boolean
  projectCode: String
  projectType: String
  projectDefinition: String
  estimatedProjectStartDate: Time
  estimatedProjectEndDate: Time
  attachements: [String!]
  remark: String
  images: [String!]
  tenderSituations: String
  ownerSituations: String
  biddingInstructions: String
  competitorSituations: String
  costEngineer: String
  tenderForm: String
  contractForm: String
  managementCompany: String
  tenderingAgency: String
  biddingDate: Time
  facadeConsultant: String
  designUnit: String
  consultingFirm: String
  keyProject: Boolean
  currentProgress: String
  tenderWinCompany: String
  """
  投標編號，只限港澳
  """
  tenderCode: String
  """
  則師，只限港澳
  """
  architect: String
  """
  業主，只限港澳
  """
  developer: String
  """
  交標日期，只限港澳
  """
  tenderClosingDate: Time
  """
  施工面積，只限港澳
  """
  constructionArea: String
  """
  中標日期，只限港澳
  """
  tenderWinDate: Time
  """
  中標金額
  """
  tenderWinAmount: Float
  """
  最後一次投標金額，只限港澳
  """
  lastTenderAmount: Float
  areaID: ID!
  profileIDs: [ID!]
  competitorIDs: [ID!]
  customerID: ID
  finderID: ID
  createdByID: ID
  followingSaleIDs: [ID!]
  provinceID: ID
  cityID: ID
  districtID: ID
  visitRecordIDs: [ID!]
  approverID: ID
  activeProfileID: ID
  pendingProfileID: ID
}
"""
CreateTenderProfileInput is used for create TenderProfile object.
Input was generated by ent.
"""
input CreateTenderProfileInput {
  createdAt: Time
  updatedAt: Time
  status: Int
  """
  1 待審核 2 已通過 3 已拒絕 4 已撤回
  """
  approvalStatus: Int
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  """
  審核日期
  """
  approvalDate: Time
  name: String
  estimatedAmount: Float
  tenderDate: Time
  classify: Int
  discoveryDate: Time
  address: String
  fullAddress: String
  contractor: String
  levelInvolved: Int
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  prepareToBid: Boolean
  projectCode: String
  projectType: String
  projectDefinition: String
  estimatedProjectStartDate: Time
  estimatedProjectEndDate: Time
  attachments: [String!]
  geoCoordinate: [Float!]
  remark: String
  images: [String!]
  tenderSituations: String
  ownerSituations: String
  biddingInstructions: String
  competitorSituations: String
  costEngineer: String
  tenderForm: String
  contractForm: String
  managementCompany: String
  tenderingAgency: String
  biddingDate: Time
  facadeConsultant: String
  designUnit: String
  consultingFirm: String
  keyProject: Boolean
  currentProgress: String
  tenderWinCompany: String
  """
  投標編號，只限港澳
  """
  tenderCode: String
  """
  則師，只限港澳
  """
  architect: String
  """
  業主，只限港澳
  """
  developer: String
  """
  交標日期，只限港澳
  """
  tenderClosingDate: Time
  """
  施工面積，只限港澳
  """
  constructionArea: String
  """
  投標金額
  """
  tenderAmount: Float
  """
  得標日期，只限港澳
  """
  tenderWinDate: Time
  """
  得標金額
  """
  tenderWinAmount: Float
  """
  最後一次投標金額，只限港澳
  """
  lastTenderAmount: Float
  tenderID: ID!
  customerID: ID
  finderID: ID
  createdByID: ID
  provinceID: ID
  cityID: ID
  districtID: ID
  approverID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  createdAt: Time
  updatedAt: Time
  openID: String!
  name: String
  email: String
  username: String
  avatarURL: String
  disabled: Boolean
  isAdmin: Boolean
  isCeo: Boolean
  isSuperAdmin: Boolean
  hasMapAccess: Boolean
  hasEditAccess: Boolean
  areaIDs: [ID!]
  customerIDs: [ID!]
  leaderID: ID
  teamMemberIDs: [ID!]
  tenderIDs: [ID!]
  visitRecordIDs: [ID!]
  projectIDs: [ID!]
}
"""
CreateVisitRecordInput is used for create VisitRecord object.
Input was generated by ent.
"""
input CreateVisitRecordInput {
  createdAt: Time
  updatedAt: Time
  visitType: Int
  commPeople: String!
  commContent: String!
  nextStep: String
  date: Time!
  tenderID: ID
  customerID: ID!
  followupbyIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Customer implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int!
  ownerType: Int
  industry: Int
  size: Int
  contactPerson: String
  contactPersonPosition: String
  contactPersonPhone: String
  contactPersonEmail: String
  areaID: ID!
  salesID: ID
  createdByID: ID
  updatedByID: ID
  approverID: ID
  activeProfileID: ID
  pendingProfileID: ID
  area: Area!
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  sales: User
  createdBy: User
  updatedBy: User
  approver: User
  visitRecords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for VisitRecords returned from the connection.
    """
    orderBy: [VisitRecordOrder!]

    """
    Filtering options for VisitRecords returned from the connection.
    """
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
  profiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for CustomerProfiles returned from the connection.
    """
    orderBy: [CustomerProfileOrder!]

    """
    Filtering options for CustomerProfiles returned from the connection.
    """
    where: CustomerProfileWhereInput
  ): CustomerProfileConnection!
  activeProfile: CustomerProfile
  pendingProfile: CustomerProfile
}
"""
A connection to a list of items.
"""
type CustomerConnection {
  """
  A list of edges.
  """
  edges: [CustomerEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CustomerEdge {
  """
  The item at the end of the edge.
  """
  node: Customer
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Customer connections
"""
input CustomerOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Customers.
  """
  field: CustomerOrderField!
}
"""
Properties by which Customer connections can be ordered.
"""
enum CustomerOrderField {
  CREATED_AT
  NAME
  APPROVAL_STATUS
  OWNER_TYPE
}
type CustomerProfile implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  """
  1 待審核 2 已通過 3 已拒絕 4 已撤回
  """
  approvalStatus: Int!
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  """
  審核日期
  """
  approvalDate: Time
  ownerType: Int
  industry: Int
  size: Int
  contactPerson: String
  contactPersonPosition: String
  contactPersonPhone: String
  contactPersonEmail: String
  salesID: ID
  customerID: ID!
  createdByID: ID
  approverID: ID
  customer: Customer!
  createdBy: User
  approver: User
  sales: User
}
"""
A connection to a list of items.
"""
type CustomerProfileConnection {
  """
  A list of edges.
  """
  edges: [CustomerProfileEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CustomerProfileEdge {
  """
  The item at the end of the edge.
  """
  node: CustomerProfile
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for CustomerProfile connections
"""
input CustomerProfileOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order CustomerProfiles.
  """
  field: CustomerProfileOrderField!
}
"""
Properties by which CustomerProfile connections can be ordered.
"""
enum CustomerProfileOrderField {
  CREATED_AT
  NAME
  APPROVAL_STATUS
  OWNER_TYPE
}
"""
CustomerProfileWhereInput is used for filtering CustomerProfile objects.
Input was generated by ent.
"""
input CustomerProfileWhereInput {
  not: CustomerProfileWhereInput
  and: [CustomerProfileWhereInput!]
  or: [CustomerProfileWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  approval_status field predicates
  """
  approvalStatus: Int
  approvalStatusNEQ: Int
  approvalStatusIn: [Int!]
  approvalStatusNotIn: [Int!]
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusLT: Int
  approvalStatusLTE: Int
  """
  approval_msg_id field predicates
  """
  approvalMsgID: String
  approvalMsgIDNEQ: String
  approvalMsgIDIn: [String!]
  approvalMsgIDNotIn: [String!]
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDContains: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIsNil: Boolean
  approvalMsgIDNotNil: Boolean
  approvalMsgIDEqualFold: String
  approvalMsgIDContainsFold: String
  """
  approval_date field predicates
  """
  approvalDate: Time
  approvalDateNEQ: Time
  approvalDateIn: [Time!]
  approvalDateNotIn: [Time!]
  approvalDateGT: Time
  approvalDateGTE: Time
  approvalDateLT: Time
  approvalDateLTE: Time
  approvalDateIsNil: Boolean
  approvalDateNotNil: Boolean
  """
  owner_type field predicates
  """
  ownerType: Int
  ownerTypeNEQ: Int
  ownerTypeIn: [Int!]
  ownerTypeNotIn: [Int!]
  ownerTypeGT: Int
  ownerTypeGTE: Int
  ownerTypeLT: Int
  ownerTypeLTE: Int
  ownerTypeIsNil: Boolean
  ownerTypeNotNil: Boolean
  """
  industry field predicates
  """
  industry: Int
  industryNEQ: Int
  industryIn: [Int!]
  industryNotIn: [Int!]
  industryGT: Int
  industryGTE: Int
  industryLT: Int
  industryLTE: Int
  industryIsNil: Boolean
  industryNotNil: Boolean
  """
  size field predicates
  """
  size: Int
  sizeNEQ: Int
  sizeIn: [Int!]
  sizeNotIn: [Int!]
  sizeGT: Int
  sizeGTE: Int
  sizeLT: Int
  sizeLTE: Int
  sizeIsNil: Boolean
  sizeNotNil: Boolean
  """
  contact_person field predicates
  """
  contactPerson: String
  contactPersonNEQ: String
  contactPersonIn: [String!]
  contactPersonNotIn: [String!]
  contactPersonGT: String
  contactPersonGTE: String
  contactPersonLT: String
  contactPersonLTE: String
  contactPersonContains: String
  contactPersonHasPrefix: String
  contactPersonHasSuffix: String
  contactPersonIsNil: Boolean
  contactPersonNotNil: Boolean
  contactPersonEqualFold: String
  contactPersonContainsFold: String
  """
  contact_person_position field predicates
  """
  contactPersonPosition: String
  contactPersonPositionNEQ: String
  contactPersonPositionIn: [String!]
  contactPersonPositionNotIn: [String!]
  contactPersonPositionGT: String
  contactPersonPositionGTE: String
  contactPersonPositionLT: String
  contactPersonPositionLTE: String
  contactPersonPositionContains: String
  contactPersonPositionHasPrefix: String
  contactPersonPositionHasSuffix: String
  contactPersonPositionIsNil: Boolean
  contactPersonPositionNotNil: Boolean
  contactPersonPositionEqualFold: String
  contactPersonPositionContainsFold: String
  """
  contact_person_phone field predicates
  """
  contactPersonPhone: String
  contactPersonPhoneNEQ: String
  contactPersonPhoneIn: [String!]
  contactPersonPhoneNotIn: [String!]
  contactPersonPhoneGT: String
  contactPersonPhoneGTE: String
  contactPersonPhoneLT: String
  contactPersonPhoneLTE: String
  contactPersonPhoneContains: String
  contactPersonPhoneHasPrefix: String
  contactPersonPhoneHasSuffix: String
  contactPersonPhoneIsNil: Boolean
  contactPersonPhoneNotNil: Boolean
  contactPersonPhoneEqualFold: String
  contactPersonPhoneContainsFold: String
  """
  contact_person_email field predicates
  """
  contactPersonEmail: String
  contactPersonEmailNEQ: String
  contactPersonEmailIn: [String!]
  contactPersonEmailNotIn: [String!]
  contactPersonEmailGT: String
  contactPersonEmailGTE: String
  contactPersonEmailLT: String
  contactPersonEmailLTE: String
  contactPersonEmailContains: String
  contactPersonEmailHasPrefix: String
  contactPersonEmailHasSuffix: String
  contactPersonEmailIsNil: Boolean
  contactPersonEmailNotNil: Boolean
  contactPersonEmailEqualFold: String
  contactPersonEmailContainsFold: String
  """
  sales_id field predicates
  """
  salesID: ID
  salesIDNEQ: ID
  salesIDIn: [ID!]
  salesIDNotIn: [ID!]
  salesIDGT: ID
  salesIDGTE: ID
  salesIDLT: ID
  salesIDLTE: ID
  salesIDContains: ID
  salesIDHasPrefix: ID
  salesIDHasSuffix: ID
  salesIDIsNil: Boolean
  salesIDNotNil: Boolean
  salesIDEqualFold: ID
  salesIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: ID
  customerIDNEQ: ID
  customerIDIn: [ID!]
  customerIDNotIn: [ID!]
  customerIDGT: ID
  customerIDGTE: ID
  customerIDLT: ID
  customerIDLTE: ID
  customerIDContains: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDEqualFold: ID
  customerIDContainsFold: ID
  """
  created_by_id field predicates
  """
  createdByID: ID
  createdByIDNEQ: ID
  createdByIDIn: [ID!]
  createdByIDNotIn: [ID!]
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDContains: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIsNil: Boolean
  createdByIDNotNil: Boolean
  createdByIDEqualFold: ID
  createdByIDContainsFold: ID
  """
  approver_id field predicates
  """
  approverID: ID
  approverIDNEQ: ID
  approverIDIn: [ID!]
  approverIDNotIn: [ID!]
  approverIDGT: ID
  approverIDGTE: ID
  approverIDLT: ID
  approverIDLTE: ID
  approverIDContains: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIsNil: Boolean
  approverIDNotNil: Boolean
  approverIDEqualFold: ID
  approverIDContainsFold: ID
  """
  customer edge predicates
  """
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  approver edge predicates
  """
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """
  sales edge predicates
  """
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
}
"""
CustomerWhereInput is used for filtering Customer objects.
Input was generated by ent.
"""
input CustomerWhereInput {
  not: CustomerWhereInput
  and: [CustomerWhereInput!]
  or: [CustomerWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  approval_status field predicates
  """
  approvalStatus: Int
  approvalStatusNEQ: Int
  approvalStatusIn: [Int!]
  approvalStatusNotIn: [Int!]
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusLT: Int
  approvalStatusLTE: Int
  """
  owner_type field predicates
  """
  ownerType: Int
  ownerTypeNEQ: Int
  ownerTypeIn: [Int!]
  ownerTypeNotIn: [Int!]
  ownerTypeGT: Int
  ownerTypeGTE: Int
  ownerTypeLT: Int
  ownerTypeLTE: Int
  ownerTypeIsNil: Boolean
  ownerTypeNotNil: Boolean
  """
  industry field predicates
  """
  industry: Int
  industryNEQ: Int
  industryIn: [Int!]
  industryNotIn: [Int!]
  industryGT: Int
  industryGTE: Int
  industryLT: Int
  industryLTE: Int
  industryIsNil: Boolean
  industryNotNil: Boolean
  """
  size field predicates
  """
  size: Int
  sizeNEQ: Int
  sizeIn: [Int!]
  sizeNotIn: [Int!]
  sizeGT: Int
  sizeGTE: Int
  sizeLT: Int
  sizeLTE: Int
  sizeIsNil: Boolean
  sizeNotNil: Boolean
  """
  contact_person field predicates
  """
  contactPerson: String
  contactPersonNEQ: String
  contactPersonIn: [String!]
  contactPersonNotIn: [String!]
  contactPersonGT: String
  contactPersonGTE: String
  contactPersonLT: String
  contactPersonLTE: String
  contactPersonContains: String
  contactPersonHasPrefix: String
  contactPersonHasSuffix: String
  contactPersonIsNil: Boolean
  contactPersonNotNil: Boolean
  contactPersonEqualFold: String
  contactPersonContainsFold: String
  """
  contact_person_position field predicates
  """
  contactPersonPosition: String
  contactPersonPositionNEQ: String
  contactPersonPositionIn: [String!]
  contactPersonPositionNotIn: [String!]
  contactPersonPositionGT: String
  contactPersonPositionGTE: String
  contactPersonPositionLT: String
  contactPersonPositionLTE: String
  contactPersonPositionContains: String
  contactPersonPositionHasPrefix: String
  contactPersonPositionHasSuffix: String
  contactPersonPositionIsNil: Boolean
  contactPersonPositionNotNil: Boolean
  contactPersonPositionEqualFold: String
  contactPersonPositionContainsFold: String
  """
  contact_person_phone field predicates
  """
  contactPersonPhone: String
  contactPersonPhoneNEQ: String
  contactPersonPhoneIn: [String!]
  contactPersonPhoneNotIn: [String!]
  contactPersonPhoneGT: String
  contactPersonPhoneGTE: String
  contactPersonPhoneLT: String
  contactPersonPhoneLTE: String
  contactPersonPhoneContains: String
  contactPersonPhoneHasPrefix: String
  contactPersonPhoneHasSuffix: String
  contactPersonPhoneIsNil: Boolean
  contactPersonPhoneNotNil: Boolean
  contactPersonPhoneEqualFold: String
  contactPersonPhoneContainsFold: String
  """
  contact_person_email field predicates
  """
  contactPersonEmail: String
  contactPersonEmailNEQ: String
  contactPersonEmailIn: [String!]
  contactPersonEmailNotIn: [String!]
  contactPersonEmailGT: String
  contactPersonEmailGTE: String
  contactPersonEmailLT: String
  contactPersonEmailLTE: String
  contactPersonEmailContains: String
  contactPersonEmailHasPrefix: String
  contactPersonEmailHasSuffix: String
  contactPersonEmailIsNil: Boolean
  contactPersonEmailNotNil: Boolean
  contactPersonEmailEqualFold: String
  contactPersonEmailContainsFold: String
  """
  area_id field predicates
  """
  areaID: ID
  areaIDNEQ: ID
  areaIDIn: [ID!]
  areaIDNotIn: [ID!]
  areaIDGT: ID
  areaIDGTE: ID
  areaIDLT: ID
  areaIDLTE: ID
  areaIDContains: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDEqualFold: ID
  areaIDContainsFold: ID
  """
  sales_id field predicates
  """
  salesID: ID
  salesIDNEQ: ID
  salesIDIn: [ID!]
  salesIDNotIn: [ID!]
  salesIDGT: ID
  salesIDGTE: ID
  salesIDLT: ID
  salesIDLTE: ID
  salesIDContains: ID
  salesIDHasPrefix: ID
  salesIDHasSuffix: ID
  salesIDIsNil: Boolean
  salesIDNotNil: Boolean
  salesIDEqualFold: ID
  salesIDContainsFold: ID
  """
  created_by_id field predicates
  """
  createdByID: ID
  createdByIDNEQ: ID
  createdByIDIn: [ID!]
  createdByIDNotIn: [ID!]
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDContains: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIsNil: Boolean
  createdByIDNotNil: Boolean
  createdByIDEqualFold: ID
  createdByIDContainsFold: ID
  """
  updated_by_id field predicates
  """
  updatedByID: ID
  updatedByIDNEQ: ID
  updatedByIDIn: [ID!]
  updatedByIDNotIn: [ID!]
  updatedByIDGT: ID
  updatedByIDGTE: ID
  updatedByIDLT: ID
  updatedByIDLTE: ID
  updatedByIDContains: ID
  updatedByIDHasPrefix: ID
  updatedByIDHasSuffix: ID
  updatedByIDIsNil: Boolean
  updatedByIDNotNil: Boolean
  updatedByIDEqualFold: ID
  updatedByIDContainsFold: ID
  """
  approver_id field predicates
  """
  approverID: ID
  approverIDNEQ: ID
  approverIDIn: [ID!]
  approverIDNotIn: [ID!]
  approverIDGT: ID
  approverIDGTE: ID
  approverIDLT: ID
  approverIDLTE: ID
  approverIDContains: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIsNil: Boolean
  approverIDNotNil: Boolean
  approverIDEqualFold: ID
  approverIDContainsFold: ID
  """
  active_profile_id field predicates
  """
  activeProfileID: ID
  activeProfileIDNEQ: ID
  activeProfileIDIn: [ID!]
  activeProfileIDNotIn: [ID!]
  activeProfileIDGT: ID
  activeProfileIDGTE: ID
  activeProfileIDLT: ID
  activeProfileIDLTE: ID
  activeProfileIDContains: ID
  activeProfileIDHasPrefix: ID
  activeProfileIDHasSuffix: ID
  activeProfileIDIsNil: Boolean
  activeProfileIDNotNil: Boolean
  activeProfileIDEqualFold: ID
  activeProfileIDContainsFold: ID
  """
  pending_profile_id field predicates
  """
  pendingProfileID: ID
  pendingProfileIDNEQ: ID
  pendingProfileIDIn: [ID!]
  pendingProfileIDNotIn: [ID!]
  pendingProfileIDGT: ID
  pendingProfileIDGTE: ID
  pendingProfileIDLT: ID
  pendingProfileIDLTE: ID
  pendingProfileIDContains: ID
  pendingProfileIDHasPrefix: ID
  pendingProfileIDHasSuffix: ID
  pendingProfileIDIsNil: Boolean
  pendingProfileIDNotNil: Boolean
  pendingProfileIDEqualFold: ID
  pendingProfileIDContainsFold: ID
  """
  area edge predicates
  """
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """
  sales edge predicates
  """
  hasSales: Boolean
  hasSalesWith: [UserWhereInput!]
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  updated_by edge predicates
  """
  hasUpdatedBy: Boolean
  hasUpdatedByWith: [UserWhereInput!]
  """
  approver edge predicates
  """
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """
  visit_records edge predicates
  """
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """
  profiles edge predicates
  """
  hasProfiles: Boolean
  hasProfilesWith: [CustomerProfileWhereInput!]
  """
  active_profile edge predicates
  """
  hasActiveProfile: Boolean
  hasActiveProfileWith: [CustomerProfileWhereInput!]
  """
  pending_profile edge predicates
  """
  hasPendingProfile: Boolean
  hasPendingProfileWith: [CustomerProfileWhereInput!]
}
type District implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  adcode: Int!
  provCode: Int!
  cityCode: Int!
  name: String!
  provinceID: ID!
  cityID: ID
  province: Province!
  city: City
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  plots(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Plots returned from the connection.
    """
    orderBy: PlotOrder

    """
    Filtering options for Plots returned from the connection.
    """
    where: PlotWhereInput
  ): PlotConnection!
}
"""
A connection to a list of items.
"""
type DistrictConnection {
  """
  A list of edges.
  """
  edges: [DistrictEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DistrictEdge {
  """
  The item at the end of the edge.
  """
  node: District
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for District connections
"""
input DistrictOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Districts.
  """
  field: DistrictOrderField!
}
"""
Properties by which District connections can be ordered.
"""
enum DistrictOrderField {
  CREATED_AT
}
"""
DistrictWhereInput is used for filtering District objects.
Input was generated by ent.
"""
input DistrictWhereInput {
  not: DistrictWhereInput
  and: [DistrictWhereInput!]
  or: [DistrictWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  adcode field predicates
  """
  adcode: Int
  adcodeNEQ: Int
  adcodeIn: [Int!]
  adcodeNotIn: [Int!]
  adcodeGT: Int
  adcodeGTE: Int
  adcodeLT: Int
  adcodeLTE: Int
  """
  prov_code field predicates
  """
  provCode: Int
  provCodeNEQ: Int
  provCodeIn: [Int!]
  provCodeNotIn: [Int!]
  provCodeGT: Int
  provCodeGTE: Int
  provCodeLT: Int
  provCodeLTE: Int
  """
  city_code field predicates
  """
  cityCode: Int
  cityCodeNEQ: Int
  cityCodeIn: [Int!]
  cityCodeNotIn: [Int!]
  cityCodeGT: Int
  cityCodeGTE: Int
  cityCodeLT: Int
  cityCodeLTE: Int
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  province_id field predicates
  """
  provinceID: ID
  provinceIDNEQ: ID
  provinceIDIn: [ID!]
  provinceIDNotIn: [ID!]
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDContains: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDEqualFold: ID
  provinceIDContainsFold: ID
  """
  city_id field predicates
  """
  cityID: ID
  cityIDNEQ: ID
  cityIDIn: [ID!]
  cityIDNotIn: [ID!]
  cityIDGT: ID
  cityIDGTE: ID
  cityIDLT: ID
  cityIDLTE: ID
  cityIDContains: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIsNil: Boolean
  cityIDNotNil: Boolean
  cityIDEqualFold: ID
  cityIDContainsFold: ID
  """
  province edge predicates
  """
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """
  city edge predicates
  """
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """
  plots edge predicates
  """
  hasPlots: Boolean
  hasPlotsWith: [PlotWhereInput!]
}
type Land implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
}
"""
Ordering options for Land connections
"""
input LandOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Lands.
  """
  field: LandOrderField!
}
"""
Properties by which Land connections can be ordered.
"""
enum LandOrderField {
  CREATED_AT
}
"""
LandWhereInput is used for filtering Land objects.
Input was generated by ent.
"""
input LandWhereInput {
  not: LandWhereInput
  and: [LandWhereInput!]
  or: [LandWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "cscd-bds/store/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type Operation implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  """
  成交额预算
  """
  cjeYs: Float
  """
  成交额累计
  """
  cjeLj: Float
  """
  营业额预算
  """
  yyeYs: Float
  """
  营业额累计
  """
  yyeLj: Float
  """
  现金流预算
  """
  xjlYs: Float
  """
  现金流累计
  """
  xjlLj: Float
  """
  项目管理费
  """
  xmglf: Float
  """
  项目设计费
  """
  xmsjf: Float
}
"""
A connection to a list of items.
"""
type OperationConnection {
  """
  A list of edges.
  """
  edges: [OperationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OperationEdge {
  """
  The item at the end of the edge.
  """
  node: Operation
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Operation connections
"""
input OperationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Operations.
  """
  field: OperationOrderField!
}
"""
Properties by which Operation connections can be ordered.
"""
enum OperationOrderField {
  CREATED_AT
}
"""
OperationWhereInput is used for filtering Operation objects.
Input was generated by ent.
"""
input OperationWhereInput {
  not: OperationWhereInput
  and: [OperationWhereInput!]
  or: [OperationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  cje_ys field predicates
  """
  cjeYs: Float
  cjeYsNEQ: Float
  cjeYsIn: [Float!]
  cjeYsNotIn: [Float!]
  cjeYsGT: Float
  cjeYsGTE: Float
  cjeYsLT: Float
  cjeYsLTE: Float
  cjeYsIsNil: Boolean
  cjeYsNotNil: Boolean
  """
  cje_lj field predicates
  """
  cjeLj: Float
  cjeLjNEQ: Float
  cjeLjIn: [Float!]
  cjeLjNotIn: [Float!]
  cjeLjGT: Float
  cjeLjGTE: Float
  cjeLjLT: Float
  cjeLjLTE: Float
  cjeLjIsNil: Boolean
  cjeLjNotNil: Boolean
  """
  yye_ys field predicates
  """
  yyeYs: Float
  yyeYsNEQ: Float
  yyeYsIn: [Float!]
  yyeYsNotIn: [Float!]
  yyeYsGT: Float
  yyeYsGTE: Float
  yyeYsLT: Float
  yyeYsLTE: Float
  yyeYsIsNil: Boolean
  yyeYsNotNil: Boolean
  """
  yye_lj field predicates
  """
  yyeLj: Float
  yyeLjNEQ: Float
  yyeLjIn: [Float!]
  yyeLjNotIn: [Float!]
  yyeLjGT: Float
  yyeLjGTE: Float
  yyeLjLT: Float
  yyeLjLTE: Float
  yyeLjIsNil: Boolean
  yyeLjNotNil: Boolean
  """
  xjl_ys field predicates
  """
  xjlYs: Float
  xjlYsNEQ: Float
  xjlYsIn: [Float!]
  xjlYsNotIn: [Float!]
  xjlYsGT: Float
  xjlYsGTE: Float
  xjlYsLT: Float
  xjlYsLTE: Float
  xjlYsIsNil: Boolean
  xjlYsNotNil: Boolean
  """
  xjl_lj field predicates
  """
  xjlLj: Float
  xjlLjNEQ: Float
  xjlLjIn: [Float!]
  xjlLjNotIn: [Float!]
  xjlLjGT: Float
  xjlLjGTE: Float
  xjlLjLT: Float
  xjlLjLTE: Float
  xjlLjIsNil: Boolean
  xjlLjNotNil: Boolean
  """
  xmglf field predicates
  """
  xmglf: Float
  xmglfNEQ: Float
  xmglfIn: [Float!]
  xmglfNotIn: [Float!]
  xmglfGT: Float
  xmglfGTE: Float
  xmglfLT: Float
  xmglfLTE: Float
  xmglfIsNil: Boolean
  xmglfNotNil: Boolean
  """
  xmsjf field predicates
  """
  xmsjf: Float
  xmsjfNEQ: Float
  xmsjfIn: [Float!]
  xmsjfNotIn: [Float!]
  xmsjfGT: Float
  xmsjfGTE: Float
  xmsjfLT: Float
  xmsjfLTE: Float
  xmsjfIsNil: Boolean
  xmsjfNotNil: Boolean
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Plot implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  colorHex: String!
  districtID: ID!
  district: District!
}
"""
A connection to a list of items.
"""
type PlotConnection {
  """
  A list of edges.
  """
  edges: [PlotEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PlotEdge {
  """
  The item at the end of the edge.
  """
  node: Plot
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Plot connections
"""
input PlotOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Plots.
  """
  field: PlotOrderField!
}
"""
Properties by which Plot connections can be ordered.
"""
enum PlotOrderField {
  CREATED_AT
}
"""
PlotWhereInput is used for filtering Plot objects.
Input was generated by ent.
"""
input PlotWhereInput {
  not: PlotWhereInput
  and: [PlotWhereInput!]
  or: [PlotWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  color_hex field predicates
  """
  colorHex: String
  colorHexNEQ: String
  colorHexIn: [String!]
  colorHexNotIn: [String!]
  colorHexGT: String
  colorHexGTE: String
  colorHexLT: String
  colorHexLTE: String
  colorHexContains: String
  colorHexHasPrefix: String
  colorHexHasSuffix: String
  colorHexEqualFold: String
  colorHexContainsFold: String
  """
  district_id field predicates
  """
  districtID: ID
  districtIDNEQ: ID
  districtIDIn: [ID!]
  districtIDNotIn: [ID!]
  districtIDGT: ID
  districtIDGTE: ID
  districtIDLT: ID
  districtIDLTE: ID
  districtIDContains: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDEqualFold: ID
  districtIDContainsFold: ID
  """
  district edge predicates
  """
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
}
type PotentialTender implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  refURL: String!
  title: String!
  description: String
  requirement: String
  address: String
  date: String
  type: String
  status: String
  amount: String
  size: String
  location: String
  contact: String
  contactPhone: String
  contactEmail: String
  contactAddress: String
}
"""
A connection to a list of items.
"""
type PotentialTenderConnection {
  """
  A list of edges.
  """
  edges: [PotentialTenderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PotentialTenderEdge {
  """
  The item at the end of the edge.
  """
  node: PotentialTender
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for PotentialTender connections
"""
input PotentialTenderOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order PotentialTenders.
  """
  field: PotentialTenderOrderField!
}
"""
Properties by which PotentialTender connections can be ordered.
"""
enum PotentialTenderOrderField {
  CREATED_AT
}
"""
PotentialTenderWhereInput is used for filtering PotentialTender objects.
Input was generated by ent.
"""
input PotentialTenderWhereInput {
  not: PotentialTenderWhereInput
  and: [PotentialTenderWhereInput!]
  or: [PotentialTenderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  ref_url field predicates
  """
  refURL: String
  refURLNEQ: String
  refURLIn: [String!]
  refURLNotIn: [String!]
  refURLGT: String
  refURLGTE: String
  refURLLT: String
  refURLLTE: String
  refURLContains: String
  refURLHasPrefix: String
  refURLHasSuffix: String
  refURLEqualFold: String
  refURLContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  requirement field predicates
  """
  requirement: String
  requirementNEQ: String
  requirementIn: [String!]
  requirementNotIn: [String!]
  requirementGT: String
  requirementGTE: String
  requirementLT: String
  requirementLTE: String
  requirementContains: String
  requirementHasPrefix: String
  requirementHasSuffix: String
  requirementIsNil: Boolean
  requirementNotNil: Boolean
  requirementEqualFold: String
  requirementContainsFold: String
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  date field predicates
  """
  date: String
  dateNEQ: String
  dateIn: [String!]
  dateNotIn: [String!]
  dateGT: String
  dateGTE: String
  dateLT: String
  dateLTE: String
  dateContains: String
  dateHasPrefix: String
  dateHasSuffix: String
  dateIsNil: Boolean
  dateNotNil: Boolean
  dateEqualFold: String
  dateContainsFold: String
  """
  type field predicates
  """
  type: String
  typeNEQ: String
  typeIn: [String!]
  typeNotIn: [String!]
  typeGT: String
  typeGTE: String
  typeLT: String
  typeLTE: String
  typeContains: String
  typeHasPrefix: String
  typeHasSuffix: String
  typeIsNil: Boolean
  typeNotNil: Boolean
  typeEqualFold: String
  typeContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  amount field predicates
  """
  amount: String
  amountNEQ: String
  amountIn: [String!]
  amountNotIn: [String!]
  amountGT: String
  amountGTE: String
  amountLT: String
  amountLTE: String
  amountContains: String
  amountHasPrefix: String
  amountHasSuffix: String
  amountIsNil: Boolean
  amountNotNil: Boolean
  amountEqualFold: String
  amountContainsFold: String
  """
  size field predicates
  """
  size: String
  sizeNEQ: String
  sizeIn: [String!]
  sizeNotIn: [String!]
  sizeGT: String
  sizeGTE: String
  sizeLT: String
  sizeLTE: String
  sizeContains: String
  sizeHasPrefix: String
  sizeHasSuffix: String
  sizeIsNil: Boolean
  sizeNotNil: Boolean
  sizeEqualFold: String
  sizeContainsFold: String
  """
  location field predicates
  """
  location: String
  locationNEQ: String
  locationIn: [String!]
  locationNotIn: [String!]
  locationGT: String
  locationGTE: String
  locationLT: String
  locationLTE: String
  locationContains: String
  locationHasPrefix: String
  locationHasSuffix: String
  locationIsNil: Boolean
  locationNotNil: Boolean
  locationEqualFold: String
  locationContainsFold: String
  """
  contact field predicates
  """
  contact: String
  contactNEQ: String
  contactIn: [String!]
  contactNotIn: [String!]
  contactGT: String
  contactGTE: String
  contactLT: String
  contactLTE: String
  contactContains: String
  contactHasPrefix: String
  contactHasSuffix: String
  contactIsNil: Boolean
  contactNotNil: Boolean
  contactEqualFold: String
  contactContainsFold: String
  """
  contact_phone field predicates
  """
  contactPhone: String
  contactPhoneNEQ: String
  contactPhoneIn: [String!]
  contactPhoneNotIn: [String!]
  contactPhoneGT: String
  contactPhoneGTE: String
  contactPhoneLT: String
  contactPhoneLTE: String
  contactPhoneContains: String
  contactPhoneHasPrefix: String
  contactPhoneHasSuffix: String
  contactPhoneIsNil: Boolean
  contactPhoneNotNil: Boolean
  contactPhoneEqualFold: String
  contactPhoneContainsFold: String
  """
  contact_email field predicates
  """
  contactEmail: String
  contactEmailNEQ: String
  contactEmailIn: [String!]
  contactEmailNotIn: [String!]
  contactEmailGT: String
  contactEmailGTE: String
  contactEmailLT: String
  contactEmailLTE: String
  contactEmailContains: String
  contactEmailHasPrefix: String
  contactEmailHasSuffix: String
  contactEmailIsNil: Boolean
  contactEmailNotNil: Boolean
  contactEmailEqualFold: String
  contactEmailContainsFold: String
  """
  contact_address field predicates
  """
  contactAddress: String
  contactAddressNEQ: String
  contactAddressIn: [String!]
  contactAddressNotIn: [String!]
  contactAddressGT: String
  contactAddressGTE: String
  contactAddressLT: String
  contactAddressLTE: String
  contactAddressContains: String
  contactAddressHasPrefix: String
  contactAddressHasSuffix: String
  contactAddressIsNil: Boolean
  contactAddressNotNil: Boolean
  contactAddressEqualFold: String
  contactAddressContainsFold: String
}
type Project implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  code: String!
  """
  是否完成
  """
  isFinished: Boolean!
  """
  營業額KPI
  """
  revenueKpi: Float
  """
  營業額當年完成
  """
  revenueCurrentYearCompleted: Float
  """
  營業額累計完成
  """
  revenueAccumulatedCompleted: Float
  """
  糧期
  """
  payDate: Time
  """
  業主VO數量
  """
  ownerVoCount: Int
  """
  总包VO數量
  """
  contractorVoCount: Int
  """
  累計扣款
  """
  accumulateDeduction: Float
  """
  分判VA數量
  """
  subcontractorVaCount: Int
  """
  合約补料數量
  """
  contractSupplementaryCount: Int
  """
  执修费
  """
  repairFee: Float
  """
  單元件庫存累計
  """
  unitInventoryTotal: Float
  """
  單元件總數
  """
  unitComponentTotal: Float
  """
  單元件生產數量
  """
  unitComponentProduction: Float
  """
  單元件安裝數量
  """
  unitComponentInstallation: Float
  """
  散件總訂貨數量
  """
  bulkMaterialsTotalOrderQuantity: Float
  """
  散件已完成數量
  """
  bulkMaterialsCompletedQuantity: Float
  """
  散件未完成數量
  """
  bulkMaterialsUncompletedQuantity: Float
  """
  BD圖紙完成數量
  """
  diagramBdFinishCount: Int
  """
  BD圖紙總數
  """
  diagramBdTotalCount: Int
  """
  施工圖紙完成數量
  """
  diagramConstructionFinishCount: Int
  """
  施工圖紙總數
  """
  diagramConstructionTotalCount: Int
  """
  加工圖完成數量
  """
  diagramProcessingFinishCount: Int
  """
  加工圖總數
  """
  diagramProcessingTotalCount: Int
  """
  C版批圖率分子
  """
  diagramCApprovalRatioNumerator: Int
  """
  C版批圖率分母
  """
  diagramCApprovalRatioDenominator: Int
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
}
"""
A connection to a list of items.
"""
type ProjectConnection {
  """
  A list of edges.
  """
  edges: [ProjectEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProjectEdge {
  """
  The item at the end of the edge.
  """
  node: Project
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Project connections
"""
input ProjectOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Projects.
  """
  field: ProjectOrderField!
}
"""
Properties by which Project connections can be ordered.
"""
enum ProjectOrderField {
  CREATED_AT
  CODE
}
"""
ProjectWhereInput is used for filtering Project objects.
Input was generated by ent.
"""
input ProjectWhereInput {
  not: ProjectWhereInput
  and: [ProjectWhereInput!]
  or: [ProjectWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  is_finished field predicates
  """
  isFinished: Boolean
  isFinishedNEQ: Boolean
  """
  revenue_kpi field predicates
  """
  revenueKpi: Float
  revenueKpiNEQ: Float
  revenueKpiIn: [Float!]
  revenueKpiNotIn: [Float!]
  revenueKpiGT: Float
  revenueKpiGTE: Float
  revenueKpiLT: Float
  revenueKpiLTE: Float
  revenueKpiIsNil: Boolean
  revenueKpiNotNil: Boolean
  """
  revenue_current_year_completed field predicates
  """
  revenueCurrentYearCompleted: Float
  revenueCurrentYearCompletedNEQ: Float
  revenueCurrentYearCompletedIn: [Float!]
  revenueCurrentYearCompletedNotIn: [Float!]
  revenueCurrentYearCompletedGT: Float
  revenueCurrentYearCompletedGTE: Float
  revenueCurrentYearCompletedLT: Float
  revenueCurrentYearCompletedLTE: Float
  revenueCurrentYearCompletedIsNil: Boolean
  revenueCurrentYearCompletedNotNil: Boolean
  """
  revenue_accumulated_completed field predicates
  """
  revenueAccumulatedCompleted: Float
  revenueAccumulatedCompletedNEQ: Float
  revenueAccumulatedCompletedIn: [Float!]
  revenueAccumulatedCompletedNotIn: [Float!]
  revenueAccumulatedCompletedGT: Float
  revenueAccumulatedCompletedGTE: Float
  revenueAccumulatedCompletedLT: Float
  revenueAccumulatedCompletedLTE: Float
  revenueAccumulatedCompletedIsNil: Boolean
  revenueAccumulatedCompletedNotNil: Boolean
  """
  pay_date field predicates
  """
  payDate: Time
  payDateNEQ: Time
  payDateIn: [Time!]
  payDateNotIn: [Time!]
  payDateGT: Time
  payDateGTE: Time
  payDateLT: Time
  payDateLTE: Time
  payDateIsNil: Boolean
  payDateNotNil: Boolean
  """
  owner_vo_count field predicates
  """
  ownerVoCount: Int
  ownerVoCountNEQ: Int
  ownerVoCountIn: [Int!]
  ownerVoCountNotIn: [Int!]
  ownerVoCountGT: Int
  ownerVoCountGTE: Int
  ownerVoCountLT: Int
  ownerVoCountLTE: Int
  ownerVoCountIsNil: Boolean
  ownerVoCountNotNil: Boolean
  """
  contractor_vo_count field predicates
  """
  contractorVoCount: Int
  contractorVoCountNEQ: Int
  contractorVoCountIn: [Int!]
  contractorVoCountNotIn: [Int!]
  contractorVoCountGT: Int
  contractorVoCountGTE: Int
  contractorVoCountLT: Int
  contractorVoCountLTE: Int
  contractorVoCountIsNil: Boolean
  contractorVoCountNotNil: Boolean
  """
  accumulate_deduction field predicates
  """
  accumulateDeduction: Float
  accumulateDeductionNEQ: Float
  accumulateDeductionIn: [Float!]
  accumulateDeductionNotIn: [Float!]
  accumulateDeductionGT: Float
  accumulateDeductionGTE: Float
  accumulateDeductionLT: Float
  accumulateDeductionLTE: Float
  accumulateDeductionIsNil: Boolean
  accumulateDeductionNotNil: Boolean
  """
  subcontractor_va_count field predicates
  """
  subcontractorVaCount: Int
  subcontractorVaCountNEQ: Int
  subcontractorVaCountIn: [Int!]
  subcontractorVaCountNotIn: [Int!]
  subcontractorVaCountGT: Int
  subcontractorVaCountGTE: Int
  subcontractorVaCountLT: Int
  subcontractorVaCountLTE: Int
  subcontractorVaCountIsNil: Boolean
  subcontractorVaCountNotNil: Boolean
  """
  contract_supplementary_count field predicates
  """
  contractSupplementaryCount: Int
  contractSupplementaryCountNEQ: Int
  contractSupplementaryCountIn: [Int!]
  contractSupplementaryCountNotIn: [Int!]
  contractSupplementaryCountGT: Int
  contractSupplementaryCountGTE: Int
  contractSupplementaryCountLT: Int
  contractSupplementaryCountLTE: Int
  contractSupplementaryCountIsNil: Boolean
  contractSupplementaryCountNotNil: Boolean
  """
  repair_fee field predicates
  """
  repairFee: Float
  repairFeeNEQ: Float
  repairFeeIn: [Float!]
  repairFeeNotIn: [Float!]
  repairFeeGT: Float
  repairFeeGTE: Float
  repairFeeLT: Float
  repairFeeLTE: Float
  repairFeeIsNil: Boolean
  repairFeeNotNil: Boolean
  """
  unit_inventory_total field predicates
  """
  unitInventoryTotal: Float
  unitInventoryTotalNEQ: Float
  unitInventoryTotalIn: [Float!]
  unitInventoryTotalNotIn: [Float!]
  unitInventoryTotalGT: Float
  unitInventoryTotalGTE: Float
  unitInventoryTotalLT: Float
  unitInventoryTotalLTE: Float
  unitInventoryTotalIsNil: Boolean
  unitInventoryTotalNotNil: Boolean
  """
  unit_component_total field predicates
  """
  unitComponentTotal: Float
  unitComponentTotalNEQ: Float
  unitComponentTotalIn: [Float!]
  unitComponentTotalNotIn: [Float!]
  unitComponentTotalGT: Float
  unitComponentTotalGTE: Float
  unitComponentTotalLT: Float
  unitComponentTotalLTE: Float
  unitComponentTotalIsNil: Boolean
  unitComponentTotalNotNil: Boolean
  """
  unit_component_production field predicates
  """
  unitComponentProduction: Float
  unitComponentProductionNEQ: Float
  unitComponentProductionIn: [Float!]
  unitComponentProductionNotIn: [Float!]
  unitComponentProductionGT: Float
  unitComponentProductionGTE: Float
  unitComponentProductionLT: Float
  unitComponentProductionLTE: Float
  unitComponentProductionIsNil: Boolean
  unitComponentProductionNotNil: Boolean
  """
  unit_component_installation field predicates
  """
  unitComponentInstallation: Float
  unitComponentInstallationNEQ: Float
  unitComponentInstallationIn: [Float!]
  unitComponentInstallationNotIn: [Float!]
  unitComponentInstallationGT: Float
  unitComponentInstallationGTE: Float
  unitComponentInstallationLT: Float
  unitComponentInstallationLTE: Float
  unitComponentInstallationIsNil: Boolean
  unitComponentInstallationNotNil: Boolean
  """
  bulk_materials_total_order_quantity field predicates
  """
  bulkMaterialsTotalOrderQuantity: Float
  bulkMaterialsTotalOrderQuantityNEQ: Float
  bulkMaterialsTotalOrderQuantityIn: [Float!]
  bulkMaterialsTotalOrderQuantityNotIn: [Float!]
  bulkMaterialsTotalOrderQuantityGT: Float
  bulkMaterialsTotalOrderQuantityGTE: Float
  bulkMaterialsTotalOrderQuantityLT: Float
  bulkMaterialsTotalOrderQuantityLTE: Float
  bulkMaterialsTotalOrderQuantityIsNil: Boolean
  bulkMaterialsTotalOrderQuantityNotNil: Boolean
  """
  bulk_materials_completed_quantity field predicates
  """
  bulkMaterialsCompletedQuantity: Float
  bulkMaterialsCompletedQuantityNEQ: Float
  bulkMaterialsCompletedQuantityIn: [Float!]
  bulkMaterialsCompletedQuantityNotIn: [Float!]
  bulkMaterialsCompletedQuantityGT: Float
  bulkMaterialsCompletedQuantityGTE: Float
  bulkMaterialsCompletedQuantityLT: Float
  bulkMaterialsCompletedQuantityLTE: Float
  bulkMaterialsCompletedQuantityIsNil: Boolean
  bulkMaterialsCompletedQuantityNotNil: Boolean
  """
  bulk_materials_uncompleted_quantity field predicates
  """
  bulkMaterialsUncompletedQuantity: Float
  bulkMaterialsUncompletedQuantityNEQ: Float
  bulkMaterialsUncompletedQuantityIn: [Float!]
  bulkMaterialsUncompletedQuantityNotIn: [Float!]
  bulkMaterialsUncompletedQuantityGT: Float
  bulkMaterialsUncompletedQuantityGTE: Float
  bulkMaterialsUncompletedQuantityLT: Float
  bulkMaterialsUncompletedQuantityLTE: Float
  bulkMaterialsUncompletedQuantityIsNil: Boolean
  bulkMaterialsUncompletedQuantityNotNil: Boolean
  """
  diagram_bd_finish_count field predicates
  """
  diagramBdFinishCount: Int
  diagramBdFinishCountNEQ: Int
  diagramBdFinishCountIn: [Int!]
  diagramBdFinishCountNotIn: [Int!]
  diagramBdFinishCountGT: Int
  diagramBdFinishCountGTE: Int
  diagramBdFinishCountLT: Int
  diagramBdFinishCountLTE: Int
  diagramBdFinishCountIsNil: Boolean
  diagramBdFinishCountNotNil: Boolean
  """
  diagram_bd_total_count field predicates
  """
  diagramBdTotalCount: Int
  diagramBdTotalCountNEQ: Int
  diagramBdTotalCountIn: [Int!]
  diagramBdTotalCountNotIn: [Int!]
  diagramBdTotalCountGT: Int
  diagramBdTotalCountGTE: Int
  diagramBdTotalCountLT: Int
  diagramBdTotalCountLTE: Int
  diagramBdTotalCountIsNil: Boolean
  diagramBdTotalCountNotNil: Boolean
  """
  diagram_construction_finish_count field predicates
  """
  diagramConstructionFinishCount: Int
  diagramConstructionFinishCountNEQ: Int
  diagramConstructionFinishCountIn: [Int!]
  diagramConstructionFinishCountNotIn: [Int!]
  diagramConstructionFinishCountGT: Int
  diagramConstructionFinishCountGTE: Int
  diagramConstructionFinishCountLT: Int
  diagramConstructionFinishCountLTE: Int
  diagramConstructionFinishCountIsNil: Boolean
  diagramConstructionFinishCountNotNil: Boolean
  """
  diagram_construction_total_count field predicates
  """
  diagramConstructionTotalCount: Int
  diagramConstructionTotalCountNEQ: Int
  diagramConstructionTotalCountIn: [Int!]
  diagramConstructionTotalCountNotIn: [Int!]
  diagramConstructionTotalCountGT: Int
  diagramConstructionTotalCountGTE: Int
  diagramConstructionTotalCountLT: Int
  diagramConstructionTotalCountLTE: Int
  diagramConstructionTotalCountIsNil: Boolean
  diagramConstructionTotalCountNotNil: Boolean
  """
  diagram_processing_finish_count field predicates
  """
  diagramProcessingFinishCount: Int
  diagramProcessingFinishCountNEQ: Int
  diagramProcessingFinishCountIn: [Int!]
  diagramProcessingFinishCountNotIn: [Int!]
  diagramProcessingFinishCountGT: Int
  diagramProcessingFinishCountGTE: Int
  diagramProcessingFinishCountLT: Int
  diagramProcessingFinishCountLTE: Int
  diagramProcessingFinishCountIsNil: Boolean
  diagramProcessingFinishCountNotNil: Boolean
  """
  diagram_processing_total_count field predicates
  """
  diagramProcessingTotalCount: Int
  diagramProcessingTotalCountNEQ: Int
  diagramProcessingTotalCountIn: [Int!]
  diagramProcessingTotalCountNotIn: [Int!]
  diagramProcessingTotalCountGT: Int
  diagramProcessingTotalCountGTE: Int
  diagramProcessingTotalCountLT: Int
  diagramProcessingTotalCountLTE: Int
  diagramProcessingTotalCountIsNil: Boolean
  diagramProcessingTotalCountNotNil: Boolean
  """
  diagram_c_approval_ratio_numerator field predicates
  """
  diagramCApprovalRatioNumerator: Int
  diagramCApprovalRatioNumeratorNEQ: Int
  diagramCApprovalRatioNumeratorIn: [Int!]
  diagramCApprovalRatioNumeratorNotIn: [Int!]
  diagramCApprovalRatioNumeratorGT: Int
  diagramCApprovalRatioNumeratorGTE: Int
  diagramCApprovalRatioNumeratorLT: Int
  diagramCApprovalRatioNumeratorLTE: Int
  diagramCApprovalRatioNumeratorIsNil: Boolean
  diagramCApprovalRatioNumeratorNotNil: Boolean
  """
  diagram_c_approval_ratio_denominator field predicates
  """
  diagramCApprovalRatioDenominator: Int
  diagramCApprovalRatioDenominatorNEQ: Int
  diagramCApprovalRatioDenominatorIn: [Int!]
  diagramCApprovalRatioDenominatorNotIn: [Int!]
  diagramCApprovalRatioDenominatorGT: Int
  diagramCApprovalRatioDenominatorGTE: Int
  diagramCApprovalRatioDenominatorLT: Int
  diagramCApprovalRatioDenominatorLTE: Int
  diagramCApprovalRatioDenominatorIsNil: Boolean
  diagramCApprovalRatioDenominatorNotNil: Boolean
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
}
type Province implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  adcode: Int!
  name: String!
  countryID: ID!
  areaID: ID
  districts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Districts returned from the connection.
    """
    orderBy: DistrictOrder

    """
    Filtering options for Districts returned from the connection.
    """
    where: DistrictWhereInput
  ): DistrictConnection!
  cities(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Cities returned from the connection.
    """
    orderBy: CityOrder

    """
    Filtering options for Cities returned from the connection.
    """
    where: CityWhereInput
  ): CityConnection!
  country: Country!
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  area: Area
}
"""
A connection to a list of items.
"""
type ProvinceConnection {
  """
  A list of edges.
  """
  edges: [ProvinceEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProvinceEdge {
  """
  The item at the end of the edge.
  """
  node: Province
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Province connections
"""
input ProvinceOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Provinces.
  """
  field: ProvinceOrderField!
}
"""
Properties by which Province connections can be ordered.
"""
enum ProvinceOrderField {
  CREATED_AT
}
"""
ProvinceWhereInput is used for filtering Province objects.
Input was generated by ent.
"""
input ProvinceWhereInput {
  not: ProvinceWhereInput
  and: [ProvinceWhereInput!]
  or: [ProvinceWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  adcode field predicates
  """
  adcode: Int
  adcodeNEQ: Int
  adcodeIn: [Int!]
  adcodeNotIn: [Int!]
  adcodeGT: Int
  adcodeGTE: Int
  adcodeLT: Int
  adcodeLTE: Int
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  country_id field predicates
  """
  countryID: ID
  countryIDNEQ: ID
  countryIDIn: [ID!]
  countryIDNotIn: [ID!]
  countryIDGT: ID
  countryIDGTE: ID
  countryIDLT: ID
  countryIDLTE: ID
  countryIDContains: ID
  countryIDHasPrefix: ID
  countryIDHasSuffix: ID
  countryIDEqualFold: ID
  countryIDContainsFold: ID
  """
  area_id field predicates
  """
  areaID: ID
  areaIDNEQ: ID
  areaIDIn: [ID!]
  areaIDNotIn: [ID!]
  areaIDGT: ID
  areaIDGTE: ID
  areaIDLT: ID
  areaIDLTE: ID
  areaIDContains: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDIsNil: Boolean
  areaIDNotNil: Boolean
  areaIDEqualFold: ID
  areaIDContainsFold: ID
  """
  districts edge predicates
  """
  hasDistricts: Boolean
  hasDistrictsWith: [DistrictWhereInput!]
  """
  cities edge predicates
  """
  hasCities: Boolean
  hasCitiesWith: [CityWhereInput!]
  """
  country edge predicates
  """
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """
  area edge predicates
  """
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  areas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Areas returned from the connection.
    """
    orderBy: AreaOrder

    """
    Filtering options for Areas returned from the connection.
    """
    where: AreaWhereInput
  ): AreaConnection!
  cities(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Cities returned from the connection.
    """
    orderBy: CityOrder

    """
    Filtering options for Cities returned from the connection.
    """
    where: CityWhereInput
  ): CityConnection!
  competitors(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Competitors returned from the connection.
    """
    orderBy: [CompetitorOrder!]

    """
    Filtering options for Competitors returned from the connection.
    """
    where: CompetitorWhereInput
  ): CompetitorConnection!
  countries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Countries returned from the connection.
    """
    orderBy: CountryOrder

    """
    Filtering options for Countries returned from the connection.
    """
    where: CountryWhereInput
  ): CountryConnection!
  customers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Customers returned from the connection.
    """
    orderBy: [CustomerOrder!]

    """
    Filtering options for Customers returned from the connection.
    """
    where: CustomerWhereInput
  ): CustomerConnection!
  customerProfiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for CustomerProfiles returned from the connection.
    """
    orderBy: [CustomerProfileOrder!]

    """
    Filtering options for CustomerProfiles returned from the connection.
    """
    where: CustomerProfileWhereInput
  ): CustomerProfileConnection!
  districts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Districts returned from the connection.
    """
    orderBy: DistrictOrder

    """
    Filtering options for Districts returned from the connection.
    """
    where: DistrictWhereInput
  ): DistrictConnection!
  operations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Operations returned from the connection.
    """
    orderBy: OperationOrder

    """
    Filtering options for Operations returned from the connection.
    """
    where: OperationWhereInput
  ): OperationConnection!
  plots(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Plots returned from the connection.
    """
    orderBy: PlotOrder

    """
    Filtering options for Plots returned from the connection.
    """
    where: PlotWhereInput
  ): PlotConnection!
  potentialTenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for PotentialTenders returned from the connection.
    """
    orderBy: [PotentialTenderOrder!]

    """
    Filtering options for PotentialTenders returned from the connection.
    """
    where: PotentialTenderWhereInput
  ): PotentialTenderConnection!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Projects returned from the connection.
    """
    orderBy: [ProjectOrder!]

    """
    Filtering options for Projects returned from the connection.
    """
    where: ProjectWhereInput
  ): ProjectConnection!
  provinces(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Provinces returned from the connection.
    """
    orderBy: ProvinceOrder

    """
    Filtering options for Provinces returned from the connection.
    """
    where: ProvinceWhereInput
  ): ProvinceConnection!
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  tenderCompetitors(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for TenderCompetitors returned from the connection.
    """
    orderBy: [TenderCompetitorOrder!]

    """
    Filtering options for TenderCompetitors returned from the connection.
    """
    where: TenderCompetitorWhereInput
  ): TenderCompetitorConnection!
  tenderProfiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for TenderProfiles returned from the connection.
    """
    orderBy: [TenderProfileOrder!]

    """
    Filtering options for TenderProfiles returned from the connection.
    """
    where: TenderProfileWhereInput
  ): TenderProfileConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
  visitRecords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for VisitRecords returned from the connection.
    """
    orderBy: [VisitRecordOrder!]

    """
    Filtering options for VisitRecords returned from the connection.
    """
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
}
type Tender implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  code: String!
  status: Int!
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int!
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  name: String!
  estimatedAmount: Float
  tenderDate: Time
  classify: Int
  discoveryDate: Time!
  address: String
  fullAddress: String
  contractor: String
  levelInvolved: Int
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  prepareToBid: Boolean!
  projectCode: String
  projectType: String
  projectDefinition: String
  estimatedProjectStartDate: Time
  estimatedProjectEndDate: Time
  attachements: [String!]
  remark: String
  images: [String!]
  tenderSituations: String
  ownerSituations: String
  biddingInstructions: String
  competitorSituations: String
  costEngineer: String
  tenderForm: String
  contractForm: String
  managementCompany: String
  tenderingAgency: String
  biddingDate: Time
  facadeConsultant: String
  designUnit: String
  consultingFirm: String
  keyProject: Boolean!
  currentProgress: String
  tenderWinCompany: String
  """
  投標編號，只限港澳
  """
  tenderCode: String
  """
  則師，只限港澳
  """
  architect: String
  """
  業主，只限港澳
  """
  developer: String
  """
  交標日期，只限港澳
  """
  tenderClosingDate: Time
  """
  施工面積，只限港澳
  """
  constructionArea: String
  """
  中標日期，只限港澳
  """
  tenderWinDate: Time
  """
  中標金額
  """
  tenderWinAmount: Float
  """
  最後一次投標金額，只限港澳
  """
  lastTenderAmount: Float
  areaID: ID!
  provinceID: ID
  cityID: ID
  districtID: ID
  customerID: ID
  finderID: ID
  createdByID: ID
  approverID: ID
  activeProfileID: ID
  pendingProfileID: ID
  area: Area!
  profiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for TenderProfiles returned from the connection.
    """
    orderBy: [TenderProfileOrder!]

    """
    Filtering options for TenderProfiles returned from the connection.
    """
    where: TenderProfileWhereInput
  ): TenderProfileConnection!
  competitors: [TenderCompetitor!]
  customer: Customer
  finder: User
  createdBy: User
  followingSales: [User!]
  province: Province
  city: City
  district: District
  visitRecords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for VisitRecords returned from the connection.
    """
    orderBy: [VisitRecordOrder!]

    """
    Filtering options for VisitRecords returned from the connection.
    """
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
  approver: User
  activeProfile: TenderProfile
  pendingProfile: TenderProfile
}
type TenderCompetitor implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  tenderID: ID!
  competitorID: ID!
  amount: Float!
  """
  是否中标
  """
  result: Boolean!
  tender: Tender!
  competitor: Competitor!
}
"""
A connection to a list of items.
"""
type TenderCompetitorConnection {
  """
  A list of edges.
  """
  edges: [TenderCompetitorEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TenderCompetitorEdge {
  """
  The item at the end of the edge.
  """
  node: TenderCompetitor
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for TenderCompetitor connections
"""
input TenderCompetitorOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order TenderCompetitors.
  """
  field: TenderCompetitorOrderField!
}
"""
Properties by which TenderCompetitor connections can be ordered.
"""
enum TenderCompetitorOrderField {
  CREATED_AT
}
"""
TenderCompetitorWhereInput is used for filtering TenderCompetitor objects.
Input was generated by ent.
"""
input TenderCompetitorWhereInput {
  not: TenderCompetitorWhereInput
  and: [TenderCompetitorWhereInput!]
  or: [TenderCompetitorWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  tender_id field predicates
  """
  tenderID: ID
  tenderIDNEQ: ID
  tenderIDIn: [ID!]
  tenderIDNotIn: [ID!]
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDContains: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDEqualFold: ID
  tenderIDContainsFold: ID
  """
  competitor_id field predicates
  """
  competitorID: ID
  competitorIDNEQ: ID
  competitorIDIn: [ID!]
  competitorIDNotIn: [ID!]
  competitorIDGT: ID
  competitorIDGTE: ID
  competitorIDLT: ID
  competitorIDLTE: ID
  competitorIDContains: ID
  competitorIDHasPrefix: ID
  competitorIDHasSuffix: ID
  competitorIDEqualFold: ID
  competitorIDContainsFold: ID
  """
  amount field predicates
  """
  amount: Float
  amountNEQ: Float
  amountIn: [Float!]
  amountNotIn: [Float!]
  amountGT: Float
  amountGTE: Float
  amountLT: Float
  amountLTE: Float
  """
  result field predicates
  """
  result: Boolean
  resultNEQ: Boolean
  """
  tender edge predicates
  """
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """
  competitor edge predicates
  """
  hasCompetitor: Boolean
  hasCompetitorWith: [CompetitorWhereInput!]
}
"""
A connection to a list of items.
"""
type TenderConnection {
  """
  A list of edges.
  """
  edges: [TenderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TenderEdge {
  """
  The item at the end of the edge.
  """
  node: Tender
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Tender connections
"""
input TenderOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Tenders.
  """
  field: TenderOrderField!
}
"""
Properties by which Tender connections can be ordered.
"""
enum TenderOrderField {
  CREATED_AT
  APPROVAL_STATUS
  NAME
  TENDER_DATE
  CLOSING_DATE
}
type TenderProfile implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  status: Int!
  """
  1 待審核 2 已通過 3 已拒絕 4 已撤回
  """
  approvalStatus: Int!
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  """
  審核日期
  """
  approvalDate: Time
  name: String
  estimatedAmount: Float
  tenderDate: Time
  classify: Int
  discoveryDate: Time
  address: String
  fullAddress: String
  contractor: String
  levelInvolved: Int
  sizeAndValueRating: Int
  sizeAndValueRatingOverview: String
  creditAndPaymentRating: Int
  creditAndPaymentRatingOverview: String
  timeLimitRating: Int
  timeLimitRatingOverview: String
  customerRelationshipRating: Int
  customerRelationshipRatingOverview: String
  competitivePartnershipRating: Int
  competitivePartnershipRatingOverview: String
  prepareToBid: Boolean!
  projectCode: String
  projectType: String
  projectDefinition: String
  estimatedProjectStartDate: Time
  estimatedProjectEndDate: Time
  attachments: [String!]
  geoCoordinate: [Float!]
  remark: String
  images: [String!]
  tenderSituations: String
  ownerSituations: String
  biddingInstructions: String
  competitorSituations: String
  costEngineer: String
  tenderForm: String
  contractForm: String
  managementCompany: String
  tenderingAgency: String
  biddingDate: Time
  facadeConsultant: String
  designUnit: String
  consultingFirm: String
  keyProject: Boolean!
  currentProgress: String
  tenderWinCompany: String
  """
  投標編號，只限港澳
  """
  tenderCode: String
  """
  則師，只限港澳
  """
  architect: String
  """
  業主，只限港澳
  """
  developer: String
  """
  交標日期，只限港澳
  """
  tenderClosingDate: Time
  """
  施工面積，只限港澳
  """
  constructionArea: String
  """
  投標金額
  """
  tenderAmount: Float
  """
  得標日期，只限港澳
  """
  tenderWinDate: Time
  """
  得標金額
  """
  tenderWinAmount: Float
  """
  最後一次投標金額，只限港澳
  """
  lastTenderAmount: Float
  tenderID: ID!
  provinceID: ID
  cityID: ID
  districtID: ID
  customerID: ID
  finderID: ID
  createdByID: ID
  approverID: ID
  tender: Tender!
  customer: Customer
  finder: User
  createdBy: User
  province: Province
  city: City
  district: District
  approver: User
}
"""
A connection to a list of items.
"""
type TenderProfileConnection {
  """
  A list of edges.
  """
  edges: [TenderProfileEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TenderProfileEdge {
  """
  The item at the end of the edge.
  """
  node: TenderProfile
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for TenderProfile connections
"""
input TenderProfileOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order TenderProfiles.
  """
  field: TenderProfileOrderField!
}
"""
Properties by which TenderProfile connections can be ordered.
"""
enum TenderProfileOrderField {
  CREATED_AT
  APPROVAL_STATUS
  NAME
  TENDER_DATE
  CLOSING_DATE
}
"""
TenderProfileWhereInput is used for filtering TenderProfile objects.
Input was generated by ent.
"""
input TenderProfileWhereInput {
  not: TenderProfileWhereInput
  and: [TenderProfileWhereInput!]
  or: [TenderProfileWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  status field predicates
  """
  status: Int
  statusNEQ: Int
  statusIn: [Int!]
  statusNotIn: [Int!]
  statusGT: Int
  statusGTE: Int
  statusLT: Int
  statusLTE: Int
  """
  approval_status field predicates
  """
  approvalStatus: Int
  approvalStatusNEQ: Int
  approvalStatusIn: [Int!]
  approvalStatusNotIn: [Int!]
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusLT: Int
  approvalStatusLTE: Int
  """
  approval_msg_id field predicates
  """
  approvalMsgID: String
  approvalMsgIDNEQ: String
  approvalMsgIDIn: [String!]
  approvalMsgIDNotIn: [String!]
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDContains: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIsNil: Boolean
  approvalMsgIDNotNil: Boolean
  approvalMsgIDEqualFold: String
  approvalMsgIDContainsFold: String
  """
  approval_date field predicates
  """
  approvalDate: Time
  approvalDateNEQ: Time
  approvalDateIn: [Time!]
  approvalDateNotIn: [Time!]
  approvalDateGT: Time
  approvalDateGTE: Time
  approvalDateLT: Time
  approvalDateLTE: Time
  approvalDateIsNil: Boolean
  approvalDateNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  estimated_amount field predicates
  """
  estimatedAmount: Float
  estimatedAmountNEQ: Float
  estimatedAmountIn: [Float!]
  estimatedAmountNotIn: [Float!]
  estimatedAmountGT: Float
  estimatedAmountGTE: Float
  estimatedAmountLT: Float
  estimatedAmountLTE: Float
  estimatedAmountIsNil: Boolean
  estimatedAmountNotNil: Boolean
  """
  tender_date field predicates
  """
  tenderDate: Time
  tenderDateNEQ: Time
  tenderDateIn: [Time!]
  tenderDateNotIn: [Time!]
  tenderDateGT: Time
  tenderDateGTE: Time
  tenderDateLT: Time
  tenderDateLTE: Time
  tenderDateIsNil: Boolean
  tenderDateNotNil: Boolean
  """
  classify field predicates
  """
  classify: Int
  classifyNEQ: Int
  classifyIn: [Int!]
  classifyNotIn: [Int!]
  classifyGT: Int
  classifyGTE: Int
  classifyLT: Int
  classifyLTE: Int
  classifyIsNil: Boolean
  classifyNotNil: Boolean
  """
  discovery_date field predicates
  """
  discoveryDate: Time
  discoveryDateNEQ: Time
  discoveryDateIn: [Time!]
  discoveryDateNotIn: [Time!]
  discoveryDateGT: Time
  discoveryDateGTE: Time
  discoveryDateLT: Time
  discoveryDateLTE: Time
  discoveryDateIsNil: Boolean
  discoveryDateNotNil: Boolean
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  full_address field predicates
  """
  fullAddress: String
  fullAddressNEQ: String
  fullAddressIn: [String!]
  fullAddressNotIn: [String!]
  fullAddressGT: String
  fullAddressGTE: String
  fullAddressLT: String
  fullAddressLTE: String
  fullAddressContains: String
  fullAddressHasPrefix: String
  fullAddressHasSuffix: String
  fullAddressIsNil: Boolean
  fullAddressNotNil: Boolean
  fullAddressEqualFold: String
  fullAddressContainsFold: String
  """
  contractor field predicates
  """
  contractor: String
  contractorNEQ: String
  contractorIn: [String!]
  contractorNotIn: [String!]
  contractorGT: String
  contractorGTE: String
  contractorLT: String
  contractorLTE: String
  contractorContains: String
  contractorHasPrefix: String
  contractorHasSuffix: String
  contractorIsNil: Boolean
  contractorNotNil: Boolean
  contractorEqualFold: String
  contractorContainsFold: String
  """
  level_involved field predicates
  """
  levelInvolved: Int
  levelInvolvedNEQ: Int
  levelInvolvedIn: [Int!]
  levelInvolvedNotIn: [Int!]
  levelInvolvedGT: Int
  levelInvolvedGTE: Int
  levelInvolvedLT: Int
  levelInvolvedLTE: Int
  levelInvolvedIsNil: Boolean
  levelInvolvedNotNil: Boolean
  """
  size_and_value_rating field predicates
  """
  sizeAndValueRating: Int
  sizeAndValueRatingNEQ: Int
  sizeAndValueRatingIn: [Int!]
  sizeAndValueRatingNotIn: [Int!]
  sizeAndValueRatingGT: Int
  sizeAndValueRatingGTE: Int
  sizeAndValueRatingLT: Int
  sizeAndValueRatingLTE: Int
  sizeAndValueRatingIsNil: Boolean
  sizeAndValueRatingNotNil: Boolean
  """
  size_and_value_rating_overview field predicates
  """
  sizeAndValueRatingOverview: String
  sizeAndValueRatingOverviewNEQ: String
  sizeAndValueRatingOverviewIn: [String!]
  sizeAndValueRatingOverviewNotIn: [String!]
  sizeAndValueRatingOverviewGT: String
  sizeAndValueRatingOverviewGTE: String
  sizeAndValueRatingOverviewLT: String
  sizeAndValueRatingOverviewLTE: String
  sizeAndValueRatingOverviewContains: String
  sizeAndValueRatingOverviewHasPrefix: String
  sizeAndValueRatingOverviewHasSuffix: String
  sizeAndValueRatingOverviewIsNil: Boolean
  sizeAndValueRatingOverviewNotNil: Boolean
  sizeAndValueRatingOverviewEqualFold: String
  sizeAndValueRatingOverviewContainsFold: String
  """
  credit_and_payment_rating field predicates
  """
  creditAndPaymentRating: Int
  creditAndPaymentRatingNEQ: Int
  creditAndPaymentRatingIn: [Int!]
  creditAndPaymentRatingNotIn: [Int!]
  creditAndPaymentRatingGT: Int
  creditAndPaymentRatingGTE: Int
  creditAndPaymentRatingLT: Int
  creditAndPaymentRatingLTE: Int
  creditAndPaymentRatingIsNil: Boolean
  creditAndPaymentRatingNotNil: Boolean
  """
  credit_and_payment_rating_overview field predicates
  """
  creditAndPaymentRatingOverview: String
  creditAndPaymentRatingOverviewNEQ: String
  creditAndPaymentRatingOverviewIn: [String!]
  creditAndPaymentRatingOverviewNotIn: [String!]
  creditAndPaymentRatingOverviewGT: String
  creditAndPaymentRatingOverviewGTE: String
  creditAndPaymentRatingOverviewLT: String
  creditAndPaymentRatingOverviewLTE: String
  creditAndPaymentRatingOverviewContains: String
  creditAndPaymentRatingOverviewHasPrefix: String
  creditAndPaymentRatingOverviewHasSuffix: String
  creditAndPaymentRatingOverviewIsNil: Boolean
  creditAndPaymentRatingOverviewNotNil: Boolean
  creditAndPaymentRatingOverviewEqualFold: String
  creditAndPaymentRatingOverviewContainsFold: String
  """
  time_limit_rating field predicates
  """
  timeLimitRating: Int
  timeLimitRatingNEQ: Int
  timeLimitRatingIn: [Int!]
  timeLimitRatingNotIn: [Int!]
  timeLimitRatingGT: Int
  timeLimitRatingGTE: Int
  timeLimitRatingLT: Int
  timeLimitRatingLTE: Int
  timeLimitRatingIsNil: Boolean
  timeLimitRatingNotNil: Boolean
  """
  time_limit_rating_overview field predicates
  """
  timeLimitRatingOverview: String
  timeLimitRatingOverviewNEQ: String
  timeLimitRatingOverviewIn: [String!]
  timeLimitRatingOverviewNotIn: [String!]
  timeLimitRatingOverviewGT: String
  timeLimitRatingOverviewGTE: String
  timeLimitRatingOverviewLT: String
  timeLimitRatingOverviewLTE: String
  timeLimitRatingOverviewContains: String
  timeLimitRatingOverviewHasPrefix: String
  timeLimitRatingOverviewHasSuffix: String
  timeLimitRatingOverviewIsNil: Boolean
  timeLimitRatingOverviewNotNil: Boolean
  timeLimitRatingOverviewEqualFold: String
  timeLimitRatingOverviewContainsFold: String
  """
  customer_relationship_rating field predicates
  """
  customerRelationshipRating: Int
  customerRelationshipRatingNEQ: Int
  customerRelationshipRatingIn: [Int!]
  customerRelationshipRatingNotIn: [Int!]
  customerRelationshipRatingGT: Int
  customerRelationshipRatingGTE: Int
  customerRelationshipRatingLT: Int
  customerRelationshipRatingLTE: Int
  customerRelationshipRatingIsNil: Boolean
  customerRelationshipRatingNotNil: Boolean
  """
  customer_relationship_rating_overview field predicates
  """
  customerRelationshipRatingOverview: String
  customerRelationshipRatingOverviewNEQ: String
  customerRelationshipRatingOverviewIn: [String!]
  customerRelationshipRatingOverviewNotIn: [String!]
  customerRelationshipRatingOverviewGT: String
  customerRelationshipRatingOverviewGTE: String
  customerRelationshipRatingOverviewLT: String
  customerRelationshipRatingOverviewLTE: String
  customerRelationshipRatingOverviewContains: String
  customerRelationshipRatingOverviewHasPrefix: String
  customerRelationshipRatingOverviewHasSuffix: String
  customerRelationshipRatingOverviewIsNil: Boolean
  customerRelationshipRatingOverviewNotNil: Boolean
  customerRelationshipRatingOverviewEqualFold: String
  customerRelationshipRatingOverviewContainsFold: String
  """
  competitive_partnership_rating field predicates
  """
  competitivePartnershipRating: Int
  competitivePartnershipRatingNEQ: Int
  competitivePartnershipRatingIn: [Int!]
  competitivePartnershipRatingNotIn: [Int!]
  competitivePartnershipRatingGT: Int
  competitivePartnershipRatingGTE: Int
  competitivePartnershipRatingLT: Int
  competitivePartnershipRatingLTE: Int
  competitivePartnershipRatingIsNil: Boolean
  competitivePartnershipRatingNotNil: Boolean
  """
  competitive_partnership_rating_overview field predicates
  """
  competitivePartnershipRatingOverview: String
  competitivePartnershipRatingOverviewNEQ: String
  competitivePartnershipRatingOverviewIn: [String!]
  competitivePartnershipRatingOverviewNotIn: [String!]
  competitivePartnershipRatingOverviewGT: String
  competitivePartnershipRatingOverviewGTE: String
  competitivePartnershipRatingOverviewLT: String
  competitivePartnershipRatingOverviewLTE: String
  competitivePartnershipRatingOverviewContains: String
  competitivePartnershipRatingOverviewHasPrefix: String
  competitivePartnershipRatingOverviewHasSuffix: String
  competitivePartnershipRatingOverviewIsNil: Boolean
  competitivePartnershipRatingOverviewNotNil: Boolean
  competitivePartnershipRatingOverviewEqualFold: String
  competitivePartnershipRatingOverviewContainsFold: String
  """
  prepare_to_bid field predicates
  """
  prepareToBid: Boolean
  prepareToBidNEQ: Boolean
  """
  project_code field predicates
  """
  projectCode: String
  projectCodeNEQ: String
  projectCodeIn: [String!]
  projectCodeNotIn: [String!]
  projectCodeGT: String
  projectCodeGTE: String
  projectCodeLT: String
  projectCodeLTE: String
  projectCodeContains: String
  projectCodeHasPrefix: String
  projectCodeHasSuffix: String
  projectCodeIsNil: Boolean
  projectCodeNotNil: Boolean
  projectCodeEqualFold: String
  projectCodeContainsFold: String
  """
  project_type field predicates
  """
  projectType: String
  projectTypeNEQ: String
  projectTypeIn: [String!]
  projectTypeNotIn: [String!]
  projectTypeGT: String
  projectTypeGTE: String
  projectTypeLT: String
  projectTypeLTE: String
  projectTypeContains: String
  projectTypeHasPrefix: String
  projectTypeHasSuffix: String
  projectTypeIsNil: Boolean
  projectTypeNotNil: Boolean
  projectTypeEqualFold: String
  projectTypeContainsFold: String
  """
  project_definition field predicates
  """
  projectDefinition: String
  projectDefinitionNEQ: String
  projectDefinitionIn: [String!]
  projectDefinitionNotIn: [String!]
  projectDefinitionGT: String
  projectDefinitionGTE: String
  projectDefinitionLT: String
  projectDefinitionLTE: String
  projectDefinitionContains: String
  projectDefinitionHasPrefix: String
  projectDefinitionHasSuffix: String
  projectDefinitionIsNil: Boolean
  projectDefinitionNotNil: Boolean
  projectDefinitionEqualFold: String
  projectDefinitionContainsFold: String
  """
  estimated_project_start_date field predicates
  """
  estimatedProjectStartDate: Time
  estimatedProjectStartDateNEQ: Time
  estimatedProjectStartDateIn: [Time!]
  estimatedProjectStartDateNotIn: [Time!]
  estimatedProjectStartDateGT: Time
  estimatedProjectStartDateGTE: Time
  estimatedProjectStartDateLT: Time
  estimatedProjectStartDateLTE: Time
  estimatedProjectStartDateIsNil: Boolean
  estimatedProjectStartDateNotNil: Boolean
  """
  estimated_project_end_date field predicates
  """
  estimatedProjectEndDate: Time
  estimatedProjectEndDateNEQ: Time
  estimatedProjectEndDateIn: [Time!]
  estimatedProjectEndDateNotIn: [Time!]
  estimatedProjectEndDateGT: Time
  estimatedProjectEndDateGTE: Time
  estimatedProjectEndDateLT: Time
  estimatedProjectEndDateLTE: Time
  estimatedProjectEndDateIsNil: Boolean
  estimatedProjectEndDateNotNil: Boolean
  """
  remark field predicates
  """
  remark: String
  remarkNEQ: String
  remarkIn: [String!]
  remarkNotIn: [String!]
  remarkGT: String
  remarkGTE: String
  remarkLT: String
  remarkLTE: String
  remarkContains: String
  remarkHasPrefix: String
  remarkHasSuffix: String
  remarkIsNil: Boolean
  remarkNotNil: Boolean
  remarkEqualFold: String
  remarkContainsFold: String
  """
  tender_situations field predicates
  """
  tenderSituations: String
  tenderSituationsNEQ: String
  tenderSituationsIn: [String!]
  tenderSituationsNotIn: [String!]
  tenderSituationsGT: String
  tenderSituationsGTE: String
  tenderSituationsLT: String
  tenderSituationsLTE: String
  tenderSituationsContains: String
  tenderSituationsHasPrefix: String
  tenderSituationsHasSuffix: String
  tenderSituationsIsNil: Boolean
  tenderSituationsNotNil: Boolean
  tenderSituationsEqualFold: String
  tenderSituationsContainsFold: String
  """
  owner_situations field predicates
  """
  ownerSituations: String
  ownerSituationsNEQ: String
  ownerSituationsIn: [String!]
  ownerSituationsNotIn: [String!]
  ownerSituationsGT: String
  ownerSituationsGTE: String
  ownerSituationsLT: String
  ownerSituationsLTE: String
  ownerSituationsContains: String
  ownerSituationsHasPrefix: String
  ownerSituationsHasSuffix: String
  ownerSituationsIsNil: Boolean
  ownerSituationsNotNil: Boolean
  ownerSituationsEqualFold: String
  ownerSituationsContainsFold: String
  """
  bidding_instructions field predicates
  """
  biddingInstructions: String
  biddingInstructionsNEQ: String
  biddingInstructionsIn: [String!]
  biddingInstructionsNotIn: [String!]
  biddingInstructionsGT: String
  biddingInstructionsGTE: String
  biddingInstructionsLT: String
  biddingInstructionsLTE: String
  biddingInstructionsContains: String
  biddingInstructionsHasPrefix: String
  biddingInstructionsHasSuffix: String
  biddingInstructionsIsNil: Boolean
  biddingInstructionsNotNil: Boolean
  biddingInstructionsEqualFold: String
  biddingInstructionsContainsFold: String
  """
  competitor_situations field predicates
  """
  competitorSituations: String
  competitorSituationsNEQ: String
  competitorSituationsIn: [String!]
  competitorSituationsNotIn: [String!]
  competitorSituationsGT: String
  competitorSituationsGTE: String
  competitorSituationsLT: String
  competitorSituationsLTE: String
  competitorSituationsContains: String
  competitorSituationsHasPrefix: String
  competitorSituationsHasSuffix: String
  competitorSituationsIsNil: Boolean
  competitorSituationsNotNil: Boolean
  competitorSituationsEqualFold: String
  competitorSituationsContainsFold: String
  """
  cost_engineer field predicates
  """
  costEngineer: String
  costEngineerNEQ: String
  costEngineerIn: [String!]
  costEngineerNotIn: [String!]
  costEngineerGT: String
  costEngineerGTE: String
  costEngineerLT: String
  costEngineerLTE: String
  costEngineerContains: String
  costEngineerHasPrefix: String
  costEngineerHasSuffix: String
  costEngineerIsNil: Boolean
  costEngineerNotNil: Boolean
  costEngineerEqualFold: String
  costEngineerContainsFold: String
  """
  tender_form field predicates
  """
  tenderForm: String
  tenderFormNEQ: String
  tenderFormIn: [String!]
  tenderFormNotIn: [String!]
  tenderFormGT: String
  tenderFormGTE: String
  tenderFormLT: String
  tenderFormLTE: String
  tenderFormContains: String
  tenderFormHasPrefix: String
  tenderFormHasSuffix: String
  tenderFormIsNil: Boolean
  tenderFormNotNil: Boolean
  tenderFormEqualFold: String
  tenderFormContainsFold: String
  """
  contract_form field predicates
  """
  contractForm: String
  contractFormNEQ: String
  contractFormIn: [String!]
  contractFormNotIn: [String!]
  contractFormGT: String
  contractFormGTE: String
  contractFormLT: String
  contractFormLTE: String
  contractFormContains: String
  contractFormHasPrefix: String
  contractFormHasSuffix: String
  contractFormIsNil: Boolean
  contractFormNotNil: Boolean
  contractFormEqualFold: String
  contractFormContainsFold: String
  """
  management_company field predicates
  """
  managementCompany: String
  managementCompanyNEQ: String
  managementCompanyIn: [String!]
  managementCompanyNotIn: [String!]
  managementCompanyGT: String
  managementCompanyGTE: String
  managementCompanyLT: String
  managementCompanyLTE: String
  managementCompanyContains: String
  managementCompanyHasPrefix: String
  managementCompanyHasSuffix: String
  managementCompanyIsNil: Boolean
  managementCompanyNotNil: Boolean
  managementCompanyEqualFold: String
  managementCompanyContainsFold: String
  """
  tendering_agency field predicates
  """
  tenderingAgency: String
  tenderingAgencyNEQ: String
  tenderingAgencyIn: [String!]
  tenderingAgencyNotIn: [String!]
  tenderingAgencyGT: String
  tenderingAgencyGTE: String
  tenderingAgencyLT: String
  tenderingAgencyLTE: String
  tenderingAgencyContains: String
  tenderingAgencyHasPrefix: String
  tenderingAgencyHasSuffix: String
  tenderingAgencyIsNil: Boolean
  tenderingAgencyNotNil: Boolean
  tenderingAgencyEqualFold: String
  tenderingAgencyContainsFold: String
  """
  bidding_date field predicates
  """
  biddingDate: Time
  biddingDateNEQ: Time
  biddingDateIn: [Time!]
  biddingDateNotIn: [Time!]
  biddingDateGT: Time
  biddingDateGTE: Time
  biddingDateLT: Time
  biddingDateLTE: Time
  biddingDateIsNil: Boolean
  biddingDateNotNil: Boolean
  """
  facade_consultant field predicates
  """
  facadeConsultant: String
  facadeConsultantNEQ: String
  facadeConsultantIn: [String!]
  facadeConsultantNotIn: [String!]
  facadeConsultantGT: String
  facadeConsultantGTE: String
  facadeConsultantLT: String
  facadeConsultantLTE: String
  facadeConsultantContains: String
  facadeConsultantHasPrefix: String
  facadeConsultantHasSuffix: String
  facadeConsultantIsNil: Boolean
  facadeConsultantNotNil: Boolean
  facadeConsultantEqualFold: String
  facadeConsultantContainsFold: String
  """
  design_unit field predicates
  """
  designUnit: String
  designUnitNEQ: String
  designUnitIn: [String!]
  designUnitNotIn: [String!]
  designUnitGT: String
  designUnitGTE: String
  designUnitLT: String
  designUnitLTE: String
  designUnitContains: String
  designUnitHasPrefix: String
  designUnitHasSuffix: String
  designUnitIsNil: Boolean
  designUnitNotNil: Boolean
  designUnitEqualFold: String
  designUnitContainsFold: String
  """
  consulting_firm field predicates
  """
  consultingFirm: String
  consultingFirmNEQ: String
  consultingFirmIn: [String!]
  consultingFirmNotIn: [String!]
  consultingFirmGT: String
  consultingFirmGTE: String
  consultingFirmLT: String
  consultingFirmLTE: String
  consultingFirmContains: String
  consultingFirmHasPrefix: String
  consultingFirmHasSuffix: String
  consultingFirmIsNil: Boolean
  consultingFirmNotNil: Boolean
  consultingFirmEqualFold: String
  consultingFirmContainsFold: String
  """
  key_project field predicates
  """
  keyProject: Boolean
  keyProjectNEQ: Boolean
  """
  current_progress field predicates
  """
  currentProgress: String
  currentProgressNEQ: String
  currentProgressIn: [String!]
  currentProgressNotIn: [String!]
  currentProgressGT: String
  currentProgressGTE: String
  currentProgressLT: String
  currentProgressLTE: String
  currentProgressContains: String
  currentProgressHasPrefix: String
  currentProgressHasSuffix: String
  currentProgressIsNil: Boolean
  currentProgressNotNil: Boolean
  currentProgressEqualFold: String
  currentProgressContainsFold: String
  """
  tender_win_company field predicates
  """
  tenderWinCompany: String
  tenderWinCompanyNEQ: String
  tenderWinCompanyIn: [String!]
  tenderWinCompanyNotIn: [String!]
  tenderWinCompanyGT: String
  tenderWinCompanyGTE: String
  tenderWinCompanyLT: String
  tenderWinCompanyLTE: String
  tenderWinCompanyContains: String
  tenderWinCompanyHasPrefix: String
  tenderWinCompanyHasSuffix: String
  tenderWinCompanyIsNil: Boolean
  tenderWinCompanyNotNil: Boolean
  tenderWinCompanyEqualFold: String
  tenderWinCompanyContainsFold: String
  """
  tender_code field predicates
  """
  tenderCode: String
  tenderCodeNEQ: String
  tenderCodeIn: [String!]
  tenderCodeNotIn: [String!]
  tenderCodeGT: String
  tenderCodeGTE: String
  tenderCodeLT: String
  tenderCodeLTE: String
  tenderCodeContains: String
  tenderCodeHasPrefix: String
  tenderCodeHasSuffix: String
  tenderCodeIsNil: Boolean
  tenderCodeNotNil: Boolean
  tenderCodeEqualFold: String
  tenderCodeContainsFold: String
  """
  architect field predicates
  """
  architect: String
  architectNEQ: String
  architectIn: [String!]
  architectNotIn: [String!]
  architectGT: String
  architectGTE: String
  architectLT: String
  architectLTE: String
  architectContains: String
  architectHasPrefix: String
  architectHasSuffix: String
  architectIsNil: Boolean
  architectNotNil: Boolean
  architectEqualFold: String
  architectContainsFold: String
  """
  developer field predicates
  """
  developer: String
  developerNEQ: String
  developerIn: [String!]
  developerNotIn: [String!]
  developerGT: String
  developerGTE: String
  developerLT: String
  developerLTE: String
  developerContains: String
  developerHasPrefix: String
  developerHasSuffix: String
  developerIsNil: Boolean
  developerNotNil: Boolean
  developerEqualFold: String
  developerContainsFold: String
  """
  tender_closing_date field predicates
  """
  tenderClosingDate: Time
  tenderClosingDateNEQ: Time
  tenderClosingDateIn: [Time!]
  tenderClosingDateNotIn: [Time!]
  tenderClosingDateGT: Time
  tenderClosingDateGTE: Time
  tenderClosingDateLT: Time
  tenderClosingDateLTE: Time
  tenderClosingDateIsNil: Boolean
  tenderClosingDateNotNil: Boolean
  """
  construction_area field predicates
  """
  constructionArea: String
  constructionAreaNEQ: String
  constructionAreaIn: [String!]
  constructionAreaNotIn: [String!]
  constructionAreaGT: String
  constructionAreaGTE: String
  constructionAreaLT: String
  constructionAreaLTE: String
  constructionAreaContains: String
  constructionAreaHasPrefix: String
  constructionAreaHasSuffix: String
  constructionAreaIsNil: Boolean
  constructionAreaNotNil: Boolean
  constructionAreaEqualFold: String
  constructionAreaContainsFold: String
  """
  tender_amount field predicates
  """
  tenderAmount: Float
  tenderAmountNEQ: Float
  tenderAmountIn: [Float!]
  tenderAmountNotIn: [Float!]
  tenderAmountGT: Float
  tenderAmountGTE: Float
  tenderAmountLT: Float
  tenderAmountLTE: Float
  tenderAmountIsNil: Boolean
  tenderAmountNotNil: Boolean
  """
  tender_win_date field predicates
  """
  tenderWinDate: Time
  tenderWinDateNEQ: Time
  tenderWinDateIn: [Time!]
  tenderWinDateNotIn: [Time!]
  tenderWinDateGT: Time
  tenderWinDateGTE: Time
  tenderWinDateLT: Time
  tenderWinDateLTE: Time
  tenderWinDateIsNil: Boolean
  tenderWinDateNotNil: Boolean
  """
  tender_win_amount field predicates
  """
  tenderWinAmount: Float
  tenderWinAmountNEQ: Float
  tenderWinAmountIn: [Float!]
  tenderWinAmountNotIn: [Float!]
  tenderWinAmountGT: Float
  tenderWinAmountGTE: Float
  tenderWinAmountLT: Float
  tenderWinAmountLTE: Float
  tenderWinAmountIsNil: Boolean
  tenderWinAmountNotNil: Boolean
  """
  last_tender_amount field predicates
  """
  lastTenderAmount: Float
  lastTenderAmountNEQ: Float
  lastTenderAmountIn: [Float!]
  lastTenderAmountNotIn: [Float!]
  lastTenderAmountGT: Float
  lastTenderAmountGTE: Float
  lastTenderAmountLT: Float
  lastTenderAmountLTE: Float
  lastTenderAmountIsNil: Boolean
  lastTenderAmountNotNil: Boolean
  """
  tender_id field predicates
  """
  tenderID: ID
  tenderIDNEQ: ID
  tenderIDIn: [ID!]
  tenderIDNotIn: [ID!]
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDContains: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDEqualFold: ID
  tenderIDContainsFold: ID
  """
  province_id field predicates
  """
  provinceID: ID
  provinceIDNEQ: ID
  provinceIDIn: [ID!]
  provinceIDNotIn: [ID!]
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDContains: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIsNil: Boolean
  provinceIDNotNil: Boolean
  provinceIDEqualFold: ID
  provinceIDContainsFold: ID
  """
  city_id field predicates
  """
  cityID: ID
  cityIDNEQ: ID
  cityIDIn: [ID!]
  cityIDNotIn: [ID!]
  cityIDGT: ID
  cityIDGTE: ID
  cityIDLT: ID
  cityIDLTE: ID
  cityIDContains: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIsNil: Boolean
  cityIDNotNil: Boolean
  cityIDEqualFold: ID
  cityIDContainsFold: ID
  """
  district_id field predicates
  """
  districtID: ID
  districtIDNEQ: ID
  districtIDIn: [ID!]
  districtIDNotIn: [ID!]
  districtIDGT: ID
  districtIDGTE: ID
  districtIDLT: ID
  districtIDLTE: ID
  districtIDContains: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIsNil: Boolean
  districtIDNotNil: Boolean
  districtIDEqualFold: ID
  districtIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: ID
  customerIDNEQ: ID
  customerIDIn: [ID!]
  customerIDNotIn: [ID!]
  customerIDGT: ID
  customerIDGTE: ID
  customerIDLT: ID
  customerIDLTE: ID
  customerIDContains: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIsNil: Boolean
  customerIDNotNil: Boolean
  customerIDEqualFold: ID
  customerIDContainsFold: ID
  """
  finder_id field predicates
  """
  finderID: ID
  finderIDNEQ: ID
  finderIDIn: [ID!]
  finderIDNotIn: [ID!]
  finderIDGT: ID
  finderIDGTE: ID
  finderIDLT: ID
  finderIDLTE: ID
  finderIDContains: ID
  finderIDHasPrefix: ID
  finderIDHasSuffix: ID
  finderIDIsNil: Boolean
  finderIDNotNil: Boolean
  finderIDEqualFold: ID
  finderIDContainsFold: ID
  """
  created_by_id field predicates
  """
  createdByID: ID
  createdByIDNEQ: ID
  createdByIDIn: [ID!]
  createdByIDNotIn: [ID!]
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDContains: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIsNil: Boolean
  createdByIDNotNil: Boolean
  createdByIDEqualFold: ID
  createdByIDContainsFold: ID
  """
  approver_id field predicates
  """
  approverID: ID
  approverIDNEQ: ID
  approverIDIn: [ID!]
  approverIDNotIn: [ID!]
  approverIDGT: ID
  approverIDGTE: ID
  approverIDLT: ID
  approverIDLTE: ID
  approverIDContains: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIsNil: Boolean
  approverIDNotNil: Boolean
  approverIDEqualFold: ID
  approverIDContainsFold: ID
  """
  tender edge predicates
  """
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """
  customer edge predicates
  """
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """
  finder edge predicates
  """
  hasFinder: Boolean
  hasFinderWith: [UserWhereInput!]
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  province edge predicates
  """
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """
  city edge predicates
  """
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """
  district edge predicates
  """
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """
  approver edge predicates
  """
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
}
"""
TenderWhereInput is used for filtering Tender objects.
Input was generated by ent.
"""
input TenderWhereInput {
  not: TenderWhereInput
  and: [TenderWhereInput!]
  or: [TenderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  status field predicates
  """
  status: Int
  statusNEQ: Int
  statusIn: [Int!]
  statusNotIn: [Int!]
  statusGT: Int
  statusGTE: Int
  statusLT: Int
  statusLTE: Int
  """
  approval_status field predicates
  """
  approvalStatus: Int
  approvalStatusNEQ: Int
  approvalStatusIn: [Int!]
  approvalStatusNotIn: [Int!]
  approvalStatusGT: Int
  approvalStatusGTE: Int
  approvalStatusLT: Int
  approvalStatusLTE: Int
  """
  approval_msg_id field predicates
  """
  approvalMsgID: String
  approvalMsgIDNEQ: String
  approvalMsgIDIn: [String!]
  approvalMsgIDNotIn: [String!]
  approvalMsgIDGT: String
  approvalMsgIDGTE: String
  approvalMsgIDLT: String
  approvalMsgIDLTE: String
  approvalMsgIDContains: String
  approvalMsgIDHasPrefix: String
  approvalMsgIDHasSuffix: String
  approvalMsgIDIsNil: Boolean
  approvalMsgIDNotNil: Boolean
  approvalMsgIDEqualFold: String
  approvalMsgIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  estimated_amount field predicates
  """
  estimatedAmount: Float
  estimatedAmountNEQ: Float
  estimatedAmountIn: [Float!]
  estimatedAmountNotIn: [Float!]
  estimatedAmountGT: Float
  estimatedAmountGTE: Float
  estimatedAmountLT: Float
  estimatedAmountLTE: Float
  estimatedAmountIsNil: Boolean
  estimatedAmountNotNil: Boolean
  """
  tender_date field predicates
  """
  tenderDate: Time
  tenderDateNEQ: Time
  tenderDateIn: [Time!]
  tenderDateNotIn: [Time!]
  tenderDateGT: Time
  tenderDateGTE: Time
  tenderDateLT: Time
  tenderDateLTE: Time
  tenderDateIsNil: Boolean
  tenderDateNotNil: Boolean
  """
  classify field predicates
  """
  classify: Int
  classifyNEQ: Int
  classifyIn: [Int!]
  classifyNotIn: [Int!]
  classifyGT: Int
  classifyGTE: Int
  classifyLT: Int
  classifyLTE: Int
  classifyIsNil: Boolean
  classifyNotNil: Boolean
  """
  discovery_date field predicates
  """
  discoveryDate: Time
  discoveryDateNEQ: Time
  discoveryDateIn: [Time!]
  discoveryDateNotIn: [Time!]
  discoveryDateGT: Time
  discoveryDateGTE: Time
  discoveryDateLT: Time
  discoveryDateLTE: Time
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  full_address field predicates
  """
  fullAddress: String
  fullAddressNEQ: String
  fullAddressIn: [String!]
  fullAddressNotIn: [String!]
  fullAddressGT: String
  fullAddressGTE: String
  fullAddressLT: String
  fullAddressLTE: String
  fullAddressContains: String
  fullAddressHasPrefix: String
  fullAddressHasSuffix: String
  fullAddressIsNil: Boolean
  fullAddressNotNil: Boolean
  fullAddressEqualFold: String
  fullAddressContainsFold: String
  """
  contractor field predicates
  """
  contractor: String
  contractorNEQ: String
  contractorIn: [String!]
  contractorNotIn: [String!]
  contractorGT: String
  contractorGTE: String
  contractorLT: String
  contractorLTE: String
  contractorContains: String
  contractorHasPrefix: String
  contractorHasSuffix: String
  contractorIsNil: Boolean
  contractorNotNil: Boolean
  contractorEqualFold: String
  contractorContainsFold: String
  """
  level_involved field predicates
  """
  levelInvolved: Int
  levelInvolvedNEQ: Int
  levelInvolvedIn: [Int!]
  levelInvolvedNotIn: [Int!]
  levelInvolvedGT: Int
  levelInvolvedGTE: Int
  levelInvolvedLT: Int
  levelInvolvedLTE: Int
  levelInvolvedIsNil: Boolean
  levelInvolvedNotNil: Boolean
  """
  size_and_value_rating field predicates
  """
  sizeAndValueRating: Int
  sizeAndValueRatingNEQ: Int
  sizeAndValueRatingIn: [Int!]
  sizeAndValueRatingNotIn: [Int!]
  sizeAndValueRatingGT: Int
  sizeAndValueRatingGTE: Int
  sizeAndValueRatingLT: Int
  sizeAndValueRatingLTE: Int
  sizeAndValueRatingIsNil: Boolean
  sizeAndValueRatingNotNil: Boolean
  """
  size_and_value_rating_overview field predicates
  """
  sizeAndValueRatingOverview: String
  sizeAndValueRatingOverviewNEQ: String
  sizeAndValueRatingOverviewIn: [String!]
  sizeAndValueRatingOverviewNotIn: [String!]
  sizeAndValueRatingOverviewGT: String
  sizeAndValueRatingOverviewGTE: String
  sizeAndValueRatingOverviewLT: String
  sizeAndValueRatingOverviewLTE: String
  sizeAndValueRatingOverviewContains: String
  sizeAndValueRatingOverviewHasPrefix: String
  sizeAndValueRatingOverviewHasSuffix: String
  sizeAndValueRatingOverviewIsNil: Boolean
  sizeAndValueRatingOverviewNotNil: Boolean
  sizeAndValueRatingOverviewEqualFold: String
  sizeAndValueRatingOverviewContainsFold: String
  """
  credit_and_payment_rating field predicates
  """
  creditAndPaymentRating: Int
  creditAndPaymentRatingNEQ: Int
  creditAndPaymentRatingIn: [Int!]
  creditAndPaymentRatingNotIn: [Int!]
  creditAndPaymentRatingGT: Int
  creditAndPaymentRatingGTE: Int
  creditAndPaymentRatingLT: Int
  creditAndPaymentRatingLTE: Int
  creditAndPaymentRatingIsNil: Boolean
  creditAndPaymentRatingNotNil: Boolean
  """
  credit_and_payment_rating_overview field predicates
  """
  creditAndPaymentRatingOverview: String
  creditAndPaymentRatingOverviewNEQ: String
  creditAndPaymentRatingOverviewIn: [String!]
  creditAndPaymentRatingOverviewNotIn: [String!]
  creditAndPaymentRatingOverviewGT: String
  creditAndPaymentRatingOverviewGTE: String
  creditAndPaymentRatingOverviewLT: String
  creditAndPaymentRatingOverviewLTE: String
  creditAndPaymentRatingOverviewContains: String
  creditAndPaymentRatingOverviewHasPrefix: String
  creditAndPaymentRatingOverviewHasSuffix: String
  creditAndPaymentRatingOverviewIsNil: Boolean
  creditAndPaymentRatingOverviewNotNil: Boolean
  creditAndPaymentRatingOverviewEqualFold: String
  creditAndPaymentRatingOverviewContainsFold: String
  """
  time_limit_rating field predicates
  """
  timeLimitRating: Int
  timeLimitRatingNEQ: Int
  timeLimitRatingIn: [Int!]
  timeLimitRatingNotIn: [Int!]
  timeLimitRatingGT: Int
  timeLimitRatingGTE: Int
  timeLimitRatingLT: Int
  timeLimitRatingLTE: Int
  timeLimitRatingIsNil: Boolean
  timeLimitRatingNotNil: Boolean
  """
  time_limit_rating_overview field predicates
  """
  timeLimitRatingOverview: String
  timeLimitRatingOverviewNEQ: String
  timeLimitRatingOverviewIn: [String!]
  timeLimitRatingOverviewNotIn: [String!]
  timeLimitRatingOverviewGT: String
  timeLimitRatingOverviewGTE: String
  timeLimitRatingOverviewLT: String
  timeLimitRatingOverviewLTE: String
  timeLimitRatingOverviewContains: String
  timeLimitRatingOverviewHasPrefix: String
  timeLimitRatingOverviewHasSuffix: String
  timeLimitRatingOverviewIsNil: Boolean
  timeLimitRatingOverviewNotNil: Boolean
  timeLimitRatingOverviewEqualFold: String
  timeLimitRatingOverviewContainsFold: String
  """
  customer_relationship_rating field predicates
  """
  customerRelationshipRating: Int
  customerRelationshipRatingNEQ: Int
  customerRelationshipRatingIn: [Int!]
  customerRelationshipRatingNotIn: [Int!]
  customerRelationshipRatingGT: Int
  customerRelationshipRatingGTE: Int
  customerRelationshipRatingLT: Int
  customerRelationshipRatingLTE: Int
  customerRelationshipRatingIsNil: Boolean
  customerRelationshipRatingNotNil: Boolean
  """
  customer_relationship_rating_overview field predicates
  """
  customerRelationshipRatingOverview: String
  customerRelationshipRatingOverviewNEQ: String
  customerRelationshipRatingOverviewIn: [String!]
  customerRelationshipRatingOverviewNotIn: [String!]
  customerRelationshipRatingOverviewGT: String
  customerRelationshipRatingOverviewGTE: String
  customerRelationshipRatingOverviewLT: String
  customerRelationshipRatingOverviewLTE: String
  customerRelationshipRatingOverviewContains: String
  customerRelationshipRatingOverviewHasPrefix: String
  customerRelationshipRatingOverviewHasSuffix: String
  customerRelationshipRatingOverviewIsNil: Boolean
  customerRelationshipRatingOverviewNotNil: Boolean
  customerRelationshipRatingOverviewEqualFold: String
  customerRelationshipRatingOverviewContainsFold: String
  """
  competitive_partnership_rating field predicates
  """
  competitivePartnershipRating: Int
  competitivePartnershipRatingNEQ: Int
  competitivePartnershipRatingIn: [Int!]
  competitivePartnershipRatingNotIn: [Int!]
  competitivePartnershipRatingGT: Int
  competitivePartnershipRatingGTE: Int
  competitivePartnershipRatingLT: Int
  competitivePartnershipRatingLTE: Int
  competitivePartnershipRatingIsNil: Boolean
  competitivePartnershipRatingNotNil: Boolean
  """
  competitive_partnership_rating_overview field predicates
  """
  competitivePartnershipRatingOverview: String
  competitivePartnershipRatingOverviewNEQ: String
  competitivePartnershipRatingOverviewIn: [String!]
  competitivePartnershipRatingOverviewNotIn: [String!]
  competitivePartnershipRatingOverviewGT: String
  competitivePartnershipRatingOverviewGTE: String
  competitivePartnershipRatingOverviewLT: String
  competitivePartnershipRatingOverviewLTE: String
  competitivePartnershipRatingOverviewContains: String
  competitivePartnershipRatingOverviewHasPrefix: String
  competitivePartnershipRatingOverviewHasSuffix: String
  competitivePartnershipRatingOverviewIsNil: Boolean
  competitivePartnershipRatingOverviewNotNil: Boolean
  competitivePartnershipRatingOverviewEqualFold: String
  competitivePartnershipRatingOverviewContainsFold: String
  """
  prepare_to_bid field predicates
  """
  prepareToBid: Boolean
  prepareToBidNEQ: Boolean
  """
  project_code field predicates
  """
  projectCode: String
  projectCodeNEQ: String
  projectCodeIn: [String!]
  projectCodeNotIn: [String!]
  projectCodeGT: String
  projectCodeGTE: String
  projectCodeLT: String
  projectCodeLTE: String
  projectCodeContains: String
  projectCodeHasPrefix: String
  projectCodeHasSuffix: String
  projectCodeIsNil: Boolean
  projectCodeNotNil: Boolean
  projectCodeEqualFold: String
  projectCodeContainsFold: String
  """
  project_type field predicates
  """
  projectType: String
  projectTypeNEQ: String
  projectTypeIn: [String!]
  projectTypeNotIn: [String!]
  projectTypeGT: String
  projectTypeGTE: String
  projectTypeLT: String
  projectTypeLTE: String
  projectTypeContains: String
  projectTypeHasPrefix: String
  projectTypeHasSuffix: String
  projectTypeIsNil: Boolean
  projectTypeNotNil: Boolean
  projectTypeEqualFold: String
  projectTypeContainsFold: String
  """
  project_definition field predicates
  """
  projectDefinition: String
  projectDefinitionNEQ: String
  projectDefinitionIn: [String!]
  projectDefinitionNotIn: [String!]
  projectDefinitionGT: String
  projectDefinitionGTE: String
  projectDefinitionLT: String
  projectDefinitionLTE: String
  projectDefinitionContains: String
  projectDefinitionHasPrefix: String
  projectDefinitionHasSuffix: String
  projectDefinitionIsNil: Boolean
  projectDefinitionNotNil: Boolean
  projectDefinitionEqualFold: String
  projectDefinitionContainsFold: String
  """
  estimated_project_start_date field predicates
  """
  estimatedProjectStartDate: Time
  estimatedProjectStartDateNEQ: Time
  estimatedProjectStartDateIn: [Time!]
  estimatedProjectStartDateNotIn: [Time!]
  estimatedProjectStartDateGT: Time
  estimatedProjectStartDateGTE: Time
  estimatedProjectStartDateLT: Time
  estimatedProjectStartDateLTE: Time
  estimatedProjectStartDateIsNil: Boolean
  estimatedProjectStartDateNotNil: Boolean
  """
  estimated_project_end_date field predicates
  """
  estimatedProjectEndDate: Time
  estimatedProjectEndDateNEQ: Time
  estimatedProjectEndDateIn: [Time!]
  estimatedProjectEndDateNotIn: [Time!]
  estimatedProjectEndDateGT: Time
  estimatedProjectEndDateGTE: Time
  estimatedProjectEndDateLT: Time
  estimatedProjectEndDateLTE: Time
  estimatedProjectEndDateIsNil: Boolean
  estimatedProjectEndDateNotNil: Boolean
  """
  remark field predicates
  """
  remark: String
  remarkNEQ: String
  remarkIn: [String!]
  remarkNotIn: [String!]
  remarkGT: String
  remarkGTE: String
  remarkLT: String
  remarkLTE: String
  remarkContains: String
  remarkHasPrefix: String
  remarkHasSuffix: String
  remarkIsNil: Boolean
  remarkNotNil: Boolean
  remarkEqualFold: String
  remarkContainsFold: String
  """
  tender_situations field predicates
  """
  tenderSituations: String
  tenderSituationsNEQ: String
  tenderSituationsIn: [String!]
  tenderSituationsNotIn: [String!]
  tenderSituationsGT: String
  tenderSituationsGTE: String
  tenderSituationsLT: String
  tenderSituationsLTE: String
  tenderSituationsContains: String
  tenderSituationsHasPrefix: String
  tenderSituationsHasSuffix: String
  tenderSituationsIsNil: Boolean
  tenderSituationsNotNil: Boolean
  tenderSituationsEqualFold: String
  tenderSituationsContainsFold: String
  """
  owner_situations field predicates
  """
  ownerSituations: String
  ownerSituationsNEQ: String
  ownerSituationsIn: [String!]
  ownerSituationsNotIn: [String!]
  ownerSituationsGT: String
  ownerSituationsGTE: String
  ownerSituationsLT: String
  ownerSituationsLTE: String
  ownerSituationsContains: String
  ownerSituationsHasPrefix: String
  ownerSituationsHasSuffix: String
  ownerSituationsIsNil: Boolean
  ownerSituationsNotNil: Boolean
  ownerSituationsEqualFold: String
  ownerSituationsContainsFold: String
  """
  bidding_instructions field predicates
  """
  biddingInstructions: String
  biddingInstructionsNEQ: String
  biddingInstructionsIn: [String!]
  biddingInstructionsNotIn: [String!]
  biddingInstructionsGT: String
  biddingInstructionsGTE: String
  biddingInstructionsLT: String
  biddingInstructionsLTE: String
  biddingInstructionsContains: String
  biddingInstructionsHasPrefix: String
  biddingInstructionsHasSuffix: String
  biddingInstructionsIsNil: Boolean
  biddingInstructionsNotNil: Boolean
  biddingInstructionsEqualFold: String
  biddingInstructionsContainsFold: String
  """
  competitor_situations field predicates
  """
  competitorSituations: String
  competitorSituationsNEQ: String
  competitorSituationsIn: [String!]
  competitorSituationsNotIn: [String!]
  competitorSituationsGT: String
  competitorSituationsGTE: String
  competitorSituationsLT: String
  competitorSituationsLTE: String
  competitorSituationsContains: String
  competitorSituationsHasPrefix: String
  competitorSituationsHasSuffix: String
  competitorSituationsIsNil: Boolean
  competitorSituationsNotNil: Boolean
  competitorSituationsEqualFold: String
  competitorSituationsContainsFold: String
  """
  cost_engineer field predicates
  """
  costEngineer: String
  costEngineerNEQ: String
  costEngineerIn: [String!]
  costEngineerNotIn: [String!]
  costEngineerGT: String
  costEngineerGTE: String
  costEngineerLT: String
  costEngineerLTE: String
  costEngineerContains: String
  costEngineerHasPrefix: String
  costEngineerHasSuffix: String
  costEngineerIsNil: Boolean
  costEngineerNotNil: Boolean
  costEngineerEqualFold: String
  costEngineerContainsFold: String
  """
  tender_form field predicates
  """
  tenderForm: String
  tenderFormNEQ: String
  tenderFormIn: [String!]
  tenderFormNotIn: [String!]
  tenderFormGT: String
  tenderFormGTE: String
  tenderFormLT: String
  tenderFormLTE: String
  tenderFormContains: String
  tenderFormHasPrefix: String
  tenderFormHasSuffix: String
  tenderFormIsNil: Boolean
  tenderFormNotNil: Boolean
  tenderFormEqualFold: String
  tenderFormContainsFold: String
  """
  contract_form field predicates
  """
  contractForm: String
  contractFormNEQ: String
  contractFormIn: [String!]
  contractFormNotIn: [String!]
  contractFormGT: String
  contractFormGTE: String
  contractFormLT: String
  contractFormLTE: String
  contractFormContains: String
  contractFormHasPrefix: String
  contractFormHasSuffix: String
  contractFormIsNil: Boolean
  contractFormNotNil: Boolean
  contractFormEqualFold: String
  contractFormContainsFold: String
  """
  management_company field predicates
  """
  managementCompany: String
  managementCompanyNEQ: String
  managementCompanyIn: [String!]
  managementCompanyNotIn: [String!]
  managementCompanyGT: String
  managementCompanyGTE: String
  managementCompanyLT: String
  managementCompanyLTE: String
  managementCompanyContains: String
  managementCompanyHasPrefix: String
  managementCompanyHasSuffix: String
  managementCompanyIsNil: Boolean
  managementCompanyNotNil: Boolean
  managementCompanyEqualFold: String
  managementCompanyContainsFold: String
  """
  tendering_agency field predicates
  """
  tenderingAgency: String
  tenderingAgencyNEQ: String
  tenderingAgencyIn: [String!]
  tenderingAgencyNotIn: [String!]
  tenderingAgencyGT: String
  tenderingAgencyGTE: String
  tenderingAgencyLT: String
  tenderingAgencyLTE: String
  tenderingAgencyContains: String
  tenderingAgencyHasPrefix: String
  tenderingAgencyHasSuffix: String
  tenderingAgencyIsNil: Boolean
  tenderingAgencyNotNil: Boolean
  tenderingAgencyEqualFold: String
  tenderingAgencyContainsFold: String
  """
  bidding_date field predicates
  """
  biddingDate: Time
  biddingDateNEQ: Time
  biddingDateIn: [Time!]
  biddingDateNotIn: [Time!]
  biddingDateGT: Time
  biddingDateGTE: Time
  biddingDateLT: Time
  biddingDateLTE: Time
  biddingDateIsNil: Boolean
  biddingDateNotNil: Boolean
  """
  facade_consultant field predicates
  """
  facadeConsultant: String
  facadeConsultantNEQ: String
  facadeConsultantIn: [String!]
  facadeConsultantNotIn: [String!]
  facadeConsultantGT: String
  facadeConsultantGTE: String
  facadeConsultantLT: String
  facadeConsultantLTE: String
  facadeConsultantContains: String
  facadeConsultantHasPrefix: String
  facadeConsultantHasSuffix: String
  facadeConsultantIsNil: Boolean
  facadeConsultantNotNil: Boolean
  facadeConsultantEqualFold: String
  facadeConsultantContainsFold: String
  """
  design_unit field predicates
  """
  designUnit: String
  designUnitNEQ: String
  designUnitIn: [String!]
  designUnitNotIn: [String!]
  designUnitGT: String
  designUnitGTE: String
  designUnitLT: String
  designUnitLTE: String
  designUnitContains: String
  designUnitHasPrefix: String
  designUnitHasSuffix: String
  designUnitIsNil: Boolean
  designUnitNotNil: Boolean
  designUnitEqualFold: String
  designUnitContainsFold: String
  """
  consulting_firm field predicates
  """
  consultingFirm: String
  consultingFirmNEQ: String
  consultingFirmIn: [String!]
  consultingFirmNotIn: [String!]
  consultingFirmGT: String
  consultingFirmGTE: String
  consultingFirmLT: String
  consultingFirmLTE: String
  consultingFirmContains: String
  consultingFirmHasPrefix: String
  consultingFirmHasSuffix: String
  consultingFirmIsNil: Boolean
  consultingFirmNotNil: Boolean
  consultingFirmEqualFold: String
  consultingFirmContainsFold: String
  """
  key_project field predicates
  """
  keyProject: Boolean
  keyProjectNEQ: Boolean
  """
  current_progress field predicates
  """
  currentProgress: String
  currentProgressNEQ: String
  currentProgressIn: [String!]
  currentProgressNotIn: [String!]
  currentProgressGT: String
  currentProgressGTE: String
  currentProgressLT: String
  currentProgressLTE: String
  currentProgressContains: String
  currentProgressHasPrefix: String
  currentProgressHasSuffix: String
  currentProgressIsNil: Boolean
  currentProgressNotNil: Boolean
  currentProgressEqualFold: String
  currentProgressContainsFold: String
  """
  tender_win_company field predicates
  """
  tenderWinCompany: String
  tenderWinCompanyNEQ: String
  tenderWinCompanyIn: [String!]
  tenderWinCompanyNotIn: [String!]
  tenderWinCompanyGT: String
  tenderWinCompanyGTE: String
  tenderWinCompanyLT: String
  tenderWinCompanyLTE: String
  tenderWinCompanyContains: String
  tenderWinCompanyHasPrefix: String
  tenderWinCompanyHasSuffix: String
  tenderWinCompanyIsNil: Boolean
  tenderWinCompanyNotNil: Boolean
  tenderWinCompanyEqualFold: String
  tenderWinCompanyContainsFold: String
  """
  tender_code field predicates
  """
  tenderCode: String
  tenderCodeNEQ: String
  tenderCodeIn: [String!]
  tenderCodeNotIn: [String!]
  tenderCodeGT: String
  tenderCodeGTE: String
  tenderCodeLT: String
  tenderCodeLTE: String
  tenderCodeContains: String
  tenderCodeHasPrefix: String
  tenderCodeHasSuffix: String
  tenderCodeIsNil: Boolean
  tenderCodeNotNil: Boolean
  tenderCodeEqualFold: String
  tenderCodeContainsFold: String
  """
  architect field predicates
  """
  architect: String
  architectNEQ: String
  architectIn: [String!]
  architectNotIn: [String!]
  architectGT: String
  architectGTE: String
  architectLT: String
  architectLTE: String
  architectContains: String
  architectHasPrefix: String
  architectHasSuffix: String
  architectIsNil: Boolean
  architectNotNil: Boolean
  architectEqualFold: String
  architectContainsFold: String
  """
  developer field predicates
  """
  developer: String
  developerNEQ: String
  developerIn: [String!]
  developerNotIn: [String!]
  developerGT: String
  developerGTE: String
  developerLT: String
  developerLTE: String
  developerContains: String
  developerHasPrefix: String
  developerHasSuffix: String
  developerIsNil: Boolean
  developerNotNil: Boolean
  developerEqualFold: String
  developerContainsFold: String
  """
  tender_closing_date field predicates
  """
  tenderClosingDate: Time
  tenderClosingDateNEQ: Time
  tenderClosingDateIn: [Time!]
  tenderClosingDateNotIn: [Time!]
  tenderClosingDateGT: Time
  tenderClosingDateGTE: Time
  tenderClosingDateLT: Time
  tenderClosingDateLTE: Time
  tenderClosingDateIsNil: Boolean
  tenderClosingDateNotNil: Boolean
  """
  construction_area field predicates
  """
  constructionArea: String
  constructionAreaNEQ: String
  constructionAreaIn: [String!]
  constructionAreaNotIn: [String!]
  constructionAreaGT: String
  constructionAreaGTE: String
  constructionAreaLT: String
  constructionAreaLTE: String
  constructionAreaContains: String
  constructionAreaHasPrefix: String
  constructionAreaHasSuffix: String
  constructionAreaIsNil: Boolean
  constructionAreaNotNil: Boolean
  constructionAreaEqualFold: String
  constructionAreaContainsFold: String
  """
  tender_win_date field predicates
  """
  tenderWinDate: Time
  tenderWinDateNEQ: Time
  tenderWinDateIn: [Time!]
  tenderWinDateNotIn: [Time!]
  tenderWinDateGT: Time
  tenderWinDateGTE: Time
  tenderWinDateLT: Time
  tenderWinDateLTE: Time
  tenderWinDateIsNil: Boolean
  tenderWinDateNotNil: Boolean
  """
  tender_win_amount field predicates
  """
  tenderWinAmount: Float
  tenderWinAmountNEQ: Float
  tenderWinAmountIn: [Float!]
  tenderWinAmountNotIn: [Float!]
  tenderWinAmountGT: Float
  tenderWinAmountGTE: Float
  tenderWinAmountLT: Float
  tenderWinAmountLTE: Float
  tenderWinAmountIsNil: Boolean
  tenderWinAmountNotNil: Boolean
  """
  last_tender_amount field predicates
  """
  lastTenderAmount: Float
  lastTenderAmountNEQ: Float
  lastTenderAmountIn: [Float!]
  lastTenderAmountNotIn: [Float!]
  lastTenderAmountGT: Float
  lastTenderAmountGTE: Float
  lastTenderAmountLT: Float
  lastTenderAmountLTE: Float
  lastTenderAmountIsNil: Boolean
  lastTenderAmountNotNil: Boolean
  """
  area_id field predicates
  """
  areaID: ID
  areaIDNEQ: ID
  areaIDIn: [ID!]
  areaIDNotIn: [ID!]
  areaIDGT: ID
  areaIDGTE: ID
  areaIDLT: ID
  areaIDLTE: ID
  areaIDContains: ID
  areaIDHasPrefix: ID
  areaIDHasSuffix: ID
  areaIDEqualFold: ID
  areaIDContainsFold: ID
  """
  province_id field predicates
  """
  provinceID: ID
  provinceIDNEQ: ID
  provinceIDIn: [ID!]
  provinceIDNotIn: [ID!]
  provinceIDGT: ID
  provinceIDGTE: ID
  provinceIDLT: ID
  provinceIDLTE: ID
  provinceIDContains: ID
  provinceIDHasPrefix: ID
  provinceIDHasSuffix: ID
  provinceIDIsNil: Boolean
  provinceIDNotNil: Boolean
  provinceIDEqualFold: ID
  provinceIDContainsFold: ID
  """
  city_id field predicates
  """
  cityID: ID
  cityIDNEQ: ID
  cityIDIn: [ID!]
  cityIDNotIn: [ID!]
  cityIDGT: ID
  cityIDGTE: ID
  cityIDLT: ID
  cityIDLTE: ID
  cityIDContains: ID
  cityIDHasPrefix: ID
  cityIDHasSuffix: ID
  cityIDIsNil: Boolean
  cityIDNotNil: Boolean
  cityIDEqualFold: ID
  cityIDContainsFold: ID
  """
  district_id field predicates
  """
  districtID: ID
  districtIDNEQ: ID
  districtIDIn: [ID!]
  districtIDNotIn: [ID!]
  districtIDGT: ID
  districtIDGTE: ID
  districtIDLT: ID
  districtIDLTE: ID
  districtIDContains: ID
  districtIDHasPrefix: ID
  districtIDHasSuffix: ID
  districtIDIsNil: Boolean
  districtIDNotNil: Boolean
  districtIDEqualFold: ID
  districtIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: ID
  customerIDNEQ: ID
  customerIDIn: [ID!]
  customerIDNotIn: [ID!]
  customerIDGT: ID
  customerIDGTE: ID
  customerIDLT: ID
  customerIDLTE: ID
  customerIDContains: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDIsNil: Boolean
  customerIDNotNil: Boolean
  customerIDEqualFold: ID
  customerIDContainsFold: ID
  """
  finder_id field predicates
  """
  finderID: ID
  finderIDNEQ: ID
  finderIDIn: [ID!]
  finderIDNotIn: [ID!]
  finderIDGT: ID
  finderIDGTE: ID
  finderIDLT: ID
  finderIDLTE: ID
  finderIDContains: ID
  finderIDHasPrefix: ID
  finderIDHasSuffix: ID
  finderIDIsNil: Boolean
  finderIDNotNil: Boolean
  finderIDEqualFold: ID
  finderIDContainsFold: ID
  """
  created_by_id field predicates
  """
  createdByID: ID
  createdByIDNEQ: ID
  createdByIDIn: [ID!]
  createdByIDNotIn: [ID!]
  createdByIDGT: ID
  createdByIDGTE: ID
  createdByIDLT: ID
  createdByIDLTE: ID
  createdByIDContains: ID
  createdByIDHasPrefix: ID
  createdByIDHasSuffix: ID
  createdByIDIsNil: Boolean
  createdByIDNotNil: Boolean
  createdByIDEqualFold: ID
  createdByIDContainsFold: ID
  """
  approver_id field predicates
  """
  approverID: ID
  approverIDNEQ: ID
  approverIDIn: [ID!]
  approverIDNotIn: [ID!]
  approverIDGT: ID
  approverIDGTE: ID
  approverIDLT: ID
  approverIDLTE: ID
  approverIDContains: ID
  approverIDHasPrefix: ID
  approverIDHasSuffix: ID
  approverIDIsNil: Boolean
  approverIDNotNil: Boolean
  approverIDEqualFold: ID
  approverIDContainsFold: ID
  """
  active_profile_id field predicates
  """
  activeProfileID: ID
  activeProfileIDNEQ: ID
  activeProfileIDIn: [ID!]
  activeProfileIDNotIn: [ID!]
  activeProfileIDGT: ID
  activeProfileIDGTE: ID
  activeProfileIDLT: ID
  activeProfileIDLTE: ID
  activeProfileIDContains: ID
  activeProfileIDHasPrefix: ID
  activeProfileIDHasSuffix: ID
  activeProfileIDIsNil: Boolean
  activeProfileIDNotNil: Boolean
  activeProfileIDEqualFold: ID
  activeProfileIDContainsFold: ID
  """
  pending_profile_id field predicates
  """
  pendingProfileID: ID
  pendingProfileIDNEQ: ID
  pendingProfileIDIn: [ID!]
  pendingProfileIDNotIn: [ID!]
  pendingProfileIDGT: ID
  pendingProfileIDGTE: ID
  pendingProfileIDLT: ID
  pendingProfileIDLTE: ID
  pendingProfileIDContains: ID
  pendingProfileIDHasPrefix: ID
  pendingProfileIDHasSuffix: ID
  pendingProfileIDIsNil: Boolean
  pendingProfileIDNotNil: Boolean
  pendingProfileIDEqualFold: ID
  pendingProfileIDContainsFold: ID
  """
  area edge predicates
  """
  hasArea: Boolean
  hasAreaWith: [AreaWhereInput!]
  """
  profiles edge predicates
  """
  hasProfiles: Boolean
  hasProfilesWith: [TenderProfileWhereInput!]
  """
  competitors edge predicates
  """
  hasCompetitors: Boolean
  hasCompetitorsWith: [TenderCompetitorWhereInput!]
  """
  customer edge predicates
  """
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """
  finder edge predicates
  """
  hasFinder: Boolean
  hasFinderWith: [UserWhereInput!]
  """
  created_by edge predicates
  """
  hasCreatedBy: Boolean
  hasCreatedByWith: [UserWhereInput!]
  """
  following_sales edge predicates
  """
  hasFollowingSales: Boolean
  hasFollowingSalesWith: [UserWhereInput!]
  """
  province edge predicates
  """
  hasProvince: Boolean
  hasProvinceWith: [ProvinceWhereInput!]
  """
  city edge predicates
  """
  hasCity: Boolean
  hasCityWith: [CityWhereInput!]
  """
  district edge predicates
  """
  hasDistrict: Boolean
  hasDistrictWith: [DistrictWhereInput!]
  """
  visit_records edge predicates
  """
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """
  approver edge predicates
  """
  hasApprover: Boolean
  hasApproverWith: [UserWhereInput!]
  """
  active_profile edge predicates
  """
  hasActiveProfile: Boolean
  hasActiveProfileWith: [TenderProfileWhereInput!]
  """
  pending_profile edge predicates
  """
  hasPendingProfile: Boolean
  hasPendingProfileWith: [TenderProfileWhereInput!]
}
"""
UpdateAreaInput is used for update Area object.
Input was generated by ent.
"""
input UpdateAreaInput {
  updatedAt: Time
  name: String
  code: String
  leaderChatID: String
  clearLeaderChatID: Boolean
  salesChatID: String
  clearSalesChatID: Boolean
  addCustomerIDs: [ID!]
  removeCustomerIDs: [ID!]
  clearCustomers: Boolean
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addProvinceIDs: [ID!]
  removeProvinceIDs: [ID!]
  clearProvinces: Boolean
}
"""
UpdateCityInput is used for update City object.
Input was generated by ent.
"""
input UpdateCityInput {
  updatedAt: Time
  adcode: Int
  provCode: Int
  name: String
  addDistrictIDs: [ID!]
  removeDistrictIDs: [ID!]
  clearDistricts: Boolean
  provinceID: ID
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
}
"""
UpdateCompetitorInput is used for update Competitor object.
Input was generated by ent.
"""
input UpdateCompetitorInput {
  updatedAt: Time
  shortName: String
  name: String
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
}
"""
UpdateCountryInput is used for update Country object.
Input was generated by ent.
"""
input UpdateCountryInput {
  updatedAt: Time
  adcode: Int
  name: String
  addProvinceIDs: [ID!]
  removeProvinceIDs: [ID!]
  clearProvinces: Boolean
}
"""
UpdateCustomerInput is used for update Customer object.
Input was generated by ent.
"""
input UpdateCustomerInput {
  updatedAt: Time
  name: String
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int
  ownerType: Int
  clearOwnerType: Boolean
  industry: Int
  clearIndustry: Boolean
  size: Int
  clearSize: Boolean
  contactPerson: String
  clearContactPerson: Boolean
  contactPersonPosition: String
  clearContactPersonPosition: Boolean
  contactPersonPhone: String
  clearContactPersonPhone: Boolean
  contactPersonEmail: String
  clearContactPersonEmail: Boolean
  areaID: ID
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
  salesID: ID
  clearSales: Boolean
  createdByID: ID
  clearCreatedBy: Boolean
  updatedByID: ID
  clearUpdatedBy: Boolean
  approverID: ID
  clearApprover: Boolean
  addVisitRecordIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  clearVisitRecords: Boolean
  addProfileIDs: [ID!]
  removeProfileIDs: [ID!]
  clearProfiles: Boolean
  activeProfileID: ID
  clearActiveProfile: Boolean
  pendingProfileID: ID
  clearPendingProfile: Boolean
}
"""
UpdateDistrictInput is used for update District object.
Input was generated by ent.
"""
input UpdateDistrictInput {
  updatedAt: Time
  adcode: Int
  provCode: Int
  cityCode: Int
  name: String
  provinceID: ID
  cityID: ID
  clearCity: Boolean
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
  addPlotIDs: [ID!]
  removePlotIDs: [ID!]
  clearPlots: Boolean
}
"""
UpdatePlotInput is used for update Plot object.
Input was generated by ent.
"""
input UpdatePlotInput {
  updatedAt: Time
  name: String
  colorHex: String
  districtID: ID
}
"""
UpdateProjectInput is used for update Project object.
Input was generated by ent.
"""
input UpdateProjectInput {
  updatedAt: Time
  code: String
  """
  是否完成
  """
  isFinished: Boolean
  """
  營業額KPI
  """
  revenueKpi: Float
  clearRevenueKpi: Boolean
  """
  營業額當年完成
  """
  revenueCurrentYearCompleted: Float
  clearRevenueCurrentYearCompleted: Boolean
  """
  營業額累計完成
  """
  revenueAccumulatedCompleted: Float
  clearRevenueAccumulatedCompleted: Boolean
  """
  糧期
  """
  payDate: Time
  clearPayDate: Boolean
  """
  業主VO數量
  """
  ownerVoCount: Int
  clearOwnerVoCount: Boolean
  """
  总包VO數量
  """
  contractorVoCount: Int
  clearContractorVoCount: Boolean
  """
  累計扣款
  """
  accumulateDeduction: Float
  clearAccumulateDeduction: Boolean
  """
  分判VA數量
  """
  subcontractorVaCount: Int
  clearSubcontractorVaCount: Boolean
  """
  合約补料數量
  """
  contractSupplementaryCount: Int
  clearContractSupplementaryCount: Boolean
  """
  执修费
  """
  repairFee: Float
  clearRepairFee: Boolean
  """
  單元件庫存累計
  """
  unitInventoryTotal: Float
  clearUnitInventoryTotal: Boolean
  """
  單元件總數
  """
  unitComponentTotal: Float
  clearUnitComponentTotal: Boolean
  """
  單元件生產數量
  """
  unitComponentProduction: Float
  clearUnitComponentProduction: Boolean
  """
  單元件安裝數量
  """
  unitComponentInstallation: Float
  clearUnitComponentInstallation: Boolean
  """
  散件總訂貨數量
  """
  bulkMaterialsTotalOrderQuantity: Float
  clearBulkMaterialsTotalOrderQuantity: Boolean
  """
  散件已完成數量
  """
  bulkMaterialsCompletedQuantity: Float
  clearBulkMaterialsCompletedQuantity: Boolean
  """
  散件未完成數量
  """
  bulkMaterialsUncompletedQuantity: Float
  clearBulkMaterialsUncompletedQuantity: Boolean
  """
  BD圖紙完成數量
  """
  diagramBdFinishCount: Int
  clearDiagramBdFinishCount: Boolean
  """
  BD圖紙總數
  """
  diagramBdTotalCount: Int
  clearDiagramBdTotalCount: Boolean
  """
  施工圖紙完成數量
  """
  diagramConstructionFinishCount: Int
  clearDiagramConstructionFinishCount: Boolean
  """
  施工圖紙總數
  """
  diagramConstructionTotalCount: Int
  clearDiagramConstructionTotalCount: Boolean
  """
  加工圖完成數量
  """
  diagramProcessingFinishCount: Int
  clearDiagramProcessingFinishCount: Boolean
  """
  加工圖總數
  """
  diagramProcessingTotalCount: Int
  clearDiagramProcessingTotalCount: Boolean
  """
  C版批圖率分子
  """
  diagramCApprovalRatioNumerator: Int
  clearDiagramCApprovalRatioNumerator: Boolean
  """
  C版批圖率分母
  """
  diagramCApprovalRatioDenominator: Int
  clearDiagramCApprovalRatioDenominator: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
}
"""
UpdateProvinceInput is used for update Province object.
Input was generated by ent.
"""
input UpdateProvinceInput {
  updatedAt: Time
  adcode: Int
  name: String
  addDistrictIDs: [ID!]
  removeDistrictIDs: [ID!]
  clearDistricts: Boolean
  addCityIDs: [ID!]
  removeCityIDs: [ID!]
  clearCities: Boolean
  countryID: ID
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
  areaID: ID
  clearArea: Boolean
}
"""
UpdateTenderCompetitorInput is used for update TenderCompetitor object.
Input was generated by ent.
"""
input UpdateTenderCompetitorInput {
  updatedAt: Time
  amount: Float
  """
  是否中标
  """
  result: Boolean
  tenderID: ID
  competitorID: ID
}
"""
UpdateTenderInput is used for update Tender object.
Input was generated by ent.
"""
input UpdateTenderInput {
  updatedAt: Time
  code: String
  status: Int
  """
  1 待審核 2 已通過 3 已拒絕
  """
  approvalStatus: Int
  """
  審核飛書訊息ID
  """
  approvalMsgID: String
  clearApprovalMsgID: Boolean
  name: String
  estimatedAmount: Float
  clearEstimatedAmount: Boolean
  tenderDate: Time
  clearTenderDate: Boolean
  classify: Int
  clearClassify: Boolean
  discoveryDate: Time
  address: String
  clearAddress: Boolean
  fullAddress: String
  clearFullAddress: Boolean
  contractor: String
  clearContractor: Boolean
  levelInvolved: Int
  clearLevelInvolved: Boolean
  sizeAndValueRating: Int
  clearSizeAndValueRating: Boolean
  sizeAndValueRatingOverview: String
  clearSizeAndValueRatingOverview: Boolean
  creditAndPaymentRating: Int
  clearCreditAndPaymentRating: Boolean
  creditAndPaymentRatingOverview: String
  clearCreditAndPaymentRatingOverview: Boolean
  timeLimitRating: Int
  clearTimeLimitRating: Boolean
  timeLimitRatingOverview: String
  clearTimeLimitRatingOverview: Boolean
  customerRelationshipRating: Int
  clearCustomerRelationshipRating: Boolean
  customerRelationshipRatingOverview: String
  clearCustomerRelationshipRatingOverview: Boolean
  competitivePartnershipRating: Int
  clearCompetitivePartnershipRating: Boolean
  competitivePartnershipRatingOverview: String
  clearCompetitivePartnershipRatingOverview: Boolean
  prepareToBid: Boolean
  projectCode: String
  clearProjectCode: Boolean
  projectType: String
  clearProjectType: Boolean
  projectDefinition: String
  clearProjectDefinition: Boolean
  estimatedProjectStartDate: Time
  clearEstimatedProjectStartDate: Boolean
  estimatedProjectEndDate: Time
  clearEstimatedProjectEndDate: Boolean
  attachements: [String!]
  appendAttachements: [String!]
  clearAttachements: Boolean
  remark: String
  clearRemark: Boolean
  images: [String!]
  appendImages: [String!]
  clearImages: Boolean
  tenderSituations: String
  clearTenderSituations: Boolean
  ownerSituations: String
  clearOwnerSituations: Boolean
  biddingInstructions: String
  clearBiddingInstructions: Boolean
  competitorSituations: String
  clearCompetitorSituations: Boolean
  costEngineer: String
  clearCostEngineer: Boolean
  tenderForm: String
  clearTenderForm: Boolean
  contractForm: String
  clearContractForm: Boolean
  managementCompany: String
  clearManagementCompany: Boolean
  tenderingAgency: String
  clearTenderingAgency: Boolean
  biddingDate: Time
  clearBiddingDate: Boolean
  facadeConsultant: String
  clearFacadeConsultant: Boolean
  designUnit: String
  clearDesignUnit: Boolean
  consultingFirm: String
  clearConsultingFirm: Boolean
  keyProject: Boolean
  currentProgress: String
  clearCurrentProgress: Boolean
  tenderWinCompany: String
  clearTenderWinCompany: Boolean
  """
  投標編號，只限港澳
  """
  tenderCode: String
  clearTenderCode: Boolean
  """
  則師，只限港澳
  """
  architect: String
  clearArchitect: Boolean
  """
  業主，只限港澳
  """
  developer: String
  clearDeveloper: Boolean
  """
  交標日期，只限港澳
  """
  tenderClosingDate: Time
  clearTenderClosingDate: Boolean
  """
  施工面積，只限港澳
  """
  constructionArea: String
  clearConstructionArea: Boolean
  """
  中標日期，只限港澳
  """
  tenderWinDate: Time
  clearTenderWinDate: Boolean
  """
  中標金額
  """
  tenderWinAmount: Float
  clearTenderWinAmount: Boolean
  """
  最後一次投標金額，只限港澳
  """
  lastTenderAmount: Float
  clearLastTenderAmount: Boolean
  areaID: ID
  addProfileIDs: [ID!]
  removeProfileIDs: [ID!]
  clearProfiles: Boolean
  addCompetitorIDs: [ID!]
  removeCompetitorIDs: [ID!]
  clearCompetitors: Boolean
  customerID: ID
  clearCustomer: Boolean
  finderID: ID
  clearFinder: Boolean
  createdByID: ID
  clearCreatedBy: Boolean
  addFollowingSaleIDs: [ID!]
  removeFollowingSaleIDs: [ID!]
  clearFollowingSales: Boolean
  provinceID: ID
  clearProvince: Boolean
  cityID: ID
  clearCity: Boolean
  districtID: ID
  clearDistrict: Boolean
  addVisitRecordIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  clearVisitRecords: Boolean
  approverID: ID
  clearApprover: Boolean
  activeProfileID: ID
  clearActiveProfile: Boolean
  pendingProfileID: ID
  clearPendingProfile: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  updatedAt: Time
  openID: String
  name: String
  clearName: Boolean
  email: String
  clearEmail: Boolean
  username: String
  clearUsername: Boolean
  avatarURL: String
  clearAvatarURL: Boolean
  disabled: Boolean
  isAdmin: Boolean
  isCeo: Boolean
  isSuperAdmin: Boolean
  hasMapAccess: Boolean
  hasEditAccess: Boolean
  addAreaIDs: [ID!]
  removeAreaIDs: [ID!]
  clearAreas: Boolean
  addCustomerIDs: [ID!]
  removeCustomerIDs: [ID!]
  clearCustomers: Boolean
  leaderID: ID
  clearLeader: Boolean
  addTeamMemberIDs: [ID!]
  removeTeamMemberIDs: [ID!]
  clearTeamMembers: Boolean
  addTenderIDs: [ID!]
  removeTenderIDs: [ID!]
  clearTenders: Boolean
  addVisitRecordIDs: [ID!]
  removeVisitRecordIDs: [ID!]
  clearVisitRecords: Boolean
  addProjectIDs: [ID!]
  removeProjectIDs: [ID!]
  clearProjects: Boolean
}
"""
UpdateVisitRecordInput is used for update VisitRecord object.
Input was generated by ent.
"""
input UpdateVisitRecordInput {
  updatedAt: Time
  visitType: Int
  commPeople: String
  commContent: String
  nextStep: String
  clearNextStep: Boolean
  date: Time
  tenderID: ID
  clearTender: Boolean
  customerID: ID
  addFollowUpByIDs: [ID!]
  removeFollowUpByIDs: [ID!]
  clearFollowUpBys: Boolean
}
type User implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  openID: String!
  name: String
  email: String
  username: String
  avatarURL: String
  disabled: Boolean!
  isAdmin: Boolean!
  isCeo: Boolean!
  isSuperAdmin: Boolean!
  hasMapAccess: Boolean!
  hasEditAccess: Boolean!
  leaderID: ID
  areas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Areas returned from the connection.
    """
    orderBy: AreaOrder

    """
    Filtering options for Areas returned from the connection.
    """
    where: AreaWhereInput
  ): AreaConnection!
  customers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Customers returned from the connection.
    """
    orderBy: [CustomerOrder!]

    """
    Filtering options for Customers returned from the connection.
    """
    where: CustomerWhereInput
  ): CustomerConnection!
  leader: User
  teamMembers: [User!]
  tenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Tenders returned from the connection.
    """
    orderBy: [TenderOrder!]

    """
    Filtering options for Tenders returned from the connection.
    """
    where: TenderWhereInput
  ): TenderConnection!
  visitRecords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for VisitRecords returned from the connection.
    """
    orderBy: [VisitRecordOrder!]

    """
    Filtering options for VisitRecords returned from the connection.
    """
    where: VisitRecordWhereInput
  ): VisitRecordConnection!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Projects returned from the connection.
    """
    orderBy: [ProjectOrder!]

    """
    Filtering options for Projects returned from the connection.
    """
    where: ProjectWhereInput
  ): ProjectConnection!
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  CREATED_AT
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  open_id field predicates
  """
  openID: String
  openIDNEQ: String
  openIDIn: [String!]
  openIDNotIn: [String!]
  openIDGT: String
  openIDGTE: String
  openIDLT: String
  openIDLTE: String
  openIDContains: String
  openIDHasPrefix: String
  openIDHasSuffix: String
  openIDEqualFold: String
  openIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  username field predicates
  """
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameIsNil: Boolean
  usernameNotNil: Boolean
  usernameEqualFold: String
  usernameContainsFold: String
  """
  avatar_url field predicates
  """
  avatarURL: String
  avatarURLNEQ: String
  avatarURLIn: [String!]
  avatarURLNotIn: [String!]
  avatarURLGT: String
  avatarURLGTE: String
  avatarURLLT: String
  avatarURLLTE: String
  avatarURLContains: String
  avatarURLHasPrefix: String
  avatarURLHasSuffix: String
  avatarURLIsNil: Boolean
  avatarURLNotNil: Boolean
  avatarURLEqualFold: String
  avatarURLContainsFold: String
  """
  disabled field predicates
  """
  disabled: Boolean
  disabledNEQ: Boolean
  """
  is_admin field predicates
  """
  isAdmin: Boolean
  isAdminNEQ: Boolean
  """
  is_ceo field predicates
  """
  isCeo: Boolean
  isCeoNEQ: Boolean
  """
  is_super_admin field predicates
  """
  isSuperAdmin: Boolean
  isSuperAdminNEQ: Boolean
  """
  has_map_access field predicates
  """
  hasMapAccess: Boolean
  hasMapAccessNEQ: Boolean
  """
  has_edit_access field predicates
  """
  hasEditAccess: Boolean
  hasEditAccessNEQ: Boolean
  """
  leader_id field predicates
  """
  leaderID: ID
  leaderIDNEQ: ID
  leaderIDIn: [ID!]
  leaderIDNotIn: [ID!]
  leaderIDGT: ID
  leaderIDGTE: ID
  leaderIDLT: ID
  leaderIDLTE: ID
  leaderIDContains: ID
  leaderIDHasPrefix: ID
  leaderIDHasSuffix: ID
  leaderIDIsNil: Boolean
  leaderIDNotNil: Boolean
  leaderIDEqualFold: ID
  leaderIDContainsFold: ID
  """
  areas edge predicates
  """
  hasAreas: Boolean
  hasAreasWith: [AreaWhereInput!]
  """
  customers edge predicates
  """
  hasCustomers: Boolean
  hasCustomersWith: [CustomerWhereInput!]
  """
  leader edge predicates
  """
  hasLeader: Boolean
  hasLeaderWith: [UserWhereInput!]
  """
  team_members edge predicates
  """
  hasTeamMembers: Boolean
  hasTeamMembersWith: [UserWhereInput!]
  """
  tenders edge predicates
  """
  hasTenders: Boolean
  hasTendersWith: [TenderWhereInput!]
  """
  visit_records edge predicates
  """
  hasVisitRecords: Boolean
  hasVisitRecordsWith: [VisitRecordWhereInput!]
  """
  projects edge predicates
  """
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
}
type VisitRecord implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  visitType: Int!
  commPeople: String!
  commContent: String!
  nextStep: String
  date: Time!
  tenderID: ID
  customerID: ID!
  tender: Tender
  customer: Customer!
  followupbys(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection! @goField(name: "FollowUpBys", forceResolver: false)
}
"""
A connection to a list of items.
"""
type VisitRecordConnection {
  """
  A list of edges.
  """
  edges: [VisitRecordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type VisitRecordEdge {
  """
  The item at the end of the edge.
  """
  node: VisitRecord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for VisitRecord connections
"""
input VisitRecordOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order VisitRecords.
  """
  field: VisitRecordOrderField!
}
"""
Properties by which VisitRecord connections can be ordered.
"""
enum VisitRecordOrderField {
  CREATED_AT
  DATE
}
"""
VisitRecordWhereInput is used for filtering VisitRecord objects.
Input was generated by ent.
"""
input VisitRecordWhereInput {
  not: VisitRecordWhereInput
  and: [VisitRecordWhereInput!]
  or: [VisitRecordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  visit_type field predicates
  """
  visitType: Int
  visitTypeNEQ: Int
  visitTypeIn: [Int!]
  visitTypeNotIn: [Int!]
  visitTypeGT: Int
  visitTypeGTE: Int
  visitTypeLT: Int
  visitTypeLTE: Int
  """
  comm_people field predicates
  """
  commPeople: String
  commPeopleNEQ: String
  commPeopleIn: [String!]
  commPeopleNotIn: [String!]
  commPeopleGT: String
  commPeopleGTE: String
  commPeopleLT: String
  commPeopleLTE: String
  commPeopleContains: String
  commPeopleHasPrefix: String
  commPeopleHasSuffix: String
  commPeopleEqualFold: String
  commPeopleContainsFold: String
  """
  comm_content field predicates
  """
  commContent: String
  commContentNEQ: String
  commContentIn: [String!]
  commContentNotIn: [String!]
  commContentGT: String
  commContentGTE: String
  commContentLT: String
  commContentLTE: String
  commContentContains: String
  commContentHasPrefix: String
  commContentHasSuffix: String
  commContentEqualFold: String
  commContentContainsFold: String
  """
  next_step field predicates
  """
  nextStep: String
  nextStepNEQ: String
  nextStepIn: [String!]
  nextStepNotIn: [String!]
  nextStepGT: String
  nextStepGTE: String
  nextStepLT: String
  nextStepLTE: String
  nextStepContains: String
  nextStepHasPrefix: String
  nextStepHasSuffix: String
  nextStepIsNil: Boolean
  nextStepNotNil: Boolean
  nextStepEqualFold: String
  nextStepContainsFold: String
  """
  date field predicates
  """
  date: Time
  dateNEQ: Time
  dateIn: [Time!]
  dateNotIn: [Time!]
  dateGT: Time
  dateGTE: Time
  dateLT: Time
  dateLTE: Time
  """
  tender_id field predicates
  """
  tenderID: ID
  tenderIDNEQ: ID
  tenderIDIn: [ID!]
  tenderIDNotIn: [ID!]
  tenderIDGT: ID
  tenderIDGTE: ID
  tenderIDLT: ID
  tenderIDLTE: ID
  tenderIDContains: ID
  tenderIDHasPrefix: ID
  tenderIDHasSuffix: ID
  tenderIDIsNil: Boolean
  tenderIDNotNil: Boolean
  tenderIDEqualFold: ID
  tenderIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: ID
  customerIDNEQ: ID
  customerIDIn: [ID!]
  customerIDNotIn: [ID!]
  customerIDGT: ID
  customerIDGTE: ID
  customerIDLT: ID
  customerIDLTE: ID
  customerIDContains: ID
  customerIDHasPrefix: ID
  customerIDHasSuffix: ID
  customerIDEqualFold: ID
  customerIDContainsFold: ID
  """
  tender edge predicates
  """
  hasTender: Boolean
  hasTenderWith: [TenderWhereInput!]
  """
  customer edge predicates
  """
  hasCustomer: Boolean
  hasCustomerWith: [CustomerWhereInput!]
  """
  followUpBys edge predicates
  """
  hasFollowUpBys: Boolean
  hasFollowUpBysWith: [UserWhereInput!]
}
