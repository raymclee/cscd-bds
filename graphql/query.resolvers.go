package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"cscd-bds/store/ent"
	"cscd-bds/store/ent/area"
	"cscd-bds/store/ent/schema/xid"
	"cscd-bds/store/ent/tender"
	"fmt"
	"time"
)

// LastAvailableTenderCode is the resolver for the lastAvailableTenderCode field.
func (r *queryResolver) LastAvailableTenderCode(ctx context.Context, areaID xid.ID, date time.Time) (string, error) {
	stdate := time.Date(date.Year(), date.Month()-1, date.Day(), 0, 0, 0, 0, time.Local)
	enddate := stdate.AddDate(0, 0, 1)
	area, err := r.store.Area.Query().
		Where(area.ID(areaID)).
		WithTenders(func(tq *ent.TenderQuery) {
			tq.Where(
				tender.CreatedAtLTE(enddate),
				tender.CreatedAtGTE(stdate),
			)
		}).
		Only(ctx)
	if err != nil {
		return "", err
	}
	return fmt.Sprintf("%s%s%03d", area.Code, date.Format("20060102"), len(area.Edges.Tenders)+1), nil
}
