package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"cscd-bds/graphql/model"
	"cscd-bds/session"
	"cscd-bds/store/ent/user"
	"fmt"
)

// Session is the resolver for the session field.
func (r *queryResolver) Session(ctx context.Context) (*model.Session, error) {
	su, ok := r.session.Get(ctx, "user").(session.User)
	if !ok {
		return nil, fmt.Errorf("session not found")
	}
	u, err := r.store.User.Query().Where(user.Username(su.Username)).Only(ctx)
	if err != nil {
		return nil, fmt.Errorf("user not found")
	}
	return &model.Session{
		UserID:    su.UserId,
		Name:      su.Name,
		Email:     su.Email,
		Username:  su.Username,
		AvatarURL: su.AvatarUrl,
		// IsAdmin:   su.IsAdmin,
		// IsLeader:  su.IsLeader,
		IsAdmin:  u.IsAdmin,
		IsLeader: u.IsLeader,
	}, nil
}
