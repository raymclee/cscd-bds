package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"cscd-bds/graphql/model"
	"cscd-bds/session"
	"cscd-bds/store/ent/schema/xid"
	"fmt"
)

// Session is the resolver for the session field.
func (r *queryResolver) Session(ctx context.Context) (*model.Session, error) {
	su, ok := r.session.Get(ctx, "user").(session.User)
	if !ok {
		return nil, fmt.Errorf("session not found")
	}
	u, err := r.store.User.Get(ctx, xid.ID(su.UserId))
	if err != nil {
		return nil, fmt.Errorf("session not found")
	}
	if err := r.session.RenewToken(ctx); err != nil {
		return nil, err
	}
	return &model.Session{
		UserID:        su.UserId,
		Name:          su.Name,
		Email:         su.Email,
		Username:      su.Username,
		AvatarURL:     su.AvatarUrl,
		IsCeo:         u.IsCeo,
		IsAdmin:       u.IsAdmin,
		IsSuperAdmin:  u.IsSuperAdmin,
		HasMapAccess:  u.HasMapAccess,
		HasEditAccess: u.HasEditAccess,
	}, nil
}
