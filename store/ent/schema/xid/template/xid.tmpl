{{ define "xid" }}

{{ $pkg := base $.Config.Package }}
{{ template "header" $ }}

// prefixMap maps xid prefixes to table names.
var prefixMap = map[xid.ID]string{
	{{- range $node := $.Nodes }}
		{{- if $annotation := $node.Annotations.XID }}
		 {V: "{{ $annotation.Prefix }}"}	: {{ $node.Package }}.Table,
		{{- end }}
	{{- end }}
}



// IDToType maps a xid.ID to the underlying table.
func IDToType(ctx context.Context, id xid.ID) (string, error) {
	if len(id.V) < 2 {
		return "", fmt.Errorf("IDToType: id too short")
	}
	p := xid.ID{V: id.V[:2]}
	typ := prefixMap[p]
	if typ == "" {
		return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", p.V)
	}
	return typ, nil
}

{{ end }}