// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"cscd-bds/store/ent/area"
	"cscd-bds/store/ent/city"
	"cscd-bds/store/ent/competitor"
	"cscd-bds/store/ent/country"
	"cscd-bds/store/ent/customer"
	"cscd-bds/store/ent/district"
	"cscd-bds/store/ent/operation"
	"cscd-bds/store/ent/plot"
	"cscd-bds/store/ent/province"
	"cscd-bds/store/ent/schema/xid"
	"cscd-bds/store/ent/tender"
	"cscd-bds/store/ent/user"
	"cscd-bds/store/ent/visitrecord"
	"fmt"
)

// prefixMap maps xid prefixes to table names.
var prefixMap = map[xid.ID]string{
	"AR": area.Table,
	"CI": city.Table,
	"CP": competitor.Table,
	"CO": country.Table,
	"CU": customer.Table,
	"DI": district.Table,
	"OP": operation.Table,
	"PL": plot.Table,
	"PR": province.Table,
	"TE": tender.Table,
	"US": user.Table,
	"VR": visitrecord.Table,
}

// IDToType maps a xid.ID to the underlying table.
func IDToType(ctx context.Context, id xid.ID) (string, error) {
	if len(id) < 2 {
		return "", fmt.Errorf("IDToType: id too short")
	}
	prefix := id[:2]
	typ := prefixMap[prefix]
	if typ == "" {
		return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", prefix)
	}
	return typ, nil
}
