// Code generated by ent, DO NOT EDIT.

package tenderprofile

import (
	"cscd-bds/store/ent/predicate"
	"cscd-bds/store/ent/schema/xid"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldUpdatedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldStatus, v))
}

// ApprovalStatus applies equality check predicate on the "approval_status" field. It's identical to ApprovalStatusEQ.
func ApprovalStatus(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApprovalStatus, v))
}

// ApprovalMsgID applies equality check predicate on the "approval_msg_id" field. It's identical to ApprovalMsgIDEQ.
func ApprovalMsgID(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApprovalMsgID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldName, v))
}

// EstimatedAmount applies equality check predicate on the "estimated_amount" field. It's identical to EstimatedAmountEQ.
func EstimatedAmount(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedAmount, v))
}

// TenderDate applies equality check predicate on the "tender_date" field. It's identical to TenderDateEQ.
func TenderDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderDate, v))
}

// Classify applies equality check predicate on the "classify" field. It's identical to ClassifyEQ.
func Classify(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldClassify, v))
}

// DiscoveryDate applies equality check predicate on the "discovery_date" field. It's identical to DiscoveryDateEQ.
func DiscoveryDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDiscoveryDate, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldAddress, v))
}

// FullAddress applies equality check predicate on the "full_address" field. It's identical to FullAddressEQ.
func FullAddress(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFullAddress, v))
}

// Contractor applies equality check predicate on the "contractor" field. It's identical to ContractorEQ.
func Contractor(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldContractor, v))
}

// LevelInvolved applies equality check predicate on the "level_involved" field. It's identical to LevelInvolvedEQ.
func LevelInvolved(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldLevelInvolved, v))
}

// SizeAndValueRating applies equality check predicate on the "size_and_value_rating" field. It's identical to SizeAndValueRatingEQ.
func SizeAndValueRating(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingOverview applies equality check predicate on the "size_and_value_rating_overview" field. It's identical to SizeAndValueRatingOverviewEQ.
func SizeAndValueRatingOverview(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldSizeAndValueRatingOverview, v))
}

// CreditAndPaymentRating applies equality check predicate on the "credit_and_payment_rating" field. It's identical to CreditAndPaymentRatingEQ.
func CreditAndPaymentRating(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingOverview applies equality check predicate on the "credit_and_payment_rating_overview" field. It's identical to CreditAndPaymentRatingOverviewEQ.
func CreditAndPaymentRatingOverview(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreditAndPaymentRatingOverview, v))
}

// TimeLimitRating applies equality check predicate on the "time_limit_rating" field. It's identical to TimeLimitRatingEQ.
func TimeLimitRating(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTimeLimitRating, v))
}

// TimeLimitRatingOverview applies equality check predicate on the "time_limit_rating_overview" field. It's identical to TimeLimitRatingOverviewEQ.
func TimeLimitRatingOverview(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTimeLimitRatingOverview, v))
}

// CustomerRelationshipRating applies equality check predicate on the "customer_relationship_rating" field. It's identical to CustomerRelationshipRatingEQ.
func CustomerRelationshipRating(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingOverview applies equality check predicate on the "customer_relationship_rating_overview" field. It's identical to CustomerRelationshipRatingOverviewEQ.
func CustomerRelationshipRatingOverview(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerRelationshipRatingOverview, v))
}

// CompetitivePartnershipRating applies equality check predicate on the "competitive_partnership_rating" field. It's identical to CompetitivePartnershipRatingEQ.
func CompetitivePartnershipRating(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingOverview applies equality check predicate on the "competitive_partnership_rating_overview" field. It's identical to CompetitivePartnershipRatingOverviewEQ.
func CompetitivePartnershipRatingOverview(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitivePartnershipRatingOverview, v))
}

// PrepareToBid applies equality check predicate on the "prepare_to_bid" field. It's identical to PrepareToBidEQ.
func PrepareToBid(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldPrepareToBid, v))
}

// ProjectCode applies equality check predicate on the "project_code" field. It's identical to ProjectCodeEQ.
func ProjectCode(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectCode, v))
}

// ProjectType applies equality check predicate on the "project_type" field. It's identical to ProjectTypeEQ.
func ProjectType(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectType, v))
}

// ProjectDefinition applies equality check predicate on the "project_definition" field. It's identical to ProjectDefinitionEQ.
func ProjectDefinition(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectDefinition, v))
}

// EstimatedProjectStartDate applies equality check predicate on the "estimated_project_start_date" field. It's identical to EstimatedProjectStartDateEQ.
func EstimatedProjectStartDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectEndDate applies equality check predicate on the "estimated_project_end_date" field. It's identical to EstimatedProjectEndDateEQ.
func EstimatedProjectEndDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedProjectEndDate, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldRemark, v))
}

// TenderSituations applies equality check predicate on the "tender_situations" field. It's identical to TenderSituationsEQ.
func TenderSituations(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderSituations, v))
}

// OwnerSituations applies equality check predicate on the "owner_situations" field. It's identical to OwnerSituationsEQ.
func OwnerSituations(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldOwnerSituations, v))
}

// BiddingInstructions applies equality check predicate on the "bidding_instructions" field. It's identical to BiddingInstructionsEQ.
func BiddingInstructions(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldBiddingInstructions, v))
}

// CompetitorSituations applies equality check predicate on the "competitor_situations" field. It's identical to CompetitorSituationsEQ.
func CompetitorSituations(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitorSituations, v))
}

// CostEngineer applies equality check predicate on the "cost_engineer" field. It's identical to CostEngineerEQ.
func CostEngineer(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCostEngineer, v))
}

// TenderForm applies equality check predicate on the "tender_form" field. It's identical to TenderFormEQ.
func TenderForm(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderForm, v))
}

// ContractForm applies equality check predicate on the "contract_form" field. It's identical to ContractFormEQ.
func ContractForm(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldContractForm, v))
}

// ManagementCompany applies equality check predicate on the "management_company" field. It's identical to ManagementCompanyEQ.
func ManagementCompany(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldManagementCompany, v))
}

// TenderingAgency applies equality check predicate on the "tendering_agency" field. It's identical to TenderingAgencyEQ.
func TenderingAgency(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderingAgency, v))
}

// BiddingDate applies equality check predicate on the "bidding_date" field. It's identical to BiddingDateEQ.
func BiddingDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldBiddingDate, v))
}

// FacadeConsultant applies equality check predicate on the "facade_consultant" field. It's identical to FacadeConsultantEQ.
func FacadeConsultant(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFacadeConsultant, v))
}

// DesignUnit applies equality check predicate on the "design_unit" field. It's identical to DesignUnitEQ.
func DesignUnit(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDesignUnit, v))
}

// ConsultingFirm applies equality check predicate on the "consulting_firm" field. It's identical to ConsultingFirmEQ.
func ConsultingFirm(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldConsultingFirm, v))
}

// KeyProject applies equality check predicate on the "key_project" field. It's identical to KeyProjectEQ.
func KeyProject(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldKeyProject, v))
}

// CurrentProgress applies equality check predicate on the "current_progress" field. It's identical to CurrentProgressEQ.
func CurrentProgress(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCurrentProgress, v))
}

// TenderWinCompany applies equality check predicate on the "tender_win_company" field. It's identical to TenderWinCompanyEQ.
func TenderWinCompany(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinCompany, v))
}

// TenderCode applies equality check predicate on the "tender_code" field. It's identical to TenderCodeEQ.
func TenderCode(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderCode, v))
}

// Architect applies equality check predicate on the "architect" field. It's identical to ArchitectEQ.
func Architect(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldArchitect, v))
}

// Developer applies equality check predicate on the "developer" field. It's identical to DeveloperEQ.
func Developer(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDeveloper, v))
}

// TenderClosingDate applies equality check predicate on the "tender_closing_date" field. It's identical to TenderClosingDateEQ.
func TenderClosingDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderClosingDate, v))
}

// ConstructionArea applies equality check predicate on the "construction_area" field. It's identical to ConstructionAreaEQ.
func ConstructionArea(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldConstructionArea, v))
}

// TenderWinDate applies equality check predicate on the "tender_win_date" field. It's identical to TenderWinDateEQ.
func TenderWinDate(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinDate, v))
}

// TenderWinAmount applies equality check predicate on the "tender_win_amount" field. It's identical to TenderWinAmountEQ.
func TenderWinAmount(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinAmount, v))
}

// LastTenderAmount applies equality check predicate on the "last_tender_amount" field. It's identical to LastTenderAmountEQ.
func LastTenderAmount(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldLastTenderAmount, v))
}

// TenderID applies equality check predicate on the "tender_id" field. It's identical to TenderIDEQ.
func TenderID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderID, v))
}

// ProvinceID applies equality check predicate on the "province_id" field. It's identical to ProvinceIDEQ.
func ProvinceID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProvinceID, v))
}

// CityID applies equality check predicate on the "city_id" field. It's identical to CityIDEQ.
func CityID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCityID, v))
}

// DistrictID applies equality check predicate on the "district_id" field. It's identical to DistrictIDEQ.
func DistrictID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDistrictID, v))
}

// CustomerID applies equality check predicate on the "customer_id" field. It's identical to CustomerIDEQ.
func CustomerID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerID, v))
}

// FinderID applies equality check predicate on the "finder_id" field. It's identical to FinderIDEQ.
func FinderID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFinderID, v))
}

// CreatedByID applies equality check predicate on the "created_by_id" field. It's identical to CreatedByIDEQ.
func CreatedByID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreatedByID, v))
}

// ApproverID applies equality check predicate on the "approver_id" field. It's identical to ApproverIDEQ.
func ApproverID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApproverID, v))
}

// UpdatedByID applies equality check predicate on the "updated_by_id" field. It's identical to UpdatedByIDEQ.
func UpdatedByID(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldUpdatedByID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldUpdatedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldStatus, v))
}

// ApprovalStatusEQ applies the EQ predicate on the "approval_status" field.
func ApprovalStatusEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApprovalStatus, v))
}

// ApprovalStatusNEQ applies the NEQ predicate on the "approval_status" field.
func ApprovalStatusNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldApprovalStatus, v))
}

// ApprovalStatusIn applies the In predicate on the "approval_status" field.
func ApprovalStatusIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldApprovalStatus, vs...))
}

// ApprovalStatusNotIn applies the NotIn predicate on the "approval_status" field.
func ApprovalStatusNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldApprovalStatus, vs...))
}

// ApprovalStatusGT applies the GT predicate on the "approval_status" field.
func ApprovalStatusGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldApprovalStatus, v))
}

// ApprovalStatusGTE applies the GTE predicate on the "approval_status" field.
func ApprovalStatusGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldApprovalStatus, v))
}

// ApprovalStatusLT applies the LT predicate on the "approval_status" field.
func ApprovalStatusLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldApprovalStatus, v))
}

// ApprovalStatusLTE applies the LTE predicate on the "approval_status" field.
func ApprovalStatusLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldApprovalStatus, v))
}

// ApprovalMsgIDEQ applies the EQ predicate on the "approval_msg_id" field.
func ApprovalMsgIDEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApprovalMsgID, v))
}

// ApprovalMsgIDNEQ applies the NEQ predicate on the "approval_msg_id" field.
func ApprovalMsgIDNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldApprovalMsgID, v))
}

// ApprovalMsgIDIn applies the In predicate on the "approval_msg_id" field.
func ApprovalMsgIDIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldApprovalMsgID, vs...))
}

// ApprovalMsgIDNotIn applies the NotIn predicate on the "approval_msg_id" field.
func ApprovalMsgIDNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldApprovalMsgID, vs...))
}

// ApprovalMsgIDGT applies the GT predicate on the "approval_msg_id" field.
func ApprovalMsgIDGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldApprovalMsgID, v))
}

// ApprovalMsgIDGTE applies the GTE predicate on the "approval_msg_id" field.
func ApprovalMsgIDGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldApprovalMsgID, v))
}

// ApprovalMsgIDLT applies the LT predicate on the "approval_msg_id" field.
func ApprovalMsgIDLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldApprovalMsgID, v))
}

// ApprovalMsgIDLTE applies the LTE predicate on the "approval_msg_id" field.
func ApprovalMsgIDLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldApprovalMsgID, v))
}

// ApprovalMsgIDContains applies the Contains predicate on the "approval_msg_id" field.
func ApprovalMsgIDContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldApprovalMsgID, v))
}

// ApprovalMsgIDHasPrefix applies the HasPrefix predicate on the "approval_msg_id" field.
func ApprovalMsgIDHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldApprovalMsgID, v))
}

// ApprovalMsgIDHasSuffix applies the HasSuffix predicate on the "approval_msg_id" field.
func ApprovalMsgIDHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldApprovalMsgID, v))
}

// ApprovalMsgIDIsNil applies the IsNil predicate on the "approval_msg_id" field.
func ApprovalMsgIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldApprovalMsgID))
}

// ApprovalMsgIDNotNil applies the NotNil predicate on the "approval_msg_id" field.
func ApprovalMsgIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldApprovalMsgID))
}

// ApprovalMsgIDEqualFold applies the EqualFold predicate on the "approval_msg_id" field.
func ApprovalMsgIDEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldApprovalMsgID, v))
}

// ApprovalMsgIDContainsFold applies the ContainsFold predicate on the "approval_msg_id" field.
func ApprovalMsgIDContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldApprovalMsgID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldName, v))
}

// EstimatedAmountEQ applies the EQ predicate on the "estimated_amount" field.
func EstimatedAmountEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedAmount, v))
}

// EstimatedAmountNEQ applies the NEQ predicate on the "estimated_amount" field.
func EstimatedAmountNEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldEstimatedAmount, v))
}

// EstimatedAmountIn applies the In predicate on the "estimated_amount" field.
func EstimatedAmountIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldEstimatedAmount, vs...))
}

// EstimatedAmountNotIn applies the NotIn predicate on the "estimated_amount" field.
func EstimatedAmountNotIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldEstimatedAmount, vs...))
}

// EstimatedAmountGT applies the GT predicate on the "estimated_amount" field.
func EstimatedAmountGT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldEstimatedAmount, v))
}

// EstimatedAmountGTE applies the GTE predicate on the "estimated_amount" field.
func EstimatedAmountGTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldEstimatedAmount, v))
}

// EstimatedAmountLT applies the LT predicate on the "estimated_amount" field.
func EstimatedAmountLT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldEstimatedAmount, v))
}

// EstimatedAmountLTE applies the LTE predicate on the "estimated_amount" field.
func EstimatedAmountLTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldEstimatedAmount, v))
}

// EstimatedAmountIsNil applies the IsNil predicate on the "estimated_amount" field.
func EstimatedAmountIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldEstimatedAmount))
}

// EstimatedAmountNotNil applies the NotNil predicate on the "estimated_amount" field.
func EstimatedAmountNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldEstimatedAmount))
}

// TenderDateEQ applies the EQ predicate on the "tender_date" field.
func TenderDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderDate, v))
}

// TenderDateNEQ applies the NEQ predicate on the "tender_date" field.
func TenderDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderDate, v))
}

// TenderDateIn applies the In predicate on the "tender_date" field.
func TenderDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderDate, vs...))
}

// TenderDateNotIn applies the NotIn predicate on the "tender_date" field.
func TenderDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderDate, vs...))
}

// TenderDateGT applies the GT predicate on the "tender_date" field.
func TenderDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderDate, v))
}

// TenderDateGTE applies the GTE predicate on the "tender_date" field.
func TenderDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderDate, v))
}

// TenderDateLT applies the LT predicate on the "tender_date" field.
func TenderDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderDate, v))
}

// TenderDateLTE applies the LTE predicate on the "tender_date" field.
func TenderDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderDate, v))
}

// TenderDateIsNil applies the IsNil predicate on the "tender_date" field.
func TenderDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderDate))
}

// TenderDateNotNil applies the NotNil predicate on the "tender_date" field.
func TenderDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderDate))
}

// ClassifyEQ applies the EQ predicate on the "classify" field.
func ClassifyEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldClassify, v))
}

// ClassifyNEQ applies the NEQ predicate on the "classify" field.
func ClassifyNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldClassify, v))
}

// ClassifyIn applies the In predicate on the "classify" field.
func ClassifyIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldClassify, vs...))
}

// ClassifyNotIn applies the NotIn predicate on the "classify" field.
func ClassifyNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldClassify, vs...))
}

// ClassifyGT applies the GT predicate on the "classify" field.
func ClassifyGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldClassify, v))
}

// ClassifyGTE applies the GTE predicate on the "classify" field.
func ClassifyGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldClassify, v))
}

// ClassifyLT applies the LT predicate on the "classify" field.
func ClassifyLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldClassify, v))
}

// ClassifyLTE applies the LTE predicate on the "classify" field.
func ClassifyLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldClassify, v))
}

// ClassifyIsNil applies the IsNil predicate on the "classify" field.
func ClassifyIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldClassify))
}

// ClassifyNotNil applies the NotNil predicate on the "classify" field.
func ClassifyNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldClassify))
}

// DiscoveryDateEQ applies the EQ predicate on the "discovery_date" field.
func DiscoveryDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDiscoveryDate, v))
}

// DiscoveryDateNEQ applies the NEQ predicate on the "discovery_date" field.
func DiscoveryDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldDiscoveryDate, v))
}

// DiscoveryDateIn applies the In predicate on the "discovery_date" field.
func DiscoveryDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldDiscoveryDate, vs...))
}

// DiscoveryDateNotIn applies the NotIn predicate on the "discovery_date" field.
func DiscoveryDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldDiscoveryDate, vs...))
}

// DiscoveryDateGT applies the GT predicate on the "discovery_date" field.
func DiscoveryDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldDiscoveryDate, v))
}

// DiscoveryDateGTE applies the GTE predicate on the "discovery_date" field.
func DiscoveryDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldDiscoveryDate, v))
}

// DiscoveryDateLT applies the LT predicate on the "discovery_date" field.
func DiscoveryDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldDiscoveryDate, v))
}

// DiscoveryDateLTE applies the LTE predicate on the "discovery_date" field.
func DiscoveryDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldDiscoveryDate, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressIsNil applies the IsNil predicate on the "address" field.
func AddressIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldAddress))
}

// AddressNotNil applies the NotNil predicate on the "address" field.
func AddressNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldAddress))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldAddress, v))
}

// FullAddressEQ applies the EQ predicate on the "full_address" field.
func FullAddressEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFullAddress, v))
}

// FullAddressNEQ applies the NEQ predicate on the "full_address" field.
func FullAddressNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldFullAddress, v))
}

// FullAddressIn applies the In predicate on the "full_address" field.
func FullAddressIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldFullAddress, vs...))
}

// FullAddressNotIn applies the NotIn predicate on the "full_address" field.
func FullAddressNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldFullAddress, vs...))
}

// FullAddressGT applies the GT predicate on the "full_address" field.
func FullAddressGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldFullAddress, v))
}

// FullAddressGTE applies the GTE predicate on the "full_address" field.
func FullAddressGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldFullAddress, v))
}

// FullAddressLT applies the LT predicate on the "full_address" field.
func FullAddressLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldFullAddress, v))
}

// FullAddressLTE applies the LTE predicate on the "full_address" field.
func FullAddressLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldFullAddress, v))
}

// FullAddressContains applies the Contains predicate on the "full_address" field.
func FullAddressContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldFullAddress, v))
}

// FullAddressHasPrefix applies the HasPrefix predicate on the "full_address" field.
func FullAddressHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldFullAddress, v))
}

// FullAddressHasSuffix applies the HasSuffix predicate on the "full_address" field.
func FullAddressHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldFullAddress, v))
}

// FullAddressIsNil applies the IsNil predicate on the "full_address" field.
func FullAddressIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldFullAddress))
}

// FullAddressNotNil applies the NotNil predicate on the "full_address" field.
func FullAddressNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldFullAddress))
}

// FullAddressEqualFold applies the EqualFold predicate on the "full_address" field.
func FullAddressEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldFullAddress, v))
}

// FullAddressContainsFold applies the ContainsFold predicate on the "full_address" field.
func FullAddressContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldFullAddress, v))
}

// ContractorEQ applies the EQ predicate on the "contractor" field.
func ContractorEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldContractor, v))
}

// ContractorNEQ applies the NEQ predicate on the "contractor" field.
func ContractorNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldContractor, v))
}

// ContractorIn applies the In predicate on the "contractor" field.
func ContractorIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldContractor, vs...))
}

// ContractorNotIn applies the NotIn predicate on the "contractor" field.
func ContractorNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldContractor, vs...))
}

// ContractorGT applies the GT predicate on the "contractor" field.
func ContractorGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldContractor, v))
}

// ContractorGTE applies the GTE predicate on the "contractor" field.
func ContractorGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldContractor, v))
}

// ContractorLT applies the LT predicate on the "contractor" field.
func ContractorLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldContractor, v))
}

// ContractorLTE applies the LTE predicate on the "contractor" field.
func ContractorLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldContractor, v))
}

// ContractorContains applies the Contains predicate on the "contractor" field.
func ContractorContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldContractor, v))
}

// ContractorHasPrefix applies the HasPrefix predicate on the "contractor" field.
func ContractorHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldContractor, v))
}

// ContractorHasSuffix applies the HasSuffix predicate on the "contractor" field.
func ContractorHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldContractor, v))
}

// ContractorIsNil applies the IsNil predicate on the "contractor" field.
func ContractorIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldContractor))
}

// ContractorNotNil applies the NotNil predicate on the "contractor" field.
func ContractorNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldContractor))
}

// ContractorEqualFold applies the EqualFold predicate on the "contractor" field.
func ContractorEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldContractor, v))
}

// ContractorContainsFold applies the ContainsFold predicate on the "contractor" field.
func ContractorContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldContractor, v))
}

// LevelInvolvedEQ applies the EQ predicate on the "level_involved" field.
func LevelInvolvedEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldLevelInvolved, v))
}

// LevelInvolvedNEQ applies the NEQ predicate on the "level_involved" field.
func LevelInvolvedNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldLevelInvolved, v))
}

// LevelInvolvedIn applies the In predicate on the "level_involved" field.
func LevelInvolvedIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldLevelInvolved, vs...))
}

// LevelInvolvedNotIn applies the NotIn predicate on the "level_involved" field.
func LevelInvolvedNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldLevelInvolved, vs...))
}

// LevelInvolvedGT applies the GT predicate on the "level_involved" field.
func LevelInvolvedGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldLevelInvolved, v))
}

// LevelInvolvedGTE applies the GTE predicate on the "level_involved" field.
func LevelInvolvedGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldLevelInvolved, v))
}

// LevelInvolvedLT applies the LT predicate on the "level_involved" field.
func LevelInvolvedLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldLevelInvolved, v))
}

// LevelInvolvedLTE applies the LTE predicate on the "level_involved" field.
func LevelInvolvedLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldLevelInvolved, v))
}

// LevelInvolvedIsNil applies the IsNil predicate on the "level_involved" field.
func LevelInvolvedIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldLevelInvolved))
}

// LevelInvolvedNotNil applies the NotNil predicate on the "level_involved" field.
func LevelInvolvedNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldLevelInvolved))
}

// SizeAndValueRatingEQ applies the EQ predicate on the "size_and_value_rating" field.
func SizeAndValueRatingEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingNEQ applies the NEQ predicate on the "size_and_value_rating" field.
func SizeAndValueRatingNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingIn applies the In predicate on the "size_and_value_rating" field.
func SizeAndValueRatingIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldSizeAndValueRating, vs...))
}

// SizeAndValueRatingNotIn applies the NotIn predicate on the "size_and_value_rating" field.
func SizeAndValueRatingNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldSizeAndValueRating, vs...))
}

// SizeAndValueRatingGT applies the GT predicate on the "size_and_value_rating" field.
func SizeAndValueRatingGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingGTE applies the GTE predicate on the "size_and_value_rating" field.
func SizeAndValueRatingGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingLT applies the LT predicate on the "size_and_value_rating" field.
func SizeAndValueRatingLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingLTE applies the LTE predicate on the "size_and_value_rating" field.
func SizeAndValueRatingLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldSizeAndValueRating, v))
}

// SizeAndValueRatingIsNil applies the IsNil predicate on the "size_and_value_rating" field.
func SizeAndValueRatingIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldSizeAndValueRating))
}

// SizeAndValueRatingNotNil applies the NotNil predicate on the "size_and_value_rating" field.
func SizeAndValueRatingNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldSizeAndValueRating))
}

// SizeAndValueRatingOverviewEQ applies the EQ predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewNEQ applies the NEQ predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewIn applies the In predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldSizeAndValueRatingOverview, vs...))
}

// SizeAndValueRatingOverviewNotIn applies the NotIn predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldSizeAndValueRatingOverview, vs...))
}

// SizeAndValueRatingOverviewGT applies the GT predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewGTE applies the GTE predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewLT applies the LT predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewLTE applies the LTE predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewContains applies the Contains predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewHasPrefix applies the HasPrefix predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewHasSuffix applies the HasSuffix predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewIsNil applies the IsNil predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldSizeAndValueRatingOverview))
}

// SizeAndValueRatingOverviewNotNil applies the NotNil predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldSizeAndValueRatingOverview))
}

// SizeAndValueRatingOverviewEqualFold applies the EqualFold predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldSizeAndValueRatingOverview, v))
}

// SizeAndValueRatingOverviewContainsFold applies the ContainsFold predicate on the "size_and_value_rating_overview" field.
func SizeAndValueRatingOverviewContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldSizeAndValueRatingOverview, v))
}

// CreditAndPaymentRatingEQ applies the EQ predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingNEQ applies the NEQ predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingIn applies the In predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCreditAndPaymentRating, vs...))
}

// CreditAndPaymentRatingNotIn applies the NotIn predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCreditAndPaymentRating, vs...))
}

// CreditAndPaymentRatingGT applies the GT predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingGTE applies the GTE predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingLT applies the LT predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingLTE applies the LTE predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCreditAndPaymentRating, v))
}

// CreditAndPaymentRatingIsNil applies the IsNil predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCreditAndPaymentRating))
}

// CreditAndPaymentRatingNotNil applies the NotNil predicate on the "credit_and_payment_rating" field.
func CreditAndPaymentRatingNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCreditAndPaymentRating))
}

// CreditAndPaymentRatingOverviewEQ applies the EQ predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewNEQ applies the NEQ predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewIn applies the In predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCreditAndPaymentRatingOverview, vs...))
}

// CreditAndPaymentRatingOverviewNotIn applies the NotIn predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCreditAndPaymentRatingOverview, vs...))
}

// CreditAndPaymentRatingOverviewGT applies the GT predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewGTE applies the GTE predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewLT applies the LT predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewLTE applies the LTE predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewContains applies the Contains predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewHasPrefix applies the HasPrefix predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewHasSuffix applies the HasSuffix predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewIsNil applies the IsNil predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCreditAndPaymentRatingOverview))
}

// CreditAndPaymentRatingOverviewNotNil applies the NotNil predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCreditAndPaymentRatingOverview))
}

// CreditAndPaymentRatingOverviewEqualFold applies the EqualFold predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCreditAndPaymentRatingOverview, v))
}

// CreditAndPaymentRatingOverviewContainsFold applies the ContainsFold predicate on the "credit_and_payment_rating_overview" field.
func CreditAndPaymentRatingOverviewContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCreditAndPaymentRatingOverview, v))
}

// TimeLimitRatingEQ applies the EQ predicate on the "time_limit_rating" field.
func TimeLimitRatingEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTimeLimitRating, v))
}

// TimeLimitRatingNEQ applies the NEQ predicate on the "time_limit_rating" field.
func TimeLimitRatingNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTimeLimitRating, v))
}

// TimeLimitRatingIn applies the In predicate on the "time_limit_rating" field.
func TimeLimitRatingIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTimeLimitRating, vs...))
}

// TimeLimitRatingNotIn applies the NotIn predicate on the "time_limit_rating" field.
func TimeLimitRatingNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTimeLimitRating, vs...))
}

// TimeLimitRatingGT applies the GT predicate on the "time_limit_rating" field.
func TimeLimitRatingGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTimeLimitRating, v))
}

// TimeLimitRatingGTE applies the GTE predicate on the "time_limit_rating" field.
func TimeLimitRatingGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTimeLimitRating, v))
}

// TimeLimitRatingLT applies the LT predicate on the "time_limit_rating" field.
func TimeLimitRatingLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTimeLimitRating, v))
}

// TimeLimitRatingLTE applies the LTE predicate on the "time_limit_rating" field.
func TimeLimitRatingLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTimeLimitRating, v))
}

// TimeLimitRatingIsNil applies the IsNil predicate on the "time_limit_rating" field.
func TimeLimitRatingIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTimeLimitRating))
}

// TimeLimitRatingNotNil applies the NotNil predicate on the "time_limit_rating" field.
func TimeLimitRatingNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTimeLimitRating))
}

// TimeLimitRatingOverviewEQ applies the EQ predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewNEQ applies the NEQ predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewIn applies the In predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTimeLimitRatingOverview, vs...))
}

// TimeLimitRatingOverviewNotIn applies the NotIn predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTimeLimitRatingOverview, vs...))
}

// TimeLimitRatingOverviewGT applies the GT predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewGTE applies the GTE predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewLT applies the LT predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewLTE applies the LTE predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewContains applies the Contains predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewHasPrefix applies the HasPrefix predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewHasSuffix applies the HasSuffix predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewIsNil applies the IsNil predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTimeLimitRatingOverview))
}

// TimeLimitRatingOverviewNotNil applies the NotNil predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTimeLimitRatingOverview))
}

// TimeLimitRatingOverviewEqualFold applies the EqualFold predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTimeLimitRatingOverview, v))
}

// TimeLimitRatingOverviewContainsFold applies the ContainsFold predicate on the "time_limit_rating_overview" field.
func TimeLimitRatingOverviewContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTimeLimitRatingOverview, v))
}

// CustomerRelationshipRatingEQ applies the EQ predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingNEQ applies the NEQ predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingIn applies the In predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCustomerRelationshipRating, vs...))
}

// CustomerRelationshipRatingNotIn applies the NotIn predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCustomerRelationshipRating, vs...))
}

// CustomerRelationshipRatingGT applies the GT predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingGTE applies the GTE predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingLT applies the LT predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingLTE applies the LTE predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCustomerRelationshipRating, v))
}

// CustomerRelationshipRatingIsNil applies the IsNil predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCustomerRelationshipRating))
}

// CustomerRelationshipRatingNotNil applies the NotNil predicate on the "customer_relationship_rating" field.
func CustomerRelationshipRatingNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCustomerRelationshipRating))
}

// CustomerRelationshipRatingOverviewEQ applies the EQ predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewNEQ applies the NEQ predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewIn applies the In predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCustomerRelationshipRatingOverview, vs...))
}

// CustomerRelationshipRatingOverviewNotIn applies the NotIn predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCustomerRelationshipRatingOverview, vs...))
}

// CustomerRelationshipRatingOverviewGT applies the GT predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewGTE applies the GTE predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewLT applies the LT predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewLTE applies the LTE predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewContains applies the Contains predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewHasPrefix applies the HasPrefix predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewHasSuffix applies the HasSuffix predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewIsNil applies the IsNil predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCustomerRelationshipRatingOverview))
}

// CustomerRelationshipRatingOverviewNotNil applies the NotNil predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCustomerRelationshipRatingOverview))
}

// CustomerRelationshipRatingOverviewEqualFold applies the EqualFold predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCustomerRelationshipRatingOverview, v))
}

// CustomerRelationshipRatingOverviewContainsFold applies the ContainsFold predicate on the "customer_relationship_rating_overview" field.
func CustomerRelationshipRatingOverviewContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCustomerRelationshipRatingOverview, v))
}

// CompetitivePartnershipRatingEQ applies the EQ predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingNEQ applies the NEQ predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingNEQ(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingIn applies the In predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCompetitivePartnershipRating, vs...))
}

// CompetitivePartnershipRatingNotIn applies the NotIn predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingNotIn(vs ...int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCompetitivePartnershipRating, vs...))
}

// CompetitivePartnershipRatingGT applies the GT predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingGT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingGTE applies the GTE predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingGTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingLT applies the LT predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingLT(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingLTE applies the LTE predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingLTE(v int) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCompetitivePartnershipRating, v))
}

// CompetitivePartnershipRatingIsNil applies the IsNil predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCompetitivePartnershipRating))
}

// CompetitivePartnershipRatingNotNil applies the NotNil predicate on the "competitive_partnership_rating" field.
func CompetitivePartnershipRatingNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCompetitivePartnershipRating))
}

// CompetitivePartnershipRatingOverviewEQ applies the EQ predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewNEQ applies the NEQ predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewIn applies the In predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCompetitivePartnershipRatingOverview, vs...))
}

// CompetitivePartnershipRatingOverviewNotIn applies the NotIn predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCompetitivePartnershipRatingOverview, vs...))
}

// CompetitivePartnershipRatingOverviewGT applies the GT predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewGTE applies the GTE predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewLT applies the LT predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewLTE applies the LTE predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewContains applies the Contains predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewHasPrefix applies the HasPrefix predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewHasSuffix applies the HasSuffix predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewIsNil applies the IsNil predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCompetitivePartnershipRatingOverview))
}

// CompetitivePartnershipRatingOverviewNotNil applies the NotNil predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCompetitivePartnershipRatingOverview))
}

// CompetitivePartnershipRatingOverviewEqualFold applies the EqualFold predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCompetitivePartnershipRatingOverview, v))
}

// CompetitivePartnershipRatingOverviewContainsFold applies the ContainsFold predicate on the "competitive_partnership_rating_overview" field.
func CompetitivePartnershipRatingOverviewContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCompetitivePartnershipRatingOverview, v))
}

// PrepareToBidEQ applies the EQ predicate on the "prepare_to_bid" field.
func PrepareToBidEQ(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldPrepareToBid, v))
}

// PrepareToBidNEQ applies the NEQ predicate on the "prepare_to_bid" field.
func PrepareToBidNEQ(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldPrepareToBid, v))
}

// ProjectCodeEQ applies the EQ predicate on the "project_code" field.
func ProjectCodeEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectCode, v))
}

// ProjectCodeNEQ applies the NEQ predicate on the "project_code" field.
func ProjectCodeNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldProjectCode, v))
}

// ProjectCodeIn applies the In predicate on the "project_code" field.
func ProjectCodeIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldProjectCode, vs...))
}

// ProjectCodeNotIn applies the NotIn predicate on the "project_code" field.
func ProjectCodeNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldProjectCode, vs...))
}

// ProjectCodeGT applies the GT predicate on the "project_code" field.
func ProjectCodeGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldProjectCode, v))
}

// ProjectCodeGTE applies the GTE predicate on the "project_code" field.
func ProjectCodeGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldProjectCode, v))
}

// ProjectCodeLT applies the LT predicate on the "project_code" field.
func ProjectCodeLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldProjectCode, v))
}

// ProjectCodeLTE applies the LTE predicate on the "project_code" field.
func ProjectCodeLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldProjectCode, v))
}

// ProjectCodeContains applies the Contains predicate on the "project_code" field.
func ProjectCodeContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldProjectCode, v))
}

// ProjectCodeHasPrefix applies the HasPrefix predicate on the "project_code" field.
func ProjectCodeHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldProjectCode, v))
}

// ProjectCodeHasSuffix applies the HasSuffix predicate on the "project_code" field.
func ProjectCodeHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldProjectCode, v))
}

// ProjectCodeIsNil applies the IsNil predicate on the "project_code" field.
func ProjectCodeIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldProjectCode))
}

// ProjectCodeNotNil applies the NotNil predicate on the "project_code" field.
func ProjectCodeNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldProjectCode))
}

// ProjectCodeEqualFold applies the EqualFold predicate on the "project_code" field.
func ProjectCodeEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldProjectCode, v))
}

// ProjectCodeContainsFold applies the ContainsFold predicate on the "project_code" field.
func ProjectCodeContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldProjectCode, v))
}

// ProjectTypeEQ applies the EQ predicate on the "project_type" field.
func ProjectTypeEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectType, v))
}

// ProjectTypeNEQ applies the NEQ predicate on the "project_type" field.
func ProjectTypeNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldProjectType, v))
}

// ProjectTypeIn applies the In predicate on the "project_type" field.
func ProjectTypeIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldProjectType, vs...))
}

// ProjectTypeNotIn applies the NotIn predicate on the "project_type" field.
func ProjectTypeNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldProjectType, vs...))
}

// ProjectTypeGT applies the GT predicate on the "project_type" field.
func ProjectTypeGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldProjectType, v))
}

// ProjectTypeGTE applies the GTE predicate on the "project_type" field.
func ProjectTypeGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldProjectType, v))
}

// ProjectTypeLT applies the LT predicate on the "project_type" field.
func ProjectTypeLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldProjectType, v))
}

// ProjectTypeLTE applies the LTE predicate on the "project_type" field.
func ProjectTypeLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldProjectType, v))
}

// ProjectTypeContains applies the Contains predicate on the "project_type" field.
func ProjectTypeContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldProjectType, v))
}

// ProjectTypeHasPrefix applies the HasPrefix predicate on the "project_type" field.
func ProjectTypeHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldProjectType, v))
}

// ProjectTypeHasSuffix applies the HasSuffix predicate on the "project_type" field.
func ProjectTypeHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldProjectType, v))
}

// ProjectTypeIsNil applies the IsNil predicate on the "project_type" field.
func ProjectTypeIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldProjectType))
}

// ProjectTypeNotNil applies the NotNil predicate on the "project_type" field.
func ProjectTypeNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldProjectType))
}

// ProjectTypeEqualFold applies the EqualFold predicate on the "project_type" field.
func ProjectTypeEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldProjectType, v))
}

// ProjectTypeContainsFold applies the ContainsFold predicate on the "project_type" field.
func ProjectTypeContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldProjectType, v))
}

// ProjectDefinitionEQ applies the EQ predicate on the "project_definition" field.
func ProjectDefinitionEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProjectDefinition, v))
}

// ProjectDefinitionNEQ applies the NEQ predicate on the "project_definition" field.
func ProjectDefinitionNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldProjectDefinition, v))
}

// ProjectDefinitionIn applies the In predicate on the "project_definition" field.
func ProjectDefinitionIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldProjectDefinition, vs...))
}

// ProjectDefinitionNotIn applies the NotIn predicate on the "project_definition" field.
func ProjectDefinitionNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldProjectDefinition, vs...))
}

// ProjectDefinitionGT applies the GT predicate on the "project_definition" field.
func ProjectDefinitionGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldProjectDefinition, v))
}

// ProjectDefinitionGTE applies the GTE predicate on the "project_definition" field.
func ProjectDefinitionGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldProjectDefinition, v))
}

// ProjectDefinitionLT applies the LT predicate on the "project_definition" field.
func ProjectDefinitionLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldProjectDefinition, v))
}

// ProjectDefinitionLTE applies the LTE predicate on the "project_definition" field.
func ProjectDefinitionLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldProjectDefinition, v))
}

// ProjectDefinitionContains applies the Contains predicate on the "project_definition" field.
func ProjectDefinitionContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldProjectDefinition, v))
}

// ProjectDefinitionHasPrefix applies the HasPrefix predicate on the "project_definition" field.
func ProjectDefinitionHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldProjectDefinition, v))
}

// ProjectDefinitionHasSuffix applies the HasSuffix predicate on the "project_definition" field.
func ProjectDefinitionHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldProjectDefinition, v))
}

// ProjectDefinitionIsNil applies the IsNil predicate on the "project_definition" field.
func ProjectDefinitionIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldProjectDefinition))
}

// ProjectDefinitionNotNil applies the NotNil predicate on the "project_definition" field.
func ProjectDefinitionNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldProjectDefinition))
}

// ProjectDefinitionEqualFold applies the EqualFold predicate on the "project_definition" field.
func ProjectDefinitionEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldProjectDefinition, v))
}

// ProjectDefinitionContainsFold applies the ContainsFold predicate on the "project_definition" field.
func ProjectDefinitionContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldProjectDefinition, v))
}

// EstimatedProjectStartDateEQ applies the EQ predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateNEQ applies the NEQ predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateIn applies the In predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldEstimatedProjectStartDate, vs...))
}

// EstimatedProjectStartDateNotIn applies the NotIn predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldEstimatedProjectStartDate, vs...))
}

// EstimatedProjectStartDateGT applies the GT predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateGTE applies the GTE predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateLT applies the LT predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateLTE applies the LTE predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldEstimatedProjectStartDate, v))
}

// EstimatedProjectStartDateIsNil applies the IsNil predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldEstimatedProjectStartDate))
}

// EstimatedProjectStartDateNotNil applies the NotNil predicate on the "estimated_project_start_date" field.
func EstimatedProjectStartDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldEstimatedProjectStartDate))
}

// EstimatedProjectEndDateEQ applies the EQ predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateNEQ applies the NEQ predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateIn applies the In predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldEstimatedProjectEndDate, vs...))
}

// EstimatedProjectEndDateNotIn applies the NotIn predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldEstimatedProjectEndDate, vs...))
}

// EstimatedProjectEndDateGT applies the GT predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateGTE applies the GTE predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateLT applies the LT predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateLTE applies the LTE predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldEstimatedProjectEndDate, v))
}

// EstimatedProjectEndDateIsNil applies the IsNil predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldEstimatedProjectEndDate))
}

// EstimatedProjectEndDateNotNil applies the NotNil predicate on the "estimated_project_end_date" field.
func EstimatedProjectEndDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldEstimatedProjectEndDate))
}

// AttachmentsIsNil applies the IsNil predicate on the "attachments" field.
func AttachmentsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldAttachments))
}

// AttachmentsNotNil applies the NotNil predicate on the "attachments" field.
func AttachmentsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldAttachments))
}

// GeoCoordinateIsNil applies the IsNil predicate on the "geo_coordinate" field.
func GeoCoordinateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldGeoCoordinate))
}

// GeoCoordinateNotNil applies the NotNil predicate on the "geo_coordinate" field.
func GeoCoordinateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldGeoCoordinate))
}

// GeoBoundsIsNil applies the IsNil predicate on the "geo_bounds" field.
func GeoBoundsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldGeoBounds))
}

// GeoBoundsNotNil applies the NotNil predicate on the "geo_bounds" field.
func GeoBoundsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldGeoBounds))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkIsNil applies the IsNil predicate on the "remark" field.
func RemarkIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldRemark))
}

// RemarkNotNil applies the NotNil predicate on the "remark" field.
func RemarkNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldRemark))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldRemark, v))
}

// ImagesIsNil applies the IsNil predicate on the "images" field.
func ImagesIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldImages))
}

// ImagesNotNil applies the NotNil predicate on the "images" field.
func ImagesNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldImages))
}

// TenderSituationsEQ applies the EQ predicate on the "tender_situations" field.
func TenderSituationsEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderSituations, v))
}

// TenderSituationsNEQ applies the NEQ predicate on the "tender_situations" field.
func TenderSituationsNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderSituations, v))
}

// TenderSituationsIn applies the In predicate on the "tender_situations" field.
func TenderSituationsIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderSituations, vs...))
}

// TenderSituationsNotIn applies the NotIn predicate on the "tender_situations" field.
func TenderSituationsNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderSituations, vs...))
}

// TenderSituationsGT applies the GT predicate on the "tender_situations" field.
func TenderSituationsGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderSituations, v))
}

// TenderSituationsGTE applies the GTE predicate on the "tender_situations" field.
func TenderSituationsGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderSituations, v))
}

// TenderSituationsLT applies the LT predicate on the "tender_situations" field.
func TenderSituationsLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderSituations, v))
}

// TenderSituationsLTE applies the LTE predicate on the "tender_situations" field.
func TenderSituationsLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderSituations, v))
}

// TenderSituationsContains applies the Contains predicate on the "tender_situations" field.
func TenderSituationsContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTenderSituations, v))
}

// TenderSituationsHasPrefix applies the HasPrefix predicate on the "tender_situations" field.
func TenderSituationsHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderSituations, v))
}

// TenderSituationsHasSuffix applies the HasSuffix predicate on the "tender_situations" field.
func TenderSituationsHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderSituations, v))
}

// TenderSituationsIsNil applies the IsNil predicate on the "tender_situations" field.
func TenderSituationsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderSituations))
}

// TenderSituationsNotNil applies the NotNil predicate on the "tender_situations" field.
func TenderSituationsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderSituations))
}

// TenderSituationsEqualFold applies the EqualFold predicate on the "tender_situations" field.
func TenderSituationsEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderSituations, v))
}

// TenderSituationsContainsFold applies the ContainsFold predicate on the "tender_situations" field.
func TenderSituationsContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderSituations, v))
}

// OwnerSituationsEQ applies the EQ predicate on the "owner_situations" field.
func OwnerSituationsEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldOwnerSituations, v))
}

// OwnerSituationsNEQ applies the NEQ predicate on the "owner_situations" field.
func OwnerSituationsNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldOwnerSituations, v))
}

// OwnerSituationsIn applies the In predicate on the "owner_situations" field.
func OwnerSituationsIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldOwnerSituations, vs...))
}

// OwnerSituationsNotIn applies the NotIn predicate on the "owner_situations" field.
func OwnerSituationsNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldOwnerSituations, vs...))
}

// OwnerSituationsGT applies the GT predicate on the "owner_situations" field.
func OwnerSituationsGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldOwnerSituations, v))
}

// OwnerSituationsGTE applies the GTE predicate on the "owner_situations" field.
func OwnerSituationsGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldOwnerSituations, v))
}

// OwnerSituationsLT applies the LT predicate on the "owner_situations" field.
func OwnerSituationsLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldOwnerSituations, v))
}

// OwnerSituationsLTE applies the LTE predicate on the "owner_situations" field.
func OwnerSituationsLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldOwnerSituations, v))
}

// OwnerSituationsContains applies the Contains predicate on the "owner_situations" field.
func OwnerSituationsContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldOwnerSituations, v))
}

// OwnerSituationsHasPrefix applies the HasPrefix predicate on the "owner_situations" field.
func OwnerSituationsHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldOwnerSituations, v))
}

// OwnerSituationsHasSuffix applies the HasSuffix predicate on the "owner_situations" field.
func OwnerSituationsHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldOwnerSituations, v))
}

// OwnerSituationsIsNil applies the IsNil predicate on the "owner_situations" field.
func OwnerSituationsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldOwnerSituations))
}

// OwnerSituationsNotNil applies the NotNil predicate on the "owner_situations" field.
func OwnerSituationsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldOwnerSituations))
}

// OwnerSituationsEqualFold applies the EqualFold predicate on the "owner_situations" field.
func OwnerSituationsEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldOwnerSituations, v))
}

// OwnerSituationsContainsFold applies the ContainsFold predicate on the "owner_situations" field.
func OwnerSituationsContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldOwnerSituations, v))
}

// BiddingInstructionsEQ applies the EQ predicate on the "bidding_instructions" field.
func BiddingInstructionsEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldBiddingInstructions, v))
}

// BiddingInstructionsNEQ applies the NEQ predicate on the "bidding_instructions" field.
func BiddingInstructionsNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldBiddingInstructions, v))
}

// BiddingInstructionsIn applies the In predicate on the "bidding_instructions" field.
func BiddingInstructionsIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldBiddingInstructions, vs...))
}

// BiddingInstructionsNotIn applies the NotIn predicate on the "bidding_instructions" field.
func BiddingInstructionsNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldBiddingInstructions, vs...))
}

// BiddingInstructionsGT applies the GT predicate on the "bidding_instructions" field.
func BiddingInstructionsGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldBiddingInstructions, v))
}

// BiddingInstructionsGTE applies the GTE predicate on the "bidding_instructions" field.
func BiddingInstructionsGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldBiddingInstructions, v))
}

// BiddingInstructionsLT applies the LT predicate on the "bidding_instructions" field.
func BiddingInstructionsLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldBiddingInstructions, v))
}

// BiddingInstructionsLTE applies the LTE predicate on the "bidding_instructions" field.
func BiddingInstructionsLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldBiddingInstructions, v))
}

// BiddingInstructionsContains applies the Contains predicate on the "bidding_instructions" field.
func BiddingInstructionsContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldBiddingInstructions, v))
}

// BiddingInstructionsHasPrefix applies the HasPrefix predicate on the "bidding_instructions" field.
func BiddingInstructionsHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldBiddingInstructions, v))
}

// BiddingInstructionsHasSuffix applies the HasSuffix predicate on the "bidding_instructions" field.
func BiddingInstructionsHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldBiddingInstructions, v))
}

// BiddingInstructionsIsNil applies the IsNil predicate on the "bidding_instructions" field.
func BiddingInstructionsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldBiddingInstructions))
}

// BiddingInstructionsNotNil applies the NotNil predicate on the "bidding_instructions" field.
func BiddingInstructionsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldBiddingInstructions))
}

// BiddingInstructionsEqualFold applies the EqualFold predicate on the "bidding_instructions" field.
func BiddingInstructionsEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldBiddingInstructions, v))
}

// BiddingInstructionsContainsFold applies the ContainsFold predicate on the "bidding_instructions" field.
func BiddingInstructionsContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldBiddingInstructions, v))
}

// CompetitorSituationsEQ applies the EQ predicate on the "competitor_situations" field.
func CompetitorSituationsEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCompetitorSituations, v))
}

// CompetitorSituationsNEQ applies the NEQ predicate on the "competitor_situations" field.
func CompetitorSituationsNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCompetitorSituations, v))
}

// CompetitorSituationsIn applies the In predicate on the "competitor_situations" field.
func CompetitorSituationsIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCompetitorSituations, vs...))
}

// CompetitorSituationsNotIn applies the NotIn predicate on the "competitor_situations" field.
func CompetitorSituationsNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCompetitorSituations, vs...))
}

// CompetitorSituationsGT applies the GT predicate on the "competitor_situations" field.
func CompetitorSituationsGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCompetitorSituations, v))
}

// CompetitorSituationsGTE applies the GTE predicate on the "competitor_situations" field.
func CompetitorSituationsGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCompetitorSituations, v))
}

// CompetitorSituationsLT applies the LT predicate on the "competitor_situations" field.
func CompetitorSituationsLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCompetitorSituations, v))
}

// CompetitorSituationsLTE applies the LTE predicate on the "competitor_situations" field.
func CompetitorSituationsLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCompetitorSituations, v))
}

// CompetitorSituationsContains applies the Contains predicate on the "competitor_situations" field.
func CompetitorSituationsContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCompetitorSituations, v))
}

// CompetitorSituationsHasPrefix applies the HasPrefix predicate on the "competitor_situations" field.
func CompetitorSituationsHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCompetitorSituations, v))
}

// CompetitorSituationsHasSuffix applies the HasSuffix predicate on the "competitor_situations" field.
func CompetitorSituationsHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCompetitorSituations, v))
}

// CompetitorSituationsIsNil applies the IsNil predicate on the "competitor_situations" field.
func CompetitorSituationsIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCompetitorSituations))
}

// CompetitorSituationsNotNil applies the NotNil predicate on the "competitor_situations" field.
func CompetitorSituationsNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCompetitorSituations))
}

// CompetitorSituationsEqualFold applies the EqualFold predicate on the "competitor_situations" field.
func CompetitorSituationsEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCompetitorSituations, v))
}

// CompetitorSituationsContainsFold applies the ContainsFold predicate on the "competitor_situations" field.
func CompetitorSituationsContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCompetitorSituations, v))
}

// CostEngineerEQ applies the EQ predicate on the "cost_engineer" field.
func CostEngineerEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCostEngineer, v))
}

// CostEngineerNEQ applies the NEQ predicate on the "cost_engineer" field.
func CostEngineerNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCostEngineer, v))
}

// CostEngineerIn applies the In predicate on the "cost_engineer" field.
func CostEngineerIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCostEngineer, vs...))
}

// CostEngineerNotIn applies the NotIn predicate on the "cost_engineer" field.
func CostEngineerNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCostEngineer, vs...))
}

// CostEngineerGT applies the GT predicate on the "cost_engineer" field.
func CostEngineerGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCostEngineer, v))
}

// CostEngineerGTE applies the GTE predicate on the "cost_engineer" field.
func CostEngineerGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCostEngineer, v))
}

// CostEngineerLT applies the LT predicate on the "cost_engineer" field.
func CostEngineerLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCostEngineer, v))
}

// CostEngineerLTE applies the LTE predicate on the "cost_engineer" field.
func CostEngineerLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCostEngineer, v))
}

// CostEngineerContains applies the Contains predicate on the "cost_engineer" field.
func CostEngineerContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCostEngineer, v))
}

// CostEngineerHasPrefix applies the HasPrefix predicate on the "cost_engineer" field.
func CostEngineerHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCostEngineer, v))
}

// CostEngineerHasSuffix applies the HasSuffix predicate on the "cost_engineer" field.
func CostEngineerHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCostEngineer, v))
}

// CostEngineerIsNil applies the IsNil predicate on the "cost_engineer" field.
func CostEngineerIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCostEngineer))
}

// CostEngineerNotNil applies the NotNil predicate on the "cost_engineer" field.
func CostEngineerNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCostEngineer))
}

// CostEngineerEqualFold applies the EqualFold predicate on the "cost_engineer" field.
func CostEngineerEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCostEngineer, v))
}

// CostEngineerContainsFold applies the ContainsFold predicate on the "cost_engineer" field.
func CostEngineerContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCostEngineer, v))
}

// TenderFormEQ applies the EQ predicate on the "tender_form" field.
func TenderFormEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderForm, v))
}

// TenderFormNEQ applies the NEQ predicate on the "tender_form" field.
func TenderFormNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderForm, v))
}

// TenderFormIn applies the In predicate on the "tender_form" field.
func TenderFormIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderForm, vs...))
}

// TenderFormNotIn applies the NotIn predicate on the "tender_form" field.
func TenderFormNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderForm, vs...))
}

// TenderFormGT applies the GT predicate on the "tender_form" field.
func TenderFormGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderForm, v))
}

// TenderFormGTE applies the GTE predicate on the "tender_form" field.
func TenderFormGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderForm, v))
}

// TenderFormLT applies the LT predicate on the "tender_form" field.
func TenderFormLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderForm, v))
}

// TenderFormLTE applies the LTE predicate on the "tender_form" field.
func TenderFormLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderForm, v))
}

// TenderFormContains applies the Contains predicate on the "tender_form" field.
func TenderFormContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTenderForm, v))
}

// TenderFormHasPrefix applies the HasPrefix predicate on the "tender_form" field.
func TenderFormHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderForm, v))
}

// TenderFormHasSuffix applies the HasSuffix predicate on the "tender_form" field.
func TenderFormHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderForm, v))
}

// TenderFormIsNil applies the IsNil predicate on the "tender_form" field.
func TenderFormIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderForm))
}

// TenderFormNotNil applies the NotNil predicate on the "tender_form" field.
func TenderFormNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderForm))
}

// TenderFormEqualFold applies the EqualFold predicate on the "tender_form" field.
func TenderFormEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderForm, v))
}

// TenderFormContainsFold applies the ContainsFold predicate on the "tender_form" field.
func TenderFormContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderForm, v))
}

// ContractFormEQ applies the EQ predicate on the "contract_form" field.
func ContractFormEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldContractForm, v))
}

// ContractFormNEQ applies the NEQ predicate on the "contract_form" field.
func ContractFormNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldContractForm, v))
}

// ContractFormIn applies the In predicate on the "contract_form" field.
func ContractFormIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldContractForm, vs...))
}

// ContractFormNotIn applies the NotIn predicate on the "contract_form" field.
func ContractFormNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldContractForm, vs...))
}

// ContractFormGT applies the GT predicate on the "contract_form" field.
func ContractFormGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldContractForm, v))
}

// ContractFormGTE applies the GTE predicate on the "contract_form" field.
func ContractFormGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldContractForm, v))
}

// ContractFormLT applies the LT predicate on the "contract_form" field.
func ContractFormLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldContractForm, v))
}

// ContractFormLTE applies the LTE predicate on the "contract_form" field.
func ContractFormLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldContractForm, v))
}

// ContractFormContains applies the Contains predicate on the "contract_form" field.
func ContractFormContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldContractForm, v))
}

// ContractFormHasPrefix applies the HasPrefix predicate on the "contract_form" field.
func ContractFormHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldContractForm, v))
}

// ContractFormHasSuffix applies the HasSuffix predicate on the "contract_form" field.
func ContractFormHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldContractForm, v))
}

// ContractFormIsNil applies the IsNil predicate on the "contract_form" field.
func ContractFormIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldContractForm))
}

// ContractFormNotNil applies the NotNil predicate on the "contract_form" field.
func ContractFormNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldContractForm))
}

// ContractFormEqualFold applies the EqualFold predicate on the "contract_form" field.
func ContractFormEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldContractForm, v))
}

// ContractFormContainsFold applies the ContainsFold predicate on the "contract_form" field.
func ContractFormContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldContractForm, v))
}

// ManagementCompanyEQ applies the EQ predicate on the "management_company" field.
func ManagementCompanyEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldManagementCompany, v))
}

// ManagementCompanyNEQ applies the NEQ predicate on the "management_company" field.
func ManagementCompanyNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldManagementCompany, v))
}

// ManagementCompanyIn applies the In predicate on the "management_company" field.
func ManagementCompanyIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldManagementCompany, vs...))
}

// ManagementCompanyNotIn applies the NotIn predicate on the "management_company" field.
func ManagementCompanyNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldManagementCompany, vs...))
}

// ManagementCompanyGT applies the GT predicate on the "management_company" field.
func ManagementCompanyGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldManagementCompany, v))
}

// ManagementCompanyGTE applies the GTE predicate on the "management_company" field.
func ManagementCompanyGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldManagementCompany, v))
}

// ManagementCompanyLT applies the LT predicate on the "management_company" field.
func ManagementCompanyLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldManagementCompany, v))
}

// ManagementCompanyLTE applies the LTE predicate on the "management_company" field.
func ManagementCompanyLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldManagementCompany, v))
}

// ManagementCompanyContains applies the Contains predicate on the "management_company" field.
func ManagementCompanyContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldManagementCompany, v))
}

// ManagementCompanyHasPrefix applies the HasPrefix predicate on the "management_company" field.
func ManagementCompanyHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldManagementCompany, v))
}

// ManagementCompanyHasSuffix applies the HasSuffix predicate on the "management_company" field.
func ManagementCompanyHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldManagementCompany, v))
}

// ManagementCompanyIsNil applies the IsNil predicate on the "management_company" field.
func ManagementCompanyIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldManagementCompany))
}

// ManagementCompanyNotNil applies the NotNil predicate on the "management_company" field.
func ManagementCompanyNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldManagementCompany))
}

// ManagementCompanyEqualFold applies the EqualFold predicate on the "management_company" field.
func ManagementCompanyEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldManagementCompany, v))
}

// ManagementCompanyContainsFold applies the ContainsFold predicate on the "management_company" field.
func ManagementCompanyContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldManagementCompany, v))
}

// TenderingAgencyEQ applies the EQ predicate on the "tendering_agency" field.
func TenderingAgencyEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderingAgency, v))
}

// TenderingAgencyNEQ applies the NEQ predicate on the "tendering_agency" field.
func TenderingAgencyNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderingAgency, v))
}

// TenderingAgencyIn applies the In predicate on the "tendering_agency" field.
func TenderingAgencyIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderingAgency, vs...))
}

// TenderingAgencyNotIn applies the NotIn predicate on the "tendering_agency" field.
func TenderingAgencyNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderingAgency, vs...))
}

// TenderingAgencyGT applies the GT predicate on the "tendering_agency" field.
func TenderingAgencyGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderingAgency, v))
}

// TenderingAgencyGTE applies the GTE predicate on the "tendering_agency" field.
func TenderingAgencyGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderingAgency, v))
}

// TenderingAgencyLT applies the LT predicate on the "tendering_agency" field.
func TenderingAgencyLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderingAgency, v))
}

// TenderingAgencyLTE applies the LTE predicate on the "tendering_agency" field.
func TenderingAgencyLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderingAgency, v))
}

// TenderingAgencyContains applies the Contains predicate on the "tendering_agency" field.
func TenderingAgencyContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTenderingAgency, v))
}

// TenderingAgencyHasPrefix applies the HasPrefix predicate on the "tendering_agency" field.
func TenderingAgencyHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderingAgency, v))
}

// TenderingAgencyHasSuffix applies the HasSuffix predicate on the "tendering_agency" field.
func TenderingAgencyHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderingAgency, v))
}

// TenderingAgencyIsNil applies the IsNil predicate on the "tendering_agency" field.
func TenderingAgencyIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderingAgency))
}

// TenderingAgencyNotNil applies the NotNil predicate on the "tendering_agency" field.
func TenderingAgencyNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderingAgency))
}

// TenderingAgencyEqualFold applies the EqualFold predicate on the "tendering_agency" field.
func TenderingAgencyEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderingAgency, v))
}

// TenderingAgencyContainsFold applies the ContainsFold predicate on the "tendering_agency" field.
func TenderingAgencyContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderingAgency, v))
}

// BiddingDateEQ applies the EQ predicate on the "bidding_date" field.
func BiddingDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldBiddingDate, v))
}

// BiddingDateNEQ applies the NEQ predicate on the "bidding_date" field.
func BiddingDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldBiddingDate, v))
}

// BiddingDateIn applies the In predicate on the "bidding_date" field.
func BiddingDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldBiddingDate, vs...))
}

// BiddingDateNotIn applies the NotIn predicate on the "bidding_date" field.
func BiddingDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldBiddingDate, vs...))
}

// BiddingDateGT applies the GT predicate on the "bidding_date" field.
func BiddingDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldBiddingDate, v))
}

// BiddingDateGTE applies the GTE predicate on the "bidding_date" field.
func BiddingDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldBiddingDate, v))
}

// BiddingDateLT applies the LT predicate on the "bidding_date" field.
func BiddingDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldBiddingDate, v))
}

// BiddingDateLTE applies the LTE predicate on the "bidding_date" field.
func BiddingDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldBiddingDate, v))
}

// BiddingDateIsNil applies the IsNil predicate on the "bidding_date" field.
func BiddingDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldBiddingDate))
}

// BiddingDateNotNil applies the NotNil predicate on the "bidding_date" field.
func BiddingDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldBiddingDate))
}

// FacadeConsultantEQ applies the EQ predicate on the "facade_consultant" field.
func FacadeConsultantEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFacadeConsultant, v))
}

// FacadeConsultantNEQ applies the NEQ predicate on the "facade_consultant" field.
func FacadeConsultantNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldFacadeConsultant, v))
}

// FacadeConsultantIn applies the In predicate on the "facade_consultant" field.
func FacadeConsultantIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldFacadeConsultant, vs...))
}

// FacadeConsultantNotIn applies the NotIn predicate on the "facade_consultant" field.
func FacadeConsultantNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldFacadeConsultant, vs...))
}

// FacadeConsultantGT applies the GT predicate on the "facade_consultant" field.
func FacadeConsultantGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldFacadeConsultant, v))
}

// FacadeConsultantGTE applies the GTE predicate on the "facade_consultant" field.
func FacadeConsultantGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldFacadeConsultant, v))
}

// FacadeConsultantLT applies the LT predicate on the "facade_consultant" field.
func FacadeConsultantLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldFacadeConsultant, v))
}

// FacadeConsultantLTE applies the LTE predicate on the "facade_consultant" field.
func FacadeConsultantLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldFacadeConsultant, v))
}

// FacadeConsultantContains applies the Contains predicate on the "facade_consultant" field.
func FacadeConsultantContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldFacadeConsultant, v))
}

// FacadeConsultantHasPrefix applies the HasPrefix predicate on the "facade_consultant" field.
func FacadeConsultantHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldFacadeConsultant, v))
}

// FacadeConsultantHasSuffix applies the HasSuffix predicate on the "facade_consultant" field.
func FacadeConsultantHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldFacadeConsultant, v))
}

// FacadeConsultantIsNil applies the IsNil predicate on the "facade_consultant" field.
func FacadeConsultantIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldFacadeConsultant))
}

// FacadeConsultantNotNil applies the NotNil predicate on the "facade_consultant" field.
func FacadeConsultantNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldFacadeConsultant))
}

// FacadeConsultantEqualFold applies the EqualFold predicate on the "facade_consultant" field.
func FacadeConsultantEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldFacadeConsultant, v))
}

// FacadeConsultantContainsFold applies the ContainsFold predicate on the "facade_consultant" field.
func FacadeConsultantContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldFacadeConsultant, v))
}

// DesignUnitEQ applies the EQ predicate on the "design_unit" field.
func DesignUnitEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDesignUnit, v))
}

// DesignUnitNEQ applies the NEQ predicate on the "design_unit" field.
func DesignUnitNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldDesignUnit, v))
}

// DesignUnitIn applies the In predicate on the "design_unit" field.
func DesignUnitIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldDesignUnit, vs...))
}

// DesignUnitNotIn applies the NotIn predicate on the "design_unit" field.
func DesignUnitNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldDesignUnit, vs...))
}

// DesignUnitGT applies the GT predicate on the "design_unit" field.
func DesignUnitGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldDesignUnit, v))
}

// DesignUnitGTE applies the GTE predicate on the "design_unit" field.
func DesignUnitGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldDesignUnit, v))
}

// DesignUnitLT applies the LT predicate on the "design_unit" field.
func DesignUnitLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldDesignUnit, v))
}

// DesignUnitLTE applies the LTE predicate on the "design_unit" field.
func DesignUnitLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldDesignUnit, v))
}

// DesignUnitContains applies the Contains predicate on the "design_unit" field.
func DesignUnitContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldDesignUnit, v))
}

// DesignUnitHasPrefix applies the HasPrefix predicate on the "design_unit" field.
func DesignUnitHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldDesignUnit, v))
}

// DesignUnitHasSuffix applies the HasSuffix predicate on the "design_unit" field.
func DesignUnitHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldDesignUnit, v))
}

// DesignUnitIsNil applies the IsNil predicate on the "design_unit" field.
func DesignUnitIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldDesignUnit))
}

// DesignUnitNotNil applies the NotNil predicate on the "design_unit" field.
func DesignUnitNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldDesignUnit))
}

// DesignUnitEqualFold applies the EqualFold predicate on the "design_unit" field.
func DesignUnitEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldDesignUnit, v))
}

// DesignUnitContainsFold applies the ContainsFold predicate on the "design_unit" field.
func DesignUnitContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldDesignUnit, v))
}

// ConsultingFirmEQ applies the EQ predicate on the "consulting_firm" field.
func ConsultingFirmEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldConsultingFirm, v))
}

// ConsultingFirmNEQ applies the NEQ predicate on the "consulting_firm" field.
func ConsultingFirmNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldConsultingFirm, v))
}

// ConsultingFirmIn applies the In predicate on the "consulting_firm" field.
func ConsultingFirmIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldConsultingFirm, vs...))
}

// ConsultingFirmNotIn applies the NotIn predicate on the "consulting_firm" field.
func ConsultingFirmNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldConsultingFirm, vs...))
}

// ConsultingFirmGT applies the GT predicate on the "consulting_firm" field.
func ConsultingFirmGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldConsultingFirm, v))
}

// ConsultingFirmGTE applies the GTE predicate on the "consulting_firm" field.
func ConsultingFirmGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldConsultingFirm, v))
}

// ConsultingFirmLT applies the LT predicate on the "consulting_firm" field.
func ConsultingFirmLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldConsultingFirm, v))
}

// ConsultingFirmLTE applies the LTE predicate on the "consulting_firm" field.
func ConsultingFirmLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldConsultingFirm, v))
}

// ConsultingFirmContains applies the Contains predicate on the "consulting_firm" field.
func ConsultingFirmContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldConsultingFirm, v))
}

// ConsultingFirmHasPrefix applies the HasPrefix predicate on the "consulting_firm" field.
func ConsultingFirmHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldConsultingFirm, v))
}

// ConsultingFirmHasSuffix applies the HasSuffix predicate on the "consulting_firm" field.
func ConsultingFirmHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldConsultingFirm, v))
}

// ConsultingFirmIsNil applies the IsNil predicate on the "consulting_firm" field.
func ConsultingFirmIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldConsultingFirm))
}

// ConsultingFirmNotNil applies the NotNil predicate on the "consulting_firm" field.
func ConsultingFirmNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldConsultingFirm))
}

// ConsultingFirmEqualFold applies the EqualFold predicate on the "consulting_firm" field.
func ConsultingFirmEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldConsultingFirm, v))
}

// ConsultingFirmContainsFold applies the ContainsFold predicate on the "consulting_firm" field.
func ConsultingFirmContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldConsultingFirm, v))
}

// KeyProjectEQ applies the EQ predicate on the "key_project" field.
func KeyProjectEQ(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldKeyProject, v))
}

// KeyProjectNEQ applies the NEQ predicate on the "key_project" field.
func KeyProjectNEQ(v bool) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldKeyProject, v))
}

// CurrentProgressEQ applies the EQ predicate on the "current_progress" field.
func CurrentProgressEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCurrentProgress, v))
}

// CurrentProgressNEQ applies the NEQ predicate on the "current_progress" field.
func CurrentProgressNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCurrentProgress, v))
}

// CurrentProgressIn applies the In predicate on the "current_progress" field.
func CurrentProgressIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCurrentProgress, vs...))
}

// CurrentProgressNotIn applies the NotIn predicate on the "current_progress" field.
func CurrentProgressNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCurrentProgress, vs...))
}

// CurrentProgressGT applies the GT predicate on the "current_progress" field.
func CurrentProgressGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCurrentProgress, v))
}

// CurrentProgressGTE applies the GTE predicate on the "current_progress" field.
func CurrentProgressGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCurrentProgress, v))
}

// CurrentProgressLT applies the LT predicate on the "current_progress" field.
func CurrentProgressLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCurrentProgress, v))
}

// CurrentProgressLTE applies the LTE predicate on the "current_progress" field.
func CurrentProgressLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCurrentProgress, v))
}

// CurrentProgressContains applies the Contains predicate on the "current_progress" field.
func CurrentProgressContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldCurrentProgress, v))
}

// CurrentProgressHasPrefix applies the HasPrefix predicate on the "current_progress" field.
func CurrentProgressHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCurrentProgress, v))
}

// CurrentProgressHasSuffix applies the HasSuffix predicate on the "current_progress" field.
func CurrentProgressHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCurrentProgress, v))
}

// CurrentProgressIsNil applies the IsNil predicate on the "current_progress" field.
func CurrentProgressIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCurrentProgress))
}

// CurrentProgressNotNil applies the NotNil predicate on the "current_progress" field.
func CurrentProgressNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCurrentProgress))
}

// CurrentProgressEqualFold applies the EqualFold predicate on the "current_progress" field.
func CurrentProgressEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCurrentProgress, v))
}

// CurrentProgressContainsFold applies the ContainsFold predicate on the "current_progress" field.
func CurrentProgressContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCurrentProgress, v))
}

// TenderWinCompanyEQ applies the EQ predicate on the "tender_win_company" field.
func TenderWinCompanyEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinCompany, v))
}

// TenderWinCompanyNEQ applies the NEQ predicate on the "tender_win_company" field.
func TenderWinCompanyNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderWinCompany, v))
}

// TenderWinCompanyIn applies the In predicate on the "tender_win_company" field.
func TenderWinCompanyIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderWinCompany, vs...))
}

// TenderWinCompanyNotIn applies the NotIn predicate on the "tender_win_company" field.
func TenderWinCompanyNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderWinCompany, vs...))
}

// TenderWinCompanyGT applies the GT predicate on the "tender_win_company" field.
func TenderWinCompanyGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderWinCompany, v))
}

// TenderWinCompanyGTE applies the GTE predicate on the "tender_win_company" field.
func TenderWinCompanyGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderWinCompany, v))
}

// TenderWinCompanyLT applies the LT predicate on the "tender_win_company" field.
func TenderWinCompanyLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderWinCompany, v))
}

// TenderWinCompanyLTE applies the LTE predicate on the "tender_win_company" field.
func TenderWinCompanyLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderWinCompany, v))
}

// TenderWinCompanyContains applies the Contains predicate on the "tender_win_company" field.
func TenderWinCompanyContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTenderWinCompany, v))
}

// TenderWinCompanyHasPrefix applies the HasPrefix predicate on the "tender_win_company" field.
func TenderWinCompanyHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderWinCompany, v))
}

// TenderWinCompanyHasSuffix applies the HasSuffix predicate on the "tender_win_company" field.
func TenderWinCompanyHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderWinCompany, v))
}

// TenderWinCompanyIsNil applies the IsNil predicate on the "tender_win_company" field.
func TenderWinCompanyIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderWinCompany))
}

// TenderWinCompanyNotNil applies the NotNil predicate on the "tender_win_company" field.
func TenderWinCompanyNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderWinCompany))
}

// TenderWinCompanyEqualFold applies the EqualFold predicate on the "tender_win_company" field.
func TenderWinCompanyEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderWinCompany, v))
}

// TenderWinCompanyContainsFold applies the ContainsFold predicate on the "tender_win_company" field.
func TenderWinCompanyContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderWinCompany, v))
}

// TenderCodeEQ applies the EQ predicate on the "tender_code" field.
func TenderCodeEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderCode, v))
}

// TenderCodeNEQ applies the NEQ predicate on the "tender_code" field.
func TenderCodeNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderCode, v))
}

// TenderCodeIn applies the In predicate on the "tender_code" field.
func TenderCodeIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderCode, vs...))
}

// TenderCodeNotIn applies the NotIn predicate on the "tender_code" field.
func TenderCodeNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderCode, vs...))
}

// TenderCodeGT applies the GT predicate on the "tender_code" field.
func TenderCodeGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderCode, v))
}

// TenderCodeGTE applies the GTE predicate on the "tender_code" field.
func TenderCodeGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderCode, v))
}

// TenderCodeLT applies the LT predicate on the "tender_code" field.
func TenderCodeLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderCode, v))
}

// TenderCodeLTE applies the LTE predicate on the "tender_code" field.
func TenderCodeLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderCode, v))
}

// TenderCodeContains applies the Contains predicate on the "tender_code" field.
func TenderCodeContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldTenderCode, v))
}

// TenderCodeHasPrefix applies the HasPrefix predicate on the "tender_code" field.
func TenderCodeHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderCode, v))
}

// TenderCodeHasSuffix applies the HasSuffix predicate on the "tender_code" field.
func TenderCodeHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderCode, v))
}

// TenderCodeIsNil applies the IsNil predicate on the "tender_code" field.
func TenderCodeIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderCode))
}

// TenderCodeNotNil applies the NotNil predicate on the "tender_code" field.
func TenderCodeNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderCode))
}

// TenderCodeEqualFold applies the EqualFold predicate on the "tender_code" field.
func TenderCodeEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderCode, v))
}

// TenderCodeContainsFold applies the ContainsFold predicate on the "tender_code" field.
func TenderCodeContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderCode, v))
}

// ArchitectEQ applies the EQ predicate on the "architect" field.
func ArchitectEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldArchitect, v))
}

// ArchitectNEQ applies the NEQ predicate on the "architect" field.
func ArchitectNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldArchitect, v))
}

// ArchitectIn applies the In predicate on the "architect" field.
func ArchitectIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldArchitect, vs...))
}

// ArchitectNotIn applies the NotIn predicate on the "architect" field.
func ArchitectNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldArchitect, vs...))
}

// ArchitectGT applies the GT predicate on the "architect" field.
func ArchitectGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldArchitect, v))
}

// ArchitectGTE applies the GTE predicate on the "architect" field.
func ArchitectGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldArchitect, v))
}

// ArchitectLT applies the LT predicate on the "architect" field.
func ArchitectLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldArchitect, v))
}

// ArchitectLTE applies the LTE predicate on the "architect" field.
func ArchitectLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldArchitect, v))
}

// ArchitectContains applies the Contains predicate on the "architect" field.
func ArchitectContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldArchitect, v))
}

// ArchitectHasPrefix applies the HasPrefix predicate on the "architect" field.
func ArchitectHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldArchitect, v))
}

// ArchitectHasSuffix applies the HasSuffix predicate on the "architect" field.
func ArchitectHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldArchitect, v))
}

// ArchitectIsNil applies the IsNil predicate on the "architect" field.
func ArchitectIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldArchitect))
}

// ArchitectNotNil applies the NotNil predicate on the "architect" field.
func ArchitectNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldArchitect))
}

// ArchitectEqualFold applies the EqualFold predicate on the "architect" field.
func ArchitectEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldArchitect, v))
}

// ArchitectContainsFold applies the ContainsFold predicate on the "architect" field.
func ArchitectContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldArchitect, v))
}

// DeveloperEQ applies the EQ predicate on the "developer" field.
func DeveloperEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDeveloper, v))
}

// DeveloperNEQ applies the NEQ predicate on the "developer" field.
func DeveloperNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldDeveloper, v))
}

// DeveloperIn applies the In predicate on the "developer" field.
func DeveloperIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldDeveloper, vs...))
}

// DeveloperNotIn applies the NotIn predicate on the "developer" field.
func DeveloperNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldDeveloper, vs...))
}

// DeveloperGT applies the GT predicate on the "developer" field.
func DeveloperGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldDeveloper, v))
}

// DeveloperGTE applies the GTE predicate on the "developer" field.
func DeveloperGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldDeveloper, v))
}

// DeveloperLT applies the LT predicate on the "developer" field.
func DeveloperLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldDeveloper, v))
}

// DeveloperLTE applies the LTE predicate on the "developer" field.
func DeveloperLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldDeveloper, v))
}

// DeveloperContains applies the Contains predicate on the "developer" field.
func DeveloperContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldDeveloper, v))
}

// DeveloperHasPrefix applies the HasPrefix predicate on the "developer" field.
func DeveloperHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldDeveloper, v))
}

// DeveloperHasSuffix applies the HasSuffix predicate on the "developer" field.
func DeveloperHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldDeveloper, v))
}

// DeveloperIsNil applies the IsNil predicate on the "developer" field.
func DeveloperIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldDeveloper))
}

// DeveloperNotNil applies the NotNil predicate on the "developer" field.
func DeveloperNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldDeveloper))
}

// DeveloperEqualFold applies the EqualFold predicate on the "developer" field.
func DeveloperEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldDeveloper, v))
}

// DeveloperContainsFold applies the ContainsFold predicate on the "developer" field.
func DeveloperContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldDeveloper, v))
}

// TenderClosingDateEQ applies the EQ predicate on the "tender_closing_date" field.
func TenderClosingDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderClosingDate, v))
}

// TenderClosingDateNEQ applies the NEQ predicate on the "tender_closing_date" field.
func TenderClosingDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderClosingDate, v))
}

// TenderClosingDateIn applies the In predicate on the "tender_closing_date" field.
func TenderClosingDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderClosingDate, vs...))
}

// TenderClosingDateNotIn applies the NotIn predicate on the "tender_closing_date" field.
func TenderClosingDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderClosingDate, vs...))
}

// TenderClosingDateGT applies the GT predicate on the "tender_closing_date" field.
func TenderClosingDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderClosingDate, v))
}

// TenderClosingDateGTE applies the GTE predicate on the "tender_closing_date" field.
func TenderClosingDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderClosingDate, v))
}

// TenderClosingDateLT applies the LT predicate on the "tender_closing_date" field.
func TenderClosingDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderClosingDate, v))
}

// TenderClosingDateLTE applies the LTE predicate on the "tender_closing_date" field.
func TenderClosingDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderClosingDate, v))
}

// TenderClosingDateIsNil applies the IsNil predicate on the "tender_closing_date" field.
func TenderClosingDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderClosingDate))
}

// TenderClosingDateNotNil applies the NotNil predicate on the "tender_closing_date" field.
func TenderClosingDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderClosingDate))
}

// ConstructionAreaEQ applies the EQ predicate on the "construction_area" field.
func ConstructionAreaEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldConstructionArea, v))
}

// ConstructionAreaNEQ applies the NEQ predicate on the "construction_area" field.
func ConstructionAreaNEQ(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldConstructionArea, v))
}

// ConstructionAreaIn applies the In predicate on the "construction_area" field.
func ConstructionAreaIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldConstructionArea, vs...))
}

// ConstructionAreaNotIn applies the NotIn predicate on the "construction_area" field.
func ConstructionAreaNotIn(vs ...string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldConstructionArea, vs...))
}

// ConstructionAreaGT applies the GT predicate on the "construction_area" field.
func ConstructionAreaGT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldConstructionArea, v))
}

// ConstructionAreaGTE applies the GTE predicate on the "construction_area" field.
func ConstructionAreaGTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldConstructionArea, v))
}

// ConstructionAreaLT applies the LT predicate on the "construction_area" field.
func ConstructionAreaLT(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldConstructionArea, v))
}

// ConstructionAreaLTE applies the LTE predicate on the "construction_area" field.
func ConstructionAreaLTE(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldConstructionArea, v))
}

// ConstructionAreaContains applies the Contains predicate on the "construction_area" field.
func ConstructionAreaContains(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContains(FieldConstructionArea, v))
}

// ConstructionAreaHasPrefix applies the HasPrefix predicate on the "construction_area" field.
func ConstructionAreaHasPrefix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldConstructionArea, v))
}

// ConstructionAreaHasSuffix applies the HasSuffix predicate on the "construction_area" field.
func ConstructionAreaHasSuffix(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldConstructionArea, v))
}

// ConstructionAreaIsNil applies the IsNil predicate on the "construction_area" field.
func ConstructionAreaIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldConstructionArea))
}

// ConstructionAreaNotNil applies the NotNil predicate on the "construction_area" field.
func ConstructionAreaNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldConstructionArea))
}

// ConstructionAreaEqualFold applies the EqualFold predicate on the "construction_area" field.
func ConstructionAreaEqualFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEqualFold(FieldConstructionArea, v))
}

// ConstructionAreaContainsFold applies the ContainsFold predicate on the "construction_area" field.
func ConstructionAreaContainsFold(v string) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldContainsFold(FieldConstructionArea, v))
}

// TenderWinDateEQ applies the EQ predicate on the "tender_win_date" field.
func TenderWinDateEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinDate, v))
}

// TenderWinDateNEQ applies the NEQ predicate on the "tender_win_date" field.
func TenderWinDateNEQ(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderWinDate, v))
}

// TenderWinDateIn applies the In predicate on the "tender_win_date" field.
func TenderWinDateIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderWinDate, vs...))
}

// TenderWinDateNotIn applies the NotIn predicate on the "tender_win_date" field.
func TenderWinDateNotIn(vs ...time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderWinDate, vs...))
}

// TenderWinDateGT applies the GT predicate on the "tender_win_date" field.
func TenderWinDateGT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderWinDate, v))
}

// TenderWinDateGTE applies the GTE predicate on the "tender_win_date" field.
func TenderWinDateGTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderWinDate, v))
}

// TenderWinDateLT applies the LT predicate on the "tender_win_date" field.
func TenderWinDateLT(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderWinDate, v))
}

// TenderWinDateLTE applies the LTE predicate on the "tender_win_date" field.
func TenderWinDateLTE(v time.Time) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderWinDate, v))
}

// TenderWinDateIsNil applies the IsNil predicate on the "tender_win_date" field.
func TenderWinDateIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderWinDate))
}

// TenderWinDateNotNil applies the NotNil predicate on the "tender_win_date" field.
func TenderWinDateNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderWinDate))
}

// TenderWinAmountEQ applies the EQ predicate on the "tender_win_amount" field.
func TenderWinAmountEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderWinAmount, v))
}

// TenderWinAmountNEQ applies the NEQ predicate on the "tender_win_amount" field.
func TenderWinAmountNEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderWinAmount, v))
}

// TenderWinAmountIn applies the In predicate on the "tender_win_amount" field.
func TenderWinAmountIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderWinAmount, vs...))
}

// TenderWinAmountNotIn applies the NotIn predicate on the "tender_win_amount" field.
func TenderWinAmountNotIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderWinAmount, vs...))
}

// TenderWinAmountGT applies the GT predicate on the "tender_win_amount" field.
func TenderWinAmountGT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderWinAmount, v))
}

// TenderWinAmountGTE applies the GTE predicate on the "tender_win_amount" field.
func TenderWinAmountGTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderWinAmount, v))
}

// TenderWinAmountLT applies the LT predicate on the "tender_win_amount" field.
func TenderWinAmountLT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderWinAmount, v))
}

// TenderWinAmountLTE applies the LTE predicate on the "tender_win_amount" field.
func TenderWinAmountLTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderWinAmount, v))
}

// TenderWinAmountIsNil applies the IsNil predicate on the "tender_win_amount" field.
func TenderWinAmountIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldTenderWinAmount))
}

// TenderWinAmountNotNil applies the NotNil predicate on the "tender_win_amount" field.
func TenderWinAmountNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldTenderWinAmount))
}

// LastTenderAmountEQ applies the EQ predicate on the "last_tender_amount" field.
func LastTenderAmountEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldLastTenderAmount, v))
}

// LastTenderAmountNEQ applies the NEQ predicate on the "last_tender_amount" field.
func LastTenderAmountNEQ(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldLastTenderAmount, v))
}

// LastTenderAmountIn applies the In predicate on the "last_tender_amount" field.
func LastTenderAmountIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldLastTenderAmount, vs...))
}

// LastTenderAmountNotIn applies the NotIn predicate on the "last_tender_amount" field.
func LastTenderAmountNotIn(vs ...float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldLastTenderAmount, vs...))
}

// LastTenderAmountGT applies the GT predicate on the "last_tender_amount" field.
func LastTenderAmountGT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldLastTenderAmount, v))
}

// LastTenderAmountGTE applies the GTE predicate on the "last_tender_amount" field.
func LastTenderAmountGTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldLastTenderAmount, v))
}

// LastTenderAmountLT applies the LT predicate on the "last_tender_amount" field.
func LastTenderAmountLT(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldLastTenderAmount, v))
}

// LastTenderAmountLTE applies the LTE predicate on the "last_tender_amount" field.
func LastTenderAmountLTE(v float64) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldLastTenderAmount, v))
}

// LastTenderAmountIsNil applies the IsNil predicate on the "last_tender_amount" field.
func LastTenderAmountIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldLastTenderAmount))
}

// LastTenderAmountNotNil applies the NotNil predicate on the "last_tender_amount" field.
func LastTenderAmountNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldLastTenderAmount))
}

// TenderIDEQ applies the EQ predicate on the "tender_id" field.
func TenderIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldTenderID, v))
}

// TenderIDNEQ applies the NEQ predicate on the "tender_id" field.
func TenderIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldTenderID, v))
}

// TenderIDIn applies the In predicate on the "tender_id" field.
func TenderIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldTenderID, vs...))
}

// TenderIDNotIn applies the NotIn predicate on the "tender_id" field.
func TenderIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldTenderID, vs...))
}

// TenderIDGT applies the GT predicate on the "tender_id" field.
func TenderIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldTenderID, v))
}

// TenderIDGTE applies the GTE predicate on the "tender_id" field.
func TenderIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldTenderID, v))
}

// TenderIDLT applies the LT predicate on the "tender_id" field.
func TenderIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldTenderID, v))
}

// TenderIDLTE applies the LTE predicate on the "tender_id" field.
func TenderIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldTenderID, v))
}

// TenderIDContains applies the Contains predicate on the "tender_id" field.
func TenderIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldTenderID, vc))
}

// TenderIDHasPrefix applies the HasPrefix predicate on the "tender_id" field.
func TenderIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldTenderID, vc))
}

// TenderIDHasSuffix applies the HasSuffix predicate on the "tender_id" field.
func TenderIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldTenderID, vc))
}

// TenderIDEqualFold applies the EqualFold predicate on the "tender_id" field.
func TenderIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldTenderID, vc))
}

// TenderIDContainsFold applies the ContainsFold predicate on the "tender_id" field.
func TenderIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldTenderID, vc))
}

// ProvinceIDEQ applies the EQ predicate on the "province_id" field.
func ProvinceIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldProvinceID, v))
}

// ProvinceIDNEQ applies the NEQ predicate on the "province_id" field.
func ProvinceIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldProvinceID, v))
}

// ProvinceIDIn applies the In predicate on the "province_id" field.
func ProvinceIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldProvinceID, vs...))
}

// ProvinceIDNotIn applies the NotIn predicate on the "province_id" field.
func ProvinceIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldProvinceID, vs...))
}

// ProvinceIDGT applies the GT predicate on the "province_id" field.
func ProvinceIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldProvinceID, v))
}

// ProvinceIDGTE applies the GTE predicate on the "province_id" field.
func ProvinceIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldProvinceID, v))
}

// ProvinceIDLT applies the LT predicate on the "province_id" field.
func ProvinceIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldProvinceID, v))
}

// ProvinceIDLTE applies the LTE predicate on the "province_id" field.
func ProvinceIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldProvinceID, v))
}

// ProvinceIDContains applies the Contains predicate on the "province_id" field.
func ProvinceIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldProvinceID, vc))
}

// ProvinceIDHasPrefix applies the HasPrefix predicate on the "province_id" field.
func ProvinceIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldProvinceID, vc))
}

// ProvinceIDHasSuffix applies the HasSuffix predicate on the "province_id" field.
func ProvinceIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldProvinceID, vc))
}

// ProvinceIDIsNil applies the IsNil predicate on the "province_id" field.
func ProvinceIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldProvinceID))
}

// ProvinceIDNotNil applies the NotNil predicate on the "province_id" field.
func ProvinceIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldProvinceID))
}

// ProvinceIDEqualFold applies the EqualFold predicate on the "province_id" field.
func ProvinceIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldProvinceID, vc))
}

// ProvinceIDContainsFold applies the ContainsFold predicate on the "province_id" field.
func ProvinceIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldProvinceID, vc))
}

// CityIDEQ applies the EQ predicate on the "city_id" field.
func CityIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCityID, v))
}

// CityIDNEQ applies the NEQ predicate on the "city_id" field.
func CityIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCityID, v))
}

// CityIDIn applies the In predicate on the "city_id" field.
func CityIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCityID, vs...))
}

// CityIDNotIn applies the NotIn predicate on the "city_id" field.
func CityIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCityID, vs...))
}

// CityIDGT applies the GT predicate on the "city_id" field.
func CityIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCityID, v))
}

// CityIDGTE applies the GTE predicate on the "city_id" field.
func CityIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCityID, v))
}

// CityIDLT applies the LT predicate on the "city_id" field.
func CityIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCityID, v))
}

// CityIDLTE applies the LTE predicate on the "city_id" field.
func CityIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCityID, v))
}

// CityIDContains applies the Contains predicate on the "city_id" field.
func CityIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldCityID, vc))
}

// CityIDHasPrefix applies the HasPrefix predicate on the "city_id" field.
func CityIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCityID, vc))
}

// CityIDHasSuffix applies the HasSuffix predicate on the "city_id" field.
func CityIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCityID, vc))
}

// CityIDIsNil applies the IsNil predicate on the "city_id" field.
func CityIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCityID))
}

// CityIDNotNil applies the NotNil predicate on the "city_id" field.
func CityIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCityID))
}

// CityIDEqualFold applies the EqualFold predicate on the "city_id" field.
func CityIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCityID, vc))
}

// CityIDContainsFold applies the ContainsFold predicate on the "city_id" field.
func CityIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCityID, vc))
}

// DistrictIDEQ applies the EQ predicate on the "district_id" field.
func DistrictIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldDistrictID, v))
}

// DistrictIDNEQ applies the NEQ predicate on the "district_id" field.
func DistrictIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldDistrictID, v))
}

// DistrictIDIn applies the In predicate on the "district_id" field.
func DistrictIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldDistrictID, vs...))
}

// DistrictIDNotIn applies the NotIn predicate on the "district_id" field.
func DistrictIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldDistrictID, vs...))
}

// DistrictIDGT applies the GT predicate on the "district_id" field.
func DistrictIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldDistrictID, v))
}

// DistrictIDGTE applies the GTE predicate on the "district_id" field.
func DistrictIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldDistrictID, v))
}

// DistrictIDLT applies the LT predicate on the "district_id" field.
func DistrictIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldDistrictID, v))
}

// DistrictIDLTE applies the LTE predicate on the "district_id" field.
func DistrictIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldDistrictID, v))
}

// DistrictIDContains applies the Contains predicate on the "district_id" field.
func DistrictIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldDistrictID, vc))
}

// DistrictIDHasPrefix applies the HasPrefix predicate on the "district_id" field.
func DistrictIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldDistrictID, vc))
}

// DistrictIDHasSuffix applies the HasSuffix predicate on the "district_id" field.
func DistrictIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldDistrictID, vc))
}

// DistrictIDIsNil applies the IsNil predicate on the "district_id" field.
func DistrictIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldDistrictID))
}

// DistrictIDNotNil applies the NotNil predicate on the "district_id" field.
func DistrictIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldDistrictID))
}

// DistrictIDEqualFold applies the EqualFold predicate on the "district_id" field.
func DistrictIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldDistrictID, vc))
}

// DistrictIDContainsFold applies the ContainsFold predicate on the "district_id" field.
func DistrictIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldDistrictID, vc))
}

// CustomerIDEQ applies the EQ predicate on the "customer_id" field.
func CustomerIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCustomerID, v))
}

// CustomerIDNEQ applies the NEQ predicate on the "customer_id" field.
func CustomerIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCustomerID, v))
}

// CustomerIDIn applies the In predicate on the "customer_id" field.
func CustomerIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCustomerID, vs...))
}

// CustomerIDNotIn applies the NotIn predicate on the "customer_id" field.
func CustomerIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCustomerID, vs...))
}

// CustomerIDGT applies the GT predicate on the "customer_id" field.
func CustomerIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCustomerID, v))
}

// CustomerIDGTE applies the GTE predicate on the "customer_id" field.
func CustomerIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCustomerID, v))
}

// CustomerIDLT applies the LT predicate on the "customer_id" field.
func CustomerIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCustomerID, v))
}

// CustomerIDLTE applies the LTE predicate on the "customer_id" field.
func CustomerIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCustomerID, v))
}

// CustomerIDContains applies the Contains predicate on the "customer_id" field.
func CustomerIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldCustomerID, vc))
}

// CustomerIDHasPrefix applies the HasPrefix predicate on the "customer_id" field.
func CustomerIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCustomerID, vc))
}

// CustomerIDHasSuffix applies the HasSuffix predicate on the "customer_id" field.
func CustomerIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCustomerID, vc))
}

// CustomerIDIsNil applies the IsNil predicate on the "customer_id" field.
func CustomerIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCustomerID))
}

// CustomerIDNotNil applies the NotNil predicate on the "customer_id" field.
func CustomerIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCustomerID))
}

// CustomerIDEqualFold applies the EqualFold predicate on the "customer_id" field.
func CustomerIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCustomerID, vc))
}

// CustomerIDContainsFold applies the ContainsFold predicate on the "customer_id" field.
func CustomerIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCustomerID, vc))
}

// FinderIDEQ applies the EQ predicate on the "finder_id" field.
func FinderIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldFinderID, v))
}

// FinderIDNEQ applies the NEQ predicate on the "finder_id" field.
func FinderIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldFinderID, v))
}

// FinderIDIn applies the In predicate on the "finder_id" field.
func FinderIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldFinderID, vs...))
}

// FinderIDNotIn applies the NotIn predicate on the "finder_id" field.
func FinderIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldFinderID, vs...))
}

// FinderIDGT applies the GT predicate on the "finder_id" field.
func FinderIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldFinderID, v))
}

// FinderIDGTE applies the GTE predicate on the "finder_id" field.
func FinderIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldFinderID, v))
}

// FinderIDLT applies the LT predicate on the "finder_id" field.
func FinderIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldFinderID, v))
}

// FinderIDLTE applies the LTE predicate on the "finder_id" field.
func FinderIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldFinderID, v))
}

// FinderIDContains applies the Contains predicate on the "finder_id" field.
func FinderIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldFinderID, vc))
}

// FinderIDHasPrefix applies the HasPrefix predicate on the "finder_id" field.
func FinderIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldFinderID, vc))
}

// FinderIDHasSuffix applies the HasSuffix predicate on the "finder_id" field.
func FinderIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldFinderID, vc))
}

// FinderIDIsNil applies the IsNil predicate on the "finder_id" field.
func FinderIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldFinderID))
}

// FinderIDNotNil applies the NotNil predicate on the "finder_id" field.
func FinderIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldFinderID))
}

// FinderIDEqualFold applies the EqualFold predicate on the "finder_id" field.
func FinderIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldFinderID, vc))
}

// FinderIDContainsFold applies the ContainsFold predicate on the "finder_id" field.
func FinderIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldFinderID, vc))
}

// CreatedByIDEQ applies the EQ predicate on the "created_by_id" field.
func CreatedByIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldCreatedByID, v))
}

// CreatedByIDNEQ applies the NEQ predicate on the "created_by_id" field.
func CreatedByIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldCreatedByID, v))
}

// CreatedByIDIn applies the In predicate on the "created_by_id" field.
func CreatedByIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldCreatedByID, vs...))
}

// CreatedByIDNotIn applies the NotIn predicate on the "created_by_id" field.
func CreatedByIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldCreatedByID, vs...))
}

// CreatedByIDGT applies the GT predicate on the "created_by_id" field.
func CreatedByIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldCreatedByID, v))
}

// CreatedByIDGTE applies the GTE predicate on the "created_by_id" field.
func CreatedByIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldCreatedByID, v))
}

// CreatedByIDLT applies the LT predicate on the "created_by_id" field.
func CreatedByIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldCreatedByID, v))
}

// CreatedByIDLTE applies the LTE predicate on the "created_by_id" field.
func CreatedByIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldCreatedByID, v))
}

// CreatedByIDContains applies the Contains predicate on the "created_by_id" field.
func CreatedByIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldCreatedByID, vc))
}

// CreatedByIDHasPrefix applies the HasPrefix predicate on the "created_by_id" field.
func CreatedByIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldCreatedByID, vc))
}

// CreatedByIDHasSuffix applies the HasSuffix predicate on the "created_by_id" field.
func CreatedByIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldCreatedByID, vc))
}

// CreatedByIDIsNil applies the IsNil predicate on the "created_by_id" field.
func CreatedByIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldCreatedByID))
}

// CreatedByIDNotNil applies the NotNil predicate on the "created_by_id" field.
func CreatedByIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldCreatedByID))
}

// CreatedByIDEqualFold applies the EqualFold predicate on the "created_by_id" field.
func CreatedByIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldCreatedByID, vc))
}

// CreatedByIDContainsFold applies the ContainsFold predicate on the "created_by_id" field.
func CreatedByIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldCreatedByID, vc))
}

// ApproverIDEQ applies the EQ predicate on the "approver_id" field.
func ApproverIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldApproverID, v))
}

// ApproverIDNEQ applies the NEQ predicate on the "approver_id" field.
func ApproverIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldApproverID, v))
}

// ApproverIDIn applies the In predicate on the "approver_id" field.
func ApproverIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldApproverID, vs...))
}

// ApproverIDNotIn applies the NotIn predicate on the "approver_id" field.
func ApproverIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldApproverID, vs...))
}

// ApproverIDGT applies the GT predicate on the "approver_id" field.
func ApproverIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldApproverID, v))
}

// ApproverIDGTE applies the GTE predicate on the "approver_id" field.
func ApproverIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldApproverID, v))
}

// ApproverIDLT applies the LT predicate on the "approver_id" field.
func ApproverIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldApproverID, v))
}

// ApproverIDLTE applies the LTE predicate on the "approver_id" field.
func ApproverIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldApproverID, v))
}

// ApproverIDContains applies the Contains predicate on the "approver_id" field.
func ApproverIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldApproverID, vc))
}

// ApproverIDHasPrefix applies the HasPrefix predicate on the "approver_id" field.
func ApproverIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldApproverID, vc))
}

// ApproverIDHasSuffix applies the HasSuffix predicate on the "approver_id" field.
func ApproverIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldApproverID, vc))
}

// ApproverIDIsNil applies the IsNil predicate on the "approver_id" field.
func ApproverIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldApproverID))
}

// ApproverIDNotNil applies the NotNil predicate on the "approver_id" field.
func ApproverIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldApproverID))
}

// ApproverIDEqualFold applies the EqualFold predicate on the "approver_id" field.
func ApproverIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldApproverID, vc))
}

// ApproverIDContainsFold applies the ContainsFold predicate on the "approver_id" field.
func ApproverIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldApproverID, vc))
}

// UpdatedByIDEQ applies the EQ predicate on the "updated_by_id" field.
func UpdatedByIDEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldEQ(FieldUpdatedByID, v))
}

// UpdatedByIDNEQ applies the NEQ predicate on the "updated_by_id" field.
func UpdatedByIDNEQ(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNEQ(FieldUpdatedByID, v))
}

// UpdatedByIDIn applies the In predicate on the "updated_by_id" field.
func UpdatedByIDIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDNotIn applies the NotIn predicate on the "updated_by_id" field.
func UpdatedByIDNotIn(vs ...xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDGT applies the GT predicate on the "updated_by_id" field.
func UpdatedByIDGT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGT(FieldUpdatedByID, v))
}

// UpdatedByIDGTE applies the GTE predicate on the "updated_by_id" field.
func UpdatedByIDGTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldGTE(FieldUpdatedByID, v))
}

// UpdatedByIDLT applies the LT predicate on the "updated_by_id" field.
func UpdatedByIDLT(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLT(FieldUpdatedByID, v))
}

// UpdatedByIDLTE applies the LTE predicate on the "updated_by_id" field.
func UpdatedByIDLTE(v xid.ID) predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldLTE(FieldUpdatedByID, v))
}

// UpdatedByIDContains applies the Contains predicate on the "updated_by_id" field.
func UpdatedByIDContains(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContains(FieldUpdatedByID, vc))
}

// UpdatedByIDHasPrefix applies the HasPrefix predicate on the "updated_by_id" field.
func UpdatedByIDHasPrefix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasPrefix(FieldUpdatedByID, vc))
}

// UpdatedByIDHasSuffix applies the HasSuffix predicate on the "updated_by_id" field.
func UpdatedByIDHasSuffix(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldHasSuffix(FieldUpdatedByID, vc))
}

// UpdatedByIDIsNil applies the IsNil predicate on the "updated_by_id" field.
func UpdatedByIDIsNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldIsNull(FieldUpdatedByID))
}

// UpdatedByIDNotNil applies the NotNil predicate on the "updated_by_id" field.
func UpdatedByIDNotNil() predicate.TenderProfile {
	return predicate.TenderProfile(sql.FieldNotNull(FieldUpdatedByID))
}

// UpdatedByIDEqualFold applies the EqualFold predicate on the "updated_by_id" field.
func UpdatedByIDEqualFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldEqualFold(FieldUpdatedByID, vc))
}

// UpdatedByIDContainsFold applies the ContainsFold predicate on the "updated_by_id" field.
func UpdatedByIDContainsFold(v xid.ID) predicate.TenderProfile {
	vc := string(v)
	return predicate.TenderProfile(sql.FieldContainsFold(FieldUpdatedByID, vc))
}

// HasTender applies the HasEdge predicate on the "tender" edge.
func HasTender() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, TenderTable, TenderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenderWith applies the HasEdge predicate on the "tender" edge with a given conditions (other predicates).
func HasTenderWith(preds ...predicate.Tender) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newTenderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCustomer applies the HasEdge predicate on the "customer" edge.
func HasCustomer() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, CustomerTable, CustomerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCustomerWith applies the HasEdge predicate on the "customer" edge with a given conditions (other predicates).
func HasCustomerWith(preds ...predicate.Customer) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newCustomerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasFinder applies the HasEdge predicate on the "finder" edge.
func HasFinder() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, FinderTable, FinderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasFinderWith applies the HasEdge predicate on the "finder" edge with a given conditions (other predicates).
func HasFinderWith(preds ...predicate.User) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newFinderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCreatedBy applies the HasEdge predicate on the "created_by" edge.
func HasCreatedBy() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, CreatedByTable, CreatedByColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCreatedByWith applies the HasEdge predicate on the "created_by" edge with a given conditions (other predicates).
func HasCreatedByWith(preds ...predicate.User) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newCreatedByStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProvince applies the HasEdge predicate on the "province" edge.
func HasProvince() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ProvinceTable, ProvinceColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProvinceWith applies the HasEdge predicate on the "province" edge with a given conditions (other predicates).
func HasProvinceWith(preds ...predicate.Province) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newProvinceStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCity applies the HasEdge predicate on the "city" edge.
func HasCity() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, CityTable, CityColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCityWith applies the HasEdge predicate on the "city" edge with a given conditions (other predicates).
func HasCityWith(preds ...predicate.City) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newCityStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasDistrict applies the HasEdge predicate on the "district" edge.
func HasDistrict() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, DistrictTable, DistrictColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDistrictWith applies the HasEdge predicate on the "district" edge with a given conditions (other predicates).
func HasDistrictWith(preds ...predicate.District) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newDistrictStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasApprover applies the HasEdge predicate on the "approver" edge.
func HasApprover() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, ApproverTable, ApproverColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasApproverWith applies the HasEdge predicate on the "approver" edge with a given conditions (other predicates).
func HasApproverWith(preds ...predicate.User) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newApproverStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasUpdatedBy applies the HasEdge predicate on the "updated_by" edge.
func HasUpdatedBy() predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, UpdatedByTable, UpdatedByColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUpdatedByWith applies the HasEdge predicate on the "updated_by" edge with a given conditions (other predicates).
func HasUpdatedByWith(preds ...predicate.User) predicate.TenderProfile {
	return predicate.TenderProfile(func(s *sql.Selector) {
		step := newUpdatedByStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TenderProfile) predicate.TenderProfile {
	return predicate.TenderProfile(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TenderProfile) predicate.TenderProfile {
	return predicate.TenderProfile(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TenderProfile) predicate.TenderProfile {
	return predicate.TenderProfile(sql.NotPredicates(p))
}
