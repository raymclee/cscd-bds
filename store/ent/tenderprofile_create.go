// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"cscd-bds/store/ent/city"
	"cscd-bds/store/ent/customer"
	"cscd-bds/store/ent/district"
	"cscd-bds/store/ent/province"
	"cscd-bds/store/ent/schema/xid"
	"cscd-bds/store/ent/tender"
	"cscd-bds/store/ent/tenderprofile"
	"cscd-bds/store/ent/user"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// TenderProfileCreate is the builder for creating a TenderProfile entity.
type TenderProfileCreate struct {
	config
	mutation *TenderProfileMutation
	hooks    []Hook
	conflict []sql.ConflictOption
}

// SetCreatedAt sets the "created_at" field.
func (tpc *TenderProfileCreate) SetCreatedAt(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetCreatedAt(t)
	return tpc
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCreatedAt(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetCreatedAt(*t)
	}
	return tpc
}

// SetUpdatedAt sets the "updated_at" field.
func (tpc *TenderProfileCreate) SetUpdatedAt(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetUpdatedAt(t)
	return tpc
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableUpdatedAt(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetUpdatedAt(*t)
	}
	return tpc
}

// SetStatus sets the "status" field.
func (tpc *TenderProfileCreate) SetStatus(i int) *TenderProfileCreate {
	tpc.mutation.SetStatus(i)
	return tpc
}

// SetNillableStatus sets the "status" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableStatus(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetStatus(*i)
	}
	return tpc
}

// SetApprovalStatus sets the "approval_status" field.
func (tpc *TenderProfileCreate) SetApprovalStatus(i int) *TenderProfileCreate {
	tpc.mutation.SetApprovalStatus(i)
	return tpc
}

// SetNillableApprovalStatus sets the "approval_status" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableApprovalStatus(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetApprovalStatus(*i)
	}
	return tpc
}

// SetApprovalMsgID sets the "approval_msg_id" field.
func (tpc *TenderProfileCreate) SetApprovalMsgID(s string) *TenderProfileCreate {
	tpc.mutation.SetApprovalMsgID(s)
	return tpc
}

// SetNillableApprovalMsgID sets the "approval_msg_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableApprovalMsgID(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetApprovalMsgID(*s)
	}
	return tpc
}

// SetName sets the "name" field.
func (tpc *TenderProfileCreate) SetName(s string) *TenderProfileCreate {
	tpc.mutation.SetName(s)
	return tpc
}

// SetEstimatedAmount sets the "estimated_amount" field.
func (tpc *TenderProfileCreate) SetEstimatedAmount(f float64) *TenderProfileCreate {
	tpc.mutation.SetEstimatedAmount(f)
	return tpc
}

// SetNillableEstimatedAmount sets the "estimated_amount" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableEstimatedAmount(f *float64) *TenderProfileCreate {
	if f != nil {
		tpc.SetEstimatedAmount(*f)
	}
	return tpc
}

// SetTenderDate sets the "tender_date" field.
func (tpc *TenderProfileCreate) SetTenderDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetTenderDate(t)
	return tpc
}

// SetNillableTenderDate sets the "tender_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetTenderDate(*t)
	}
	return tpc
}

// SetClassify sets the "classify" field.
func (tpc *TenderProfileCreate) SetClassify(i int) *TenderProfileCreate {
	tpc.mutation.SetClassify(i)
	return tpc
}

// SetNillableClassify sets the "classify" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableClassify(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetClassify(*i)
	}
	return tpc
}

// SetDiscoveryDate sets the "discovery_date" field.
func (tpc *TenderProfileCreate) SetDiscoveryDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetDiscoveryDate(t)
	return tpc
}

// SetAddress sets the "address" field.
func (tpc *TenderProfileCreate) SetAddress(s string) *TenderProfileCreate {
	tpc.mutation.SetAddress(s)
	return tpc
}

// SetNillableAddress sets the "address" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableAddress(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetAddress(*s)
	}
	return tpc
}

// SetFullAddress sets the "full_address" field.
func (tpc *TenderProfileCreate) SetFullAddress(s string) *TenderProfileCreate {
	tpc.mutation.SetFullAddress(s)
	return tpc
}

// SetNillableFullAddress sets the "full_address" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableFullAddress(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetFullAddress(*s)
	}
	return tpc
}

// SetContractor sets the "contractor" field.
func (tpc *TenderProfileCreate) SetContractor(s string) *TenderProfileCreate {
	tpc.mutation.SetContractor(s)
	return tpc
}

// SetNillableContractor sets the "contractor" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableContractor(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetContractor(*s)
	}
	return tpc
}

// SetLevelInvolved sets the "level_involved" field.
func (tpc *TenderProfileCreate) SetLevelInvolved(i int) *TenderProfileCreate {
	tpc.mutation.SetLevelInvolved(i)
	return tpc
}

// SetNillableLevelInvolved sets the "level_involved" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableLevelInvolved(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetLevelInvolved(*i)
	}
	return tpc
}

// SetSizeAndValueRating sets the "size_and_value_rating" field.
func (tpc *TenderProfileCreate) SetSizeAndValueRating(i int) *TenderProfileCreate {
	tpc.mutation.SetSizeAndValueRating(i)
	return tpc
}

// SetNillableSizeAndValueRating sets the "size_and_value_rating" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableSizeAndValueRating(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetSizeAndValueRating(*i)
	}
	return tpc
}

// SetSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field.
func (tpc *TenderProfileCreate) SetSizeAndValueRatingOverview(s string) *TenderProfileCreate {
	tpc.mutation.SetSizeAndValueRatingOverview(s)
	return tpc
}

// SetNillableSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableSizeAndValueRatingOverview(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetSizeAndValueRatingOverview(*s)
	}
	return tpc
}

// SetCreditAndPaymentRating sets the "credit_and_payment_rating" field.
func (tpc *TenderProfileCreate) SetCreditAndPaymentRating(i int) *TenderProfileCreate {
	tpc.mutation.SetCreditAndPaymentRating(i)
	return tpc
}

// SetNillableCreditAndPaymentRating sets the "credit_and_payment_rating" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCreditAndPaymentRating(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetCreditAndPaymentRating(*i)
	}
	return tpc
}

// SetCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field.
func (tpc *TenderProfileCreate) SetCreditAndPaymentRatingOverview(s string) *TenderProfileCreate {
	tpc.mutation.SetCreditAndPaymentRatingOverview(s)
	return tpc
}

// SetNillableCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCreditAndPaymentRatingOverview(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCreditAndPaymentRatingOverview(*s)
	}
	return tpc
}

// SetTimeLimitRating sets the "time_limit_rating" field.
func (tpc *TenderProfileCreate) SetTimeLimitRating(i int) *TenderProfileCreate {
	tpc.mutation.SetTimeLimitRating(i)
	return tpc
}

// SetNillableTimeLimitRating sets the "time_limit_rating" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTimeLimitRating(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetTimeLimitRating(*i)
	}
	return tpc
}

// SetTimeLimitRatingOverview sets the "time_limit_rating_overview" field.
func (tpc *TenderProfileCreate) SetTimeLimitRatingOverview(s string) *TenderProfileCreate {
	tpc.mutation.SetTimeLimitRatingOverview(s)
	return tpc
}

// SetNillableTimeLimitRatingOverview sets the "time_limit_rating_overview" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTimeLimitRatingOverview(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTimeLimitRatingOverview(*s)
	}
	return tpc
}

// SetCustomerRelationshipRating sets the "customer_relationship_rating" field.
func (tpc *TenderProfileCreate) SetCustomerRelationshipRating(i int) *TenderProfileCreate {
	tpc.mutation.SetCustomerRelationshipRating(i)
	return tpc
}

// SetNillableCustomerRelationshipRating sets the "customer_relationship_rating" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCustomerRelationshipRating(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetCustomerRelationshipRating(*i)
	}
	return tpc
}

// SetCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field.
func (tpc *TenderProfileCreate) SetCustomerRelationshipRatingOverview(s string) *TenderProfileCreate {
	tpc.mutation.SetCustomerRelationshipRatingOverview(s)
	return tpc
}

// SetNillableCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCustomerRelationshipRatingOverview(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCustomerRelationshipRatingOverview(*s)
	}
	return tpc
}

// SetCompetitivePartnershipRating sets the "competitive_partnership_rating" field.
func (tpc *TenderProfileCreate) SetCompetitivePartnershipRating(i int) *TenderProfileCreate {
	tpc.mutation.SetCompetitivePartnershipRating(i)
	return tpc
}

// SetNillableCompetitivePartnershipRating sets the "competitive_partnership_rating" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCompetitivePartnershipRating(i *int) *TenderProfileCreate {
	if i != nil {
		tpc.SetCompetitivePartnershipRating(*i)
	}
	return tpc
}

// SetCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field.
func (tpc *TenderProfileCreate) SetCompetitivePartnershipRatingOverview(s string) *TenderProfileCreate {
	tpc.mutation.SetCompetitivePartnershipRatingOverview(s)
	return tpc
}

// SetNillableCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCompetitivePartnershipRatingOverview(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCompetitivePartnershipRatingOverview(*s)
	}
	return tpc
}

// SetPrepareToBid sets the "prepare_to_bid" field.
func (tpc *TenderProfileCreate) SetPrepareToBid(b bool) *TenderProfileCreate {
	tpc.mutation.SetPrepareToBid(b)
	return tpc
}

// SetNillablePrepareToBid sets the "prepare_to_bid" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillablePrepareToBid(b *bool) *TenderProfileCreate {
	if b != nil {
		tpc.SetPrepareToBid(*b)
	}
	return tpc
}

// SetProjectCode sets the "project_code" field.
func (tpc *TenderProfileCreate) SetProjectCode(s string) *TenderProfileCreate {
	tpc.mutation.SetProjectCode(s)
	return tpc
}

// SetNillableProjectCode sets the "project_code" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableProjectCode(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetProjectCode(*s)
	}
	return tpc
}

// SetProjectType sets the "project_type" field.
func (tpc *TenderProfileCreate) SetProjectType(s string) *TenderProfileCreate {
	tpc.mutation.SetProjectType(s)
	return tpc
}

// SetNillableProjectType sets the "project_type" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableProjectType(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetProjectType(*s)
	}
	return tpc
}

// SetProjectDefinition sets the "project_definition" field.
func (tpc *TenderProfileCreate) SetProjectDefinition(s string) *TenderProfileCreate {
	tpc.mutation.SetProjectDefinition(s)
	return tpc
}

// SetNillableProjectDefinition sets the "project_definition" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableProjectDefinition(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetProjectDefinition(*s)
	}
	return tpc
}

// SetEstimatedProjectStartDate sets the "estimated_project_start_date" field.
func (tpc *TenderProfileCreate) SetEstimatedProjectStartDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetEstimatedProjectStartDate(t)
	return tpc
}

// SetNillableEstimatedProjectStartDate sets the "estimated_project_start_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableEstimatedProjectStartDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetEstimatedProjectStartDate(*t)
	}
	return tpc
}

// SetEstimatedProjectEndDate sets the "estimated_project_end_date" field.
func (tpc *TenderProfileCreate) SetEstimatedProjectEndDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetEstimatedProjectEndDate(t)
	return tpc
}

// SetNillableEstimatedProjectEndDate sets the "estimated_project_end_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableEstimatedProjectEndDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetEstimatedProjectEndDate(*t)
	}
	return tpc
}

// SetAttachments sets the "attachments" field.
func (tpc *TenderProfileCreate) SetAttachments(s []string) *TenderProfileCreate {
	tpc.mutation.SetAttachments(s)
	return tpc
}

// SetGeoCoordinate sets the "geo_coordinate" field.
func (tpc *TenderProfileCreate) SetGeoCoordinate(f []float64) *TenderProfileCreate {
	tpc.mutation.SetGeoCoordinate(f)
	return tpc
}

// SetGeoBounds sets the "geo_bounds" field.
func (tpc *TenderProfileCreate) SetGeoBounds(f [][]float64) *TenderProfileCreate {
	tpc.mutation.SetGeoBounds(f)
	return tpc
}

// SetRemark sets the "remark" field.
func (tpc *TenderProfileCreate) SetRemark(s string) *TenderProfileCreate {
	tpc.mutation.SetRemark(s)
	return tpc
}

// SetNillableRemark sets the "remark" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableRemark(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetRemark(*s)
	}
	return tpc
}

// SetImages sets the "images" field.
func (tpc *TenderProfileCreate) SetImages(s []string) *TenderProfileCreate {
	tpc.mutation.SetImages(s)
	return tpc
}

// SetTenderSituations sets the "tender_situations" field.
func (tpc *TenderProfileCreate) SetTenderSituations(s string) *TenderProfileCreate {
	tpc.mutation.SetTenderSituations(s)
	return tpc
}

// SetNillableTenderSituations sets the "tender_situations" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderSituations(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTenderSituations(*s)
	}
	return tpc
}

// SetOwnerSituations sets the "owner_situations" field.
func (tpc *TenderProfileCreate) SetOwnerSituations(s string) *TenderProfileCreate {
	tpc.mutation.SetOwnerSituations(s)
	return tpc
}

// SetNillableOwnerSituations sets the "owner_situations" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableOwnerSituations(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetOwnerSituations(*s)
	}
	return tpc
}

// SetBiddingInstructions sets the "bidding_instructions" field.
func (tpc *TenderProfileCreate) SetBiddingInstructions(s string) *TenderProfileCreate {
	tpc.mutation.SetBiddingInstructions(s)
	return tpc
}

// SetNillableBiddingInstructions sets the "bidding_instructions" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableBiddingInstructions(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetBiddingInstructions(*s)
	}
	return tpc
}

// SetCompetitorSituations sets the "competitor_situations" field.
func (tpc *TenderProfileCreate) SetCompetitorSituations(s string) *TenderProfileCreate {
	tpc.mutation.SetCompetitorSituations(s)
	return tpc
}

// SetNillableCompetitorSituations sets the "competitor_situations" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCompetitorSituations(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCompetitorSituations(*s)
	}
	return tpc
}

// SetCostEngineer sets the "cost_engineer" field.
func (tpc *TenderProfileCreate) SetCostEngineer(s string) *TenderProfileCreate {
	tpc.mutation.SetCostEngineer(s)
	return tpc
}

// SetNillableCostEngineer sets the "cost_engineer" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCostEngineer(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCostEngineer(*s)
	}
	return tpc
}

// SetTenderForm sets the "tender_form" field.
func (tpc *TenderProfileCreate) SetTenderForm(s string) *TenderProfileCreate {
	tpc.mutation.SetTenderForm(s)
	return tpc
}

// SetNillableTenderForm sets the "tender_form" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderForm(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTenderForm(*s)
	}
	return tpc
}

// SetContractForm sets the "contract_form" field.
func (tpc *TenderProfileCreate) SetContractForm(s string) *TenderProfileCreate {
	tpc.mutation.SetContractForm(s)
	return tpc
}

// SetNillableContractForm sets the "contract_form" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableContractForm(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetContractForm(*s)
	}
	return tpc
}

// SetManagementCompany sets the "management_company" field.
func (tpc *TenderProfileCreate) SetManagementCompany(s string) *TenderProfileCreate {
	tpc.mutation.SetManagementCompany(s)
	return tpc
}

// SetNillableManagementCompany sets the "management_company" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableManagementCompany(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetManagementCompany(*s)
	}
	return tpc
}

// SetTenderingAgency sets the "tendering_agency" field.
func (tpc *TenderProfileCreate) SetTenderingAgency(s string) *TenderProfileCreate {
	tpc.mutation.SetTenderingAgency(s)
	return tpc
}

// SetNillableTenderingAgency sets the "tendering_agency" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderingAgency(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTenderingAgency(*s)
	}
	return tpc
}

// SetBiddingDate sets the "bidding_date" field.
func (tpc *TenderProfileCreate) SetBiddingDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetBiddingDate(t)
	return tpc
}

// SetNillableBiddingDate sets the "bidding_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableBiddingDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetBiddingDate(*t)
	}
	return tpc
}

// SetFacadeConsultant sets the "facade_consultant" field.
func (tpc *TenderProfileCreate) SetFacadeConsultant(s string) *TenderProfileCreate {
	tpc.mutation.SetFacadeConsultant(s)
	return tpc
}

// SetNillableFacadeConsultant sets the "facade_consultant" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableFacadeConsultant(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetFacadeConsultant(*s)
	}
	return tpc
}

// SetDesignUnit sets the "design_unit" field.
func (tpc *TenderProfileCreate) SetDesignUnit(s string) *TenderProfileCreate {
	tpc.mutation.SetDesignUnit(s)
	return tpc
}

// SetNillableDesignUnit sets the "design_unit" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableDesignUnit(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetDesignUnit(*s)
	}
	return tpc
}

// SetConsultingFirm sets the "consulting_firm" field.
func (tpc *TenderProfileCreate) SetConsultingFirm(s string) *TenderProfileCreate {
	tpc.mutation.SetConsultingFirm(s)
	return tpc
}

// SetNillableConsultingFirm sets the "consulting_firm" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableConsultingFirm(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetConsultingFirm(*s)
	}
	return tpc
}

// SetKeyProject sets the "key_project" field.
func (tpc *TenderProfileCreate) SetKeyProject(b bool) *TenderProfileCreate {
	tpc.mutation.SetKeyProject(b)
	return tpc
}

// SetNillableKeyProject sets the "key_project" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableKeyProject(b *bool) *TenderProfileCreate {
	if b != nil {
		tpc.SetKeyProject(*b)
	}
	return tpc
}

// SetCurrentProgress sets the "current_progress" field.
func (tpc *TenderProfileCreate) SetCurrentProgress(s string) *TenderProfileCreate {
	tpc.mutation.SetCurrentProgress(s)
	return tpc
}

// SetNillableCurrentProgress sets the "current_progress" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCurrentProgress(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetCurrentProgress(*s)
	}
	return tpc
}

// SetTenderWinCompany sets the "tender_win_company" field.
func (tpc *TenderProfileCreate) SetTenderWinCompany(s string) *TenderProfileCreate {
	tpc.mutation.SetTenderWinCompany(s)
	return tpc
}

// SetNillableTenderWinCompany sets the "tender_win_company" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderWinCompany(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTenderWinCompany(*s)
	}
	return tpc
}

// SetTenderCode sets the "tender_code" field.
func (tpc *TenderProfileCreate) SetTenderCode(s string) *TenderProfileCreate {
	tpc.mutation.SetTenderCode(s)
	return tpc
}

// SetNillableTenderCode sets the "tender_code" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderCode(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetTenderCode(*s)
	}
	return tpc
}

// SetArchitect sets the "architect" field.
func (tpc *TenderProfileCreate) SetArchitect(s string) *TenderProfileCreate {
	tpc.mutation.SetArchitect(s)
	return tpc
}

// SetNillableArchitect sets the "architect" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableArchitect(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetArchitect(*s)
	}
	return tpc
}

// SetDeveloper sets the "developer" field.
func (tpc *TenderProfileCreate) SetDeveloper(s string) *TenderProfileCreate {
	tpc.mutation.SetDeveloper(s)
	return tpc
}

// SetNillableDeveloper sets the "developer" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableDeveloper(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetDeveloper(*s)
	}
	return tpc
}

// SetTenderClosingDate sets the "tender_closing_date" field.
func (tpc *TenderProfileCreate) SetTenderClosingDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetTenderClosingDate(t)
	return tpc
}

// SetNillableTenderClosingDate sets the "tender_closing_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderClosingDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetTenderClosingDate(*t)
	}
	return tpc
}

// SetConstructionArea sets the "construction_area" field.
func (tpc *TenderProfileCreate) SetConstructionArea(s string) *TenderProfileCreate {
	tpc.mutation.SetConstructionArea(s)
	return tpc
}

// SetNillableConstructionArea sets the "construction_area" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableConstructionArea(s *string) *TenderProfileCreate {
	if s != nil {
		tpc.SetConstructionArea(*s)
	}
	return tpc
}

// SetTenderWinDate sets the "tender_win_date" field.
func (tpc *TenderProfileCreate) SetTenderWinDate(t time.Time) *TenderProfileCreate {
	tpc.mutation.SetTenderWinDate(t)
	return tpc
}

// SetNillableTenderWinDate sets the "tender_win_date" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderWinDate(t *time.Time) *TenderProfileCreate {
	if t != nil {
		tpc.SetTenderWinDate(*t)
	}
	return tpc
}

// SetTenderWinAmount sets the "tender_win_amount" field.
func (tpc *TenderProfileCreate) SetTenderWinAmount(f float64) *TenderProfileCreate {
	tpc.mutation.SetTenderWinAmount(f)
	return tpc
}

// SetNillableTenderWinAmount sets the "tender_win_amount" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableTenderWinAmount(f *float64) *TenderProfileCreate {
	if f != nil {
		tpc.SetTenderWinAmount(*f)
	}
	return tpc
}

// SetLastTenderAmount sets the "last_tender_amount" field.
func (tpc *TenderProfileCreate) SetLastTenderAmount(f float64) *TenderProfileCreate {
	tpc.mutation.SetLastTenderAmount(f)
	return tpc
}

// SetNillableLastTenderAmount sets the "last_tender_amount" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableLastTenderAmount(f *float64) *TenderProfileCreate {
	if f != nil {
		tpc.SetLastTenderAmount(*f)
	}
	return tpc
}

// SetTenderID sets the "tender_id" field.
func (tpc *TenderProfileCreate) SetTenderID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetTenderID(x)
	return tpc
}

// SetProvinceID sets the "province_id" field.
func (tpc *TenderProfileCreate) SetProvinceID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetProvinceID(x)
	return tpc
}

// SetNillableProvinceID sets the "province_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableProvinceID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetProvinceID(*x)
	}
	return tpc
}

// SetCityID sets the "city_id" field.
func (tpc *TenderProfileCreate) SetCityID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetCityID(x)
	return tpc
}

// SetNillableCityID sets the "city_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCityID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetCityID(*x)
	}
	return tpc
}

// SetDistrictID sets the "district_id" field.
func (tpc *TenderProfileCreate) SetDistrictID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetDistrictID(x)
	return tpc
}

// SetNillableDistrictID sets the "district_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableDistrictID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetDistrictID(*x)
	}
	return tpc
}

// SetCustomerID sets the "customer_id" field.
func (tpc *TenderProfileCreate) SetCustomerID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetCustomerID(x)
	return tpc
}

// SetNillableCustomerID sets the "customer_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCustomerID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetCustomerID(*x)
	}
	return tpc
}

// SetFinderID sets the "finder_id" field.
func (tpc *TenderProfileCreate) SetFinderID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetFinderID(x)
	return tpc
}

// SetNillableFinderID sets the "finder_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableFinderID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetFinderID(*x)
	}
	return tpc
}

// SetCreatedByID sets the "created_by_id" field.
func (tpc *TenderProfileCreate) SetCreatedByID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetCreatedByID(x)
	return tpc
}

// SetNillableCreatedByID sets the "created_by_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableCreatedByID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetCreatedByID(*x)
	}
	return tpc
}

// SetApproverID sets the "approver_id" field.
func (tpc *TenderProfileCreate) SetApproverID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetApproverID(x)
	return tpc
}

// SetNillableApproverID sets the "approver_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableApproverID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetApproverID(*x)
	}
	return tpc
}

// SetUpdatedByID sets the "updated_by_id" field.
func (tpc *TenderProfileCreate) SetUpdatedByID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetUpdatedByID(x)
	return tpc
}

// SetNillableUpdatedByID sets the "updated_by_id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableUpdatedByID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetUpdatedByID(*x)
	}
	return tpc
}

// SetID sets the "id" field.
func (tpc *TenderProfileCreate) SetID(x xid.ID) *TenderProfileCreate {
	tpc.mutation.SetID(x)
	return tpc
}

// SetNillableID sets the "id" field if the given value is not nil.
func (tpc *TenderProfileCreate) SetNillableID(x *xid.ID) *TenderProfileCreate {
	if x != nil {
		tpc.SetID(*x)
	}
	return tpc
}

// SetTender sets the "tender" edge to the Tender entity.
func (tpc *TenderProfileCreate) SetTender(t *Tender) *TenderProfileCreate {
	return tpc.SetTenderID(t.ID)
}

// SetCustomer sets the "customer" edge to the Customer entity.
func (tpc *TenderProfileCreate) SetCustomer(c *Customer) *TenderProfileCreate {
	return tpc.SetCustomerID(c.ID)
}

// SetFinder sets the "finder" edge to the User entity.
func (tpc *TenderProfileCreate) SetFinder(u *User) *TenderProfileCreate {
	return tpc.SetFinderID(u.ID)
}

// SetCreatedBy sets the "created_by" edge to the User entity.
func (tpc *TenderProfileCreate) SetCreatedBy(u *User) *TenderProfileCreate {
	return tpc.SetCreatedByID(u.ID)
}

// SetProvince sets the "province" edge to the Province entity.
func (tpc *TenderProfileCreate) SetProvince(p *Province) *TenderProfileCreate {
	return tpc.SetProvinceID(p.ID)
}

// SetCity sets the "city" edge to the City entity.
func (tpc *TenderProfileCreate) SetCity(c *City) *TenderProfileCreate {
	return tpc.SetCityID(c.ID)
}

// SetDistrict sets the "district" edge to the District entity.
func (tpc *TenderProfileCreate) SetDistrict(d *District) *TenderProfileCreate {
	return tpc.SetDistrictID(d.ID)
}

// SetApprover sets the "approver" edge to the User entity.
func (tpc *TenderProfileCreate) SetApprover(u *User) *TenderProfileCreate {
	return tpc.SetApproverID(u.ID)
}

// SetUpdatedBy sets the "updated_by" edge to the User entity.
func (tpc *TenderProfileCreate) SetUpdatedBy(u *User) *TenderProfileCreate {
	return tpc.SetUpdatedByID(u.ID)
}

// Mutation returns the TenderProfileMutation object of the builder.
func (tpc *TenderProfileCreate) Mutation() *TenderProfileMutation {
	return tpc.mutation
}

// Save creates the TenderProfile in the database.
func (tpc *TenderProfileCreate) Save(ctx context.Context) (*TenderProfile, error) {
	tpc.defaults()
	return withHooks(ctx, tpc.sqlSave, tpc.mutation, tpc.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (tpc *TenderProfileCreate) SaveX(ctx context.Context) *TenderProfile {
	v, err := tpc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (tpc *TenderProfileCreate) Exec(ctx context.Context) error {
	_, err := tpc.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (tpc *TenderProfileCreate) ExecX(ctx context.Context) {
	if err := tpc.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (tpc *TenderProfileCreate) defaults() {
	if _, ok := tpc.mutation.CreatedAt(); !ok {
		v := tenderprofile.DefaultCreatedAt()
		tpc.mutation.SetCreatedAt(v)
	}
	if _, ok := tpc.mutation.UpdatedAt(); !ok {
		v := tenderprofile.DefaultUpdatedAt()
		tpc.mutation.SetUpdatedAt(v)
	}
	if _, ok := tpc.mutation.Status(); !ok {
		v := tenderprofile.DefaultStatus
		tpc.mutation.SetStatus(v)
	}
	if _, ok := tpc.mutation.ApprovalStatus(); !ok {
		v := tenderprofile.DefaultApprovalStatus
		tpc.mutation.SetApprovalStatus(v)
	}
	if _, ok := tpc.mutation.PrepareToBid(); !ok {
		v := tenderprofile.DefaultPrepareToBid
		tpc.mutation.SetPrepareToBid(v)
	}
	if _, ok := tpc.mutation.KeyProject(); !ok {
		v := tenderprofile.DefaultKeyProject
		tpc.mutation.SetKeyProject(v)
	}
	if _, ok := tpc.mutation.ID(); !ok {
		v := tenderprofile.DefaultID()
		tpc.mutation.SetID(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (tpc *TenderProfileCreate) check() error {
	if _, ok := tpc.mutation.CreatedAt(); !ok {
		return &ValidationError{Name: "created_at", err: errors.New(`ent: missing required field "TenderProfile.created_at"`)}
	}
	if _, ok := tpc.mutation.UpdatedAt(); !ok {
		return &ValidationError{Name: "updated_at", err: errors.New(`ent: missing required field "TenderProfile.updated_at"`)}
	}
	if _, ok := tpc.mutation.Status(); !ok {
		return &ValidationError{Name: "status", err: errors.New(`ent: missing required field "TenderProfile.status"`)}
	}
	if _, ok := tpc.mutation.ApprovalStatus(); !ok {
		return &ValidationError{Name: "approval_status", err: errors.New(`ent: missing required field "TenderProfile.approval_status"`)}
	}
	if v, ok := tpc.mutation.ApprovalStatus(); ok {
		if err := tenderprofile.ApprovalStatusValidator(v); err != nil {
			return &ValidationError{Name: "approval_status", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.approval_status": %w`, err)}
		}
	}
	if _, ok := tpc.mutation.Name(); !ok {
		return &ValidationError{Name: "name", err: errors.New(`ent: missing required field "TenderProfile.name"`)}
	}
	if v, ok := tpc.mutation.Name(); ok {
		if err := tenderprofile.NameValidator(v); err != nil {
			return &ValidationError{Name: "name", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.name": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.EstimatedAmount(); ok {
		if err := tenderprofile.EstimatedAmountValidator(v); err != nil {
			return &ValidationError{Name: "estimated_amount", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.estimated_amount": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.Classify(); ok {
		if err := tenderprofile.ClassifyValidator(v); err != nil {
			return &ValidationError{Name: "classify", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.classify": %w`, err)}
		}
	}
	if _, ok := tpc.mutation.DiscoveryDate(); !ok {
		return &ValidationError{Name: "discovery_date", err: errors.New(`ent: missing required field "TenderProfile.discovery_date"`)}
	}
	if v, ok := tpc.mutation.LevelInvolved(); ok {
		if err := tenderprofile.LevelInvolvedValidator(v); err != nil {
			return &ValidationError{Name: "level_involved", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.level_involved": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.SizeAndValueRating(); ok {
		if err := tenderprofile.SizeAndValueRatingValidator(v); err != nil {
			return &ValidationError{Name: "size_and_value_rating", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.size_and_value_rating": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.CreditAndPaymentRating(); ok {
		if err := tenderprofile.CreditAndPaymentRatingValidator(v); err != nil {
			return &ValidationError{Name: "credit_and_payment_rating", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.credit_and_payment_rating": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.TimeLimitRating(); ok {
		if err := tenderprofile.TimeLimitRatingValidator(v); err != nil {
			return &ValidationError{Name: "time_limit_rating", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.time_limit_rating": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.CustomerRelationshipRating(); ok {
		if err := tenderprofile.CustomerRelationshipRatingValidator(v); err != nil {
			return &ValidationError{Name: "customer_relationship_rating", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.customer_relationship_rating": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.CompetitivePartnershipRating(); ok {
		if err := tenderprofile.CompetitivePartnershipRatingValidator(v); err != nil {
			return &ValidationError{Name: "competitive_partnership_rating", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.competitive_partnership_rating": %w`, err)}
		}
	}
	if _, ok := tpc.mutation.PrepareToBid(); !ok {
		return &ValidationError{Name: "prepare_to_bid", err: errors.New(`ent: missing required field "TenderProfile.prepare_to_bid"`)}
	}
	if _, ok := tpc.mutation.KeyProject(); !ok {
		return &ValidationError{Name: "key_project", err: errors.New(`ent: missing required field "TenderProfile.key_project"`)}
	}
	if v, ok := tpc.mutation.TenderWinAmount(); ok {
		if err := tenderprofile.TenderWinAmountValidator(v); err != nil {
			return &ValidationError{Name: "tender_win_amount", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.tender_win_amount": %w`, err)}
		}
	}
	if v, ok := tpc.mutation.LastTenderAmount(); ok {
		if err := tenderprofile.LastTenderAmountValidator(v); err != nil {
			return &ValidationError{Name: "last_tender_amount", err: fmt.Errorf(`ent: validator failed for field "TenderProfile.last_tender_amount": %w`, err)}
		}
	}
	if _, ok := tpc.mutation.TenderID(); !ok {
		return &ValidationError{Name: "tender_id", err: errors.New(`ent: missing required field "TenderProfile.tender_id"`)}
	}
	if len(tpc.mutation.TenderIDs()) == 0 {
		return &ValidationError{Name: "tender", err: errors.New(`ent: missing required edge "TenderProfile.tender"`)}
	}
	return nil
}

func (tpc *TenderProfileCreate) sqlSave(ctx context.Context) (*TenderProfile, error) {
	if err := tpc.check(); err != nil {
		return nil, err
	}
	_node, _spec := tpc.createSpec()
	if err := sqlgraph.CreateNode(ctx, tpc.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != nil {
		if id, ok := _spec.ID.Value.(*xid.ID); ok {
			_node.ID = *id
		} else if err := _node.ID.Scan(_spec.ID.Value); err != nil {
			return nil, err
		}
	}
	tpc.mutation.id = &_node.ID
	tpc.mutation.done = true
	return _node, nil
}

func (tpc *TenderProfileCreate) createSpec() (*TenderProfile, *sqlgraph.CreateSpec) {
	var (
		_node = &TenderProfile{config: tpc.config}
		_spec = sqlgraph.NewCreateSpec(tenderprofile.Table, sqlgraph.NewFieldSpec(tenderprofile.FieldID, field.TypeString))
	)
	_spec.OnConflict = tpc.conflict
	if id, ok := tpc.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = &id
	}
	if value, ok := tpc.mutation.CreatedAt(); ok {
		_spec.SetField(tenderprofile.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := tpc.mutation.UpdatedAt(); ok {
		_spec.SetField(tenderprofile.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if value, ok := tpc.mutation.Status(); ok {
		_spec.SetField(tenderprofile.FieldStatus, field.TypeInt, value)
		_node.Status = value
	}
	if value, ok := tpc.mutation.ApprovalStatus(); ok {
		_spec.SetField(tenderprofile.FieldApprovalStatus, field.TypeInt, value)
		_node.ApprovalStatus = value
	}
	if value, ok := tpc.mutation.ApprovalMsgID(); ok {
		_spec.SetField(tenderprofile.FieldApprovalMsgID, field.TypeString, value)
		_node.ApprovalMsgID = &value
	}
	if value, ok := tpc.mutation.Name(); ok {
		_spec.SetField(tenderprofile.FieldName, field.TypeString, value)
		_node.Name = value
	}
	if value, ok := tpc.mutation.EstimatedAmount(); ok {
		_spec.SetField(tenderprofile.FieldEstimatedAmount, field.TypeFloat64, value)
		_node.EstimatedAmount = &value
	}
	if value, ok := tpc.mutation.TenderDate(); ok {
		_spec.SetField(tenderprofile.FieldTenderDate, field.TypeTime, value)
		_node.TenderDate = &value
	}
	if value, ok := tpc.mutation.Classify(); ok {
		_spec.SetField(tenderprofile.FieldClassify, field.TypeInt, value)
		_node.Classify = &value
	}
	if value, ok := tpc.mutation.DiscoveryDate(); ok {
		_spec.SetField(tenderprofile.FieldDiscoveryDate, field.TypeTime, value)
		_node.DiscoveryDate = value
	}
	if value, ok := tpc.mutation.Address(); ok {
		_spec.SetField(tenderprofile.FieldAddress, field.TypeString, value)
		_node.Address = &value
	}
	if value, ok := tpc.mutation.FullAddress(); ok {
		_spec.SetField(tenderprofile.FieldFullAddress, field.TypeString, value)
		_node.FullAddress = &value
	}
	if value, ok := tpc.mutation.Contractor(); ok {
		_spec.SetField(tenderprofile.FieldContractor, field.TypeString, value)
		_node.Contractor = &value
	}
	if value, ok := tpc.mutation.LevelInvolved(); ok {
		_spec.SetField(tenderprofile.FieldLevelInvolved, field.TypeInt, value)
		_node.LevelInvolved = &value
	}
	if value, ok := tpc.mutation.SizeAndValueRating(); ok {
		_spec.SetField(tenderprofile.FieldSizeAndValueRating, field.TypeInt, value)
		_node.SizeAndValueRating = &value
	}
	if value, ok := tpc.mutation.SizeAndValueRatingOverview(); ok {
		_spec.SetField(tenderprofile.FieldSizeAndValueRatingOverview, field.TypeString, value)
		_node.SizeAndValueRatingOverview = &value
	}
	if value, ok := tpc.mutation.CreditAndPaymentRating(); ok {
		_spec.SetField(tenderprofile.FieldCreditAndPaymentRating, field.TypeInt, value)
		_node.CreditAndPaymentRating = &value
	}
	if value, ok := tpc.mutation.CreditAndPaymentRatingOverview(); ok {
		_spec.SetField(tenderprofile.FieldCreditAndPaymentRatingOverview, field.TypeString, value)
		_node.CreditAndPaymentRatingOverview = &value
	}
	if value, ok := tpc.mutation.TimeLimitRating(); ok {
		_spec.SetField(tenderprofile.FieldTimeLimitRating, field.TypeInt, value)
		_node.TimeLimitRating = &value
	}
	if value, ok := tpc.mutation.TimeLimitRatingOverview(); ok {
		_spec.SetField(tenderprofile.FieldTimeLimitRatingOverview, field.TypeString, value)
		_node.TimeLimitRatingOverview = &value
	}
	if value, ok := tpc.mutation.CustomerRelationshipRating(); ok {
		_spec.SetField(tenderprofile.FieldCustomerRelationshipRating, field.TypeInt, value)
		_node.CustomerRelationshipRating = &value
	}
	if value, ok := tpc.mutation.CustomerRelationshipRatingOverview(); ok {
		_spec.SetField(tenderprofile.FieldCustomerRelationshipRatingOverview, field.TypeString, value)
		_node.CustomerRelationshipRatingOverview = &value
	}
	if value, ok := tpc.mutation.CompetitivePartnershipRating(); ok {
		_spec.SetField(tenderprofile.FieldCompetitivePartnershipRating, field.TypeInt, value)
		_node.CompetitivePartnershipRating = &value
	}
	if value, ok := tpc.mutation.CompetitivePartnershipRatingOverview(); ok {
		_spec.SetField(tenderprofile.FieldCompetitivePartnershipRatingOverview, field.TypeString, value)
		_node.CompetitivePartnershipRatingOverview = &value
	}
	if value, ok := tpc.mutation.PrepareToBid(); ok {
		_spec.SetField(tenderprofile.FieldPrepareToBid, field.TypeBool, value)
		_node.PrepareToBid = value
	}
	if value, ok := tpc.mutation.ProjectCode(); ok {
		_spec.SetField(tenderprofile.FieldProjectCode, field.TypeString, value)
		_node.ProjectCode = &value
	}
	if value, ok := tpc.mutation.ProjectType(); ok {
		_spec.SetField(tenderprofile.FieldProjectType, field.TypeString, value)
		_node.ProjectType = &value
	}
	if value, ok := tpc.mutation.ProjectDefinition(); ok {
		_spec.SetField(tenderprofile.FieldProjectDefinition, field.TypeString, value)
		_node.ProjectDefinition = &value
	}
	if value, ok := tpc.mutation.EstimatedProjectStartDate(); ok {
		_spec.SetField(tenderprofile.FieldEstimatedProjectStartDate, field.TypeTime, value)
		_node.EstimatedProjectStartDate = &value
	}
	if value, ok := tpc.mutation.EstimatedProjectEndDate(); ok {
		_spec.SetField(tenderprofile.FieldEstimatedProjectEndDate, field.TypeTime, value)
		_node.EstimatedProjectEndDate = &value
	}
	if value, ok := tpc.mutation.Attachments(); ok {
		_spec.SetField(tenderprofile.FieldAttachments, field.TypeJSON, value)
		_node.Attachments = value
	}
	if value, ok := tpc.mutation.GeoCoordinate(); ok {
		_spec.SetField(tenderprofile.FieldGeoCoordinate, field.TypeJSON, value)
		_node.GeoCoordinate = value
	}
	if value, ok := tpc.mutation.GeoBounds(); ok {
		_spec.SetField(tenderprofile.FieldGeoBounds, field.TypeJSON, value)
		_node.GeoBounds = value
	}
	if value, ok := tpc.mutation.Remark(); ok {
		_spec.SetField(tenderprofile.FieldRemark, field.TypeString, value)
		_node.Remark = &value
	}
	if value, ok := tpc.mutation.Images(); ok {
		_spec.SetField(tenderprofile.FieldImages, field.TypeJSON, value)
		_node.Images = value
	}
	if value, ok := tpc.mutation.TenderSituations(); ok {
		_spec.SetField(tenderprofile.FieldTenderSituations, field.TypeString, value)
		_node.TenderSituations = &value
	}
	if value, ok := tpc.mutation.OwnerSituations(); ok {
		_spec.SetField(tenderprofile.FieldOwnerSituations, field.TypeString, value)
		_node.OwnerSituations = &value
	}
	if value, ok := tpc.mutation.BiddingInstructions(); ok {
		_spec.SetField(tenderprofile.FieldBiddingInstructions, field.TypeString, value)
		_node.BiddingInstructions = &value
	}
	if value, ok := tpc.mutation.CompetitorSituations(); ok {
		_spec.SetField(tenderprofile.FieldCompetitorSituations, field.TypeString, value)
		_node.CompetitorSituations = &value
	}
	if value, ok := tpc.mutation.CostEngineer(); ok {
		_spec.SetField(tenderprofile.FieldCostEngineer, field.TypeString, value)
		_node.CostEngineer = &value
	}
	if value, ok := tpc.mutation.TenderForm(); ok {
		_spec.SetField(tenderprofile.FieldTenderForm, field.TypeString, value)
		_node.TenderForm = &value
	}
	if value, ok := tpc.mutation.ContractForm(); ok {
		_spec.SetField(tenderprofile.FieldContractForm, field.TypeString, value)
		_node.ContractForm = &value
	}
	if value, ok := tpc.mutation.ManagementCompany(); ok {
		_spec.SetField(tenderprofile.FieldManagementCompany, field.TypeString, value)
		_node.ManagementCompany = &value
	}
	if value, ok := tpc.mutation.TenderingAgency(); ok {
		_spec.SetField(tenderprofile.FieldTenderingAgency, field.TypeString, value)
		_node.TenderingAgency = &value
	}
	if value, ok := tpc.mutation.BiddingDate(); ok {
		_spec.SetField(tenderprofile.FieldBiddingDate, field.TypeTime, value)
		_node.BiddingDate = &value
	}
	if value, ok := tpc.mutation.FacadeConsultant(); ok {
		_spec.SetField(tenderprofile.FieldFacadeConsultant, field.TypeString, value)
		_node.FacadeConsultant = &value
	}
	if value, ok := tpc.mutation.DesignUnit(); ok {
		_spec.SetField(tenderprofile.FieldDesignUnit, field.TypeString, value)
		_node.DesignUnit = &value
	}
	if value, ok := tpc.mutation.ConsultingFirm(); ok {
		_spec.SetField(tenderprofile.FieldConsultingFirm, field.TypeString, value)
		_node.ConsultingFirm = &value
	}
	if value, ok := tpc.mutation.KeyProject(); ok {
		_spec.SetField(tenderprofile.FieldKeyProject, field.TypeBool, value)
		_node.KeyProject = value
	}
	if value, ok := tpc.mutation.CurrentProgress(); ok {
		_spec.SetField(tenderprofile.FieldCurrentProgress, field.TypeString, value)
		_node.CurrentProgress = &value
	}
	if value, ok := tpc.mutation.TenderWinCompany(); ok {
		_spec.SetField(tenderprofile.FieldTenderWinCompany, field.TypeString, value)
		_node.TenderWinCompany = &value
	}
	if value, ok := tpc.mutation.TenderCode(); ok {
		_spec.SetField(tenderprofile.FieldTenderCode, field.TypeString, value)
		_node.TenderCode = &value
	}
	if value, ok := tpc.mutation.Architect(); ok {
		_spec.SetField(tenderprofile.FieldArchitect, field.TypeString, value)
		_node.Architect = &value
	}
	if value, ok := tpc.mutation.Developer(); ok {
		_spec.SetField(tenderprofile.FieldDeveloper, field.TypeString, value)
		_node.Developer = &value
	}
	if value, ok := tpc.mutation.TenderClosingDate(); ok {
		_spec.SetField(tenderprofile.FieldTenderClosingDate, field.TypeTime, value)
		_node.TenderClosingDate = &value
	}
	if value, ok := tpc.mutation.ConstructionArea(); ok {
		_spec.SetField(tenderprofile.FieldConstructionArea, field.TypeString, value)
		_node.ConstructionArea = &value
	}
	if value, ok := tpc.mutation.TenderWinDate(); ok {
		_spec.SetField(tenderprofile.FieldTenderWinDate, field.TypeTime, value)
		_node.TenderWinDate = &value
	}
	if value, ok := tpc.mutation.TenderWinAmount(); ok {
		_spec.SetField(tenderprofile.FieldTenderWinAmount, field.TypeFloat64, value)
		_node.TenderWinAmount = &value
	}
	if value, ok := tpc.mutation.LastTenderAmount(); ok {
		_spec.SetField(tenderprofile.FieldLastTenderAmount, field.TypeFloat64, value)
		_node.LastTenderAmount = &value
	}
	if nodes := tpc.mutation.TenderIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   tenderprofile.TenderTable,
			Columns: []string{tenderprofile.TenderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(tender.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.TenderID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.CustomerIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.CustomerTable,
			Columns: []string{tenderprofile.CustomerColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(customer.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CustomerID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.FinderIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.FinderTable,
			Columns: []string{tenderprofile.FinderColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(user.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.FinderID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.CreatedByIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.CreatedByTable,
			Columns: []string{tenderprofile.CreatedByColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(user.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CreatedByID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.ProvinceIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.ProvinceTable,
			Columns: []string{tenderprofile.ProvinceColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(province.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ProvinceID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.CityIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.CityTable,
			Columns: []string{tenderprofile.CityColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(city.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CityID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.DistrictIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.DistrictTable,
			Columns: []string{tenderprofile.DistrictColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(district.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.DistrictID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.ApproverIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.ApproverTable,
			Columns: []string{tenderprofile.ApproverColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(user.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ApproverID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := tpc.mutation.UpdatedByIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   tenderprofile.UpdatedByTable,
			Columns: []string{tenderprofile.UpdatedByColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(user.FieldID, field.TypeString),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.UpdatedByID = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.TenderProfile.Create().
//		SetCreatedAt(v).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.TenderProfileUpsert) {
//			SetCreatedAt(v+v).
//		}).
//		Exec(ctx)
func (tpc *TenderProfileCreate) OnConflict(opts ...sql.ConflictOption) *TenderProfileUpsertOne {
	tpc.conflict = opts
	return &TenderProfileUpsertOne{
		create: tpc,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (tpc *TenderProfileCreate) OnConflictColumns(columns ...string) *TenderProfileUpsertOne {
	tpc.conflict = append(tpc.conflict, sql.ConflictColumns(columns...))
	return &TenderProfileUpsertOne{
		create: tpc,
	}
}

type (
	// TenderProfileUpsertOne is the builder for "upsert"-ing
	//  one TenderProfile node.
	TenderProfileUpsertOne struct {
		create *TenderProfileCreate
	}

	// TenderProfileUpsert is the "OnConflict" setter.
	TenderProfileUpsert struct {
		*sql.UpdateSet
	}
)

// SetUpdatedAt sets the "updated_at" field.
func (u *TenderProfileUpsert) SetUpdatedAt(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldUpdatedAt, v)
	return u
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateUpdatedAt() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldUpdatedAt)
	return u
}

// SetStatus sets the "status" field.
func (u *TenderProfileUpsert) SetStatus(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldStatus, v)
	return u
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateStatus() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldStatus)
	return u
}

// AddStatus adds v to the "status" field.
func (u *TenderProfileUpsert) AddStatus(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldStatus, v)
	return u
}

// SetApprovalStatus sets the "approval_status" field.
func (u *TenderProfileUpsert) SetApprovalStatus(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldApprovalStatus, v)
	return u
}

// UpdateApprovalStatus sets the "approval_status" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateApprovalStatus() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldApprovalStatus)
	return u
}

// AddApprovalStatus adds v to the "approval_status" field.
func (u *TenderProfileUpsert) AddApprovalStatus(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldApprovalStatus, v)
	return u
}

// SetApprovalMsgID sets the "approval_msg_id" field.
func (u *TenderProfileUpsert) SetApprovalMsgID(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldApprovalMsgID, v)
	return u
}

// UpdateApprovalMsgID sets the "approval_msg_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateApprovalMsgID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldApprovalMsgID)
	return u
}

// ClearApprovalMsgID clears the value of the "approval_msg_id" field.
func (u *TenderProfileUpsert) ClearApprovalMsgID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldApprovalMsgID)
	return u
}

// SetName sets the "name" field.
func (u *TenderProfileUpsert) SetName(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldName, v)
	return u
}

// UpdateName sets the "name" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateName() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldName)
	return u
}

// SetEstimatedAmount sets the "estimated_amount" field.
func (u *TenderProfileUpsert) SetEstimatedAmount(v float64) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldEstimatedAmount, v)
	return u
}

// UpdateEstimatedAmount sets the "estimated_amount" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateEstimatedAmount() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldEstimatedAmount)
	return u
}

// AddEstimatedAmount adds v to the "estimated_amount" field.
func (u *TenderProfileUpsert) AddEstimatedAmount(v float64) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldEstimatedAmount, v)
	return u
}

// ClearEstimatedAmount clears the value of the "estimated_amount" field.
func (u *TenderProfileUpsert) ClearEstimatedAmount() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldEstimatedAmount)
	return u
}

// SetTenderDate sets the "tender_date" field.
func (u *TenderProfileUpsert) SetTenderDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderDate, v)
	return u
}

// UpdateTenderDate sets the "tender_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderDate)
	return u
}

// ClearTenderDate clears the value of the "tender_date" field.
func (u *TenderProfileUpsert) ClearTenderDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderDate)
	return u
}

// SetClassify sets the "classify" field.
func (u *TenderProfileUpsert) SetClassify(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldClassify, v)
	return u
}

// UpdateClassify sets the "classify" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateClassify() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldClassify)
	return u
}

// AddClassify adds v to the "classify" field.
func (u *TenderProfileUpsert) AddClassify(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldClassify, v)
	return u
}

// ClearClassify clears the value of the "classify" field.
func (u *TenderProfileUpsert) ClearClassify() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldClassify)
	return u
}

// SetDiscoveryDate sets the "discovery_date" field.
func (u *TenderProfileUpsert) SetDiscoveryDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldDiscoveryDate, v)
	return u
}

// UpdateDiscoveryDate sets the "discovery_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateDiscoveryDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldDiscoveryDate)
	return u
}

// SetAddress sets the "address" field.
func (u *TenderProfileUpsert) SetAddress(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldAddress, v)
	return u
}

// UpdateAddress sets the "address" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateAddress() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldAddress)
	return u
}

// ClearAddress clears the value of the "address" field.
func (u *TenderProfileUpsert) ClearAddress() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldAddress)
	return u
}

// SetFullAddress sets the "full_address" field.
func (u *TenderProfileUpsert) SetFullAddress(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldFullAddress, v)
	return u
}

// UpdateFullAddress sets the "full_address" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateFullAddress() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldFullAddress)
	return u
}

// ClearFullAddress clears the value of the "full_address" field.
func (u *TenderProfileUpsert) ClearFullAddress() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldFullAddress)
	return u
}

// SetContractor sets the "contractor" field.
func (u *TenderProfileUpsert) SetContractor(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldContractor, v)
	return u
}

// UpdateContractor sets the "contractor" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateContractor() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldContractor)
	return u
}

// ClearContractor clears the value of the "contractor" field.
func (u *TenderProfileUpsert) ClearContractor() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldContractor)
	return u
}

// SetLevelInvolved sets the "level_involved" field.
func (u *TenderProfileUpsert) SetLevelInvolved(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldLevelInvolved, v)
	return u
}

// UpdateLevelInvolved sets the "level_involved" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateLevelInvolved() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldLevelInvolved)
	return u
}

// AddLevelInvolved adds v to the "level_involved" field.
func (u *TenderProfileUpsert) AddLevelInvolved(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldLevelInvolved, v)
	return u
}

// ClearLevelInvolved clears the value of the "level_involved" field.
func (u *TenderProfileUpsert) ClearLevelInvolved() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldLevelInvolved)
	return u
}

// SetSizeAndValueRating sets the "size_and_value_rating" field.
func (u *TenderProfileUpsert) SetSizeAndValueRating(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldSizeAndValueRating, v)
	return u
}

// UpdateSizeAndValueRating sets the "size_and_value_rating" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateSizeAndValueRating() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldSizeAndValueRating)
	return u
}

// AddSizeAndValueRating adds v to the "size_and_value_rating" field.
func (u *TenderProfileUpsert) AddSizeAndValueRating(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldSizeAndValueRating, v)
	return u
}

// ClearSizeAndValueRating clears the value of the "size_and_value_rating" field.
func (u *TenderProfileUpsert) ClearSizeAndValueRating() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldSizeAndValueRating)
	return u
}

// SetSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsert) SetSizeAndValueRatingOverview(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldSizeAndValueRatingOverview, v)
	return u
}

// UpdateSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateSizeAndValueRatingOverview() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldSizeAndValueRatingOverview)
	return u
}

// ClearSizeAndValueRatingOverview clears the value of the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsert) ClearSizeAndValueRatingOverview() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldSizeAndValueRatingOverview)
	return u
}

// SetCreditAndPaymentRating sets the "credit_and_payment_rating" field.
func (u *TenderProfileUpsert) SetCreditAndPaymentRating(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCreditAndPaymentRating, v)
	return u
}

// UpdateCreditAndPaymentRating sets the "credit_and_payment_rating" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCreditAndPaymentRating() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCreditAndPaymentRating)
	return u
}

// AddCreditAndPaymentRating adds v to the "credit_and_payment_rating" field.
func (u *TenderProfileUpsert) AddCreditAndPaymentRating(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldCreditAndPaymentRating, v)
	return u
}

// ClearCreditAndPaymentRating clears the value of the "credit_and_payment_rating" field.
func (u *TenderProfileUpsert) ClearCreditAndPaymentRating() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCreditAndPaymentRating)
	return u
}

// SetCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsert) SetCreditAndPaymentRatingOverview(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCreditAndPaymentRatingOverview, v)
	return u
}

// UpdateCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCreditAndPaymentRatingOverview() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCreditAndPaymentRatingOverview)
	return u
}

// ClearCreditAndPaymentRatingOverview clears the value of the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsert) ClearCreditAndPaymentRatingOverview() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCreditAndPaymentRatingOverview)
	return u
}

// SetTimeLimitRating sets the "time_limit_rating" field.
func (u *TenderProfileUpsert) SetTimeLimitRating(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTimeLimitRating, v)
	return u
}

// UpdateTimeLimitRating sets the "time_limit_rating" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTimeLimitRating() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTimeLimitRating)
	return u
}

// AddTimeLimitRating adds v to the "time_limit_rating" field.
func (u *TenderProfileUpsert) AddTimeLimitRating(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldTimeLimitRating, v)
	return u
}

// ClearTimeLimitRating clears the value of the "time_limit_rating" field.
func (u *TenderProfileUpsert) ClearTimeLimitRating() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTimeLimitRating)
	return u
}

// SetTimeLimitRatingOverview sets the "time_limit_rating_overview" field.
func (u *TenderProfileUpsert) SetTimeLimitRatingOverview(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTimeLimitRatingOverview, v)
	return u
}

// UpdateTimeLimitRatingOverview sets the "time_limit_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTimeLimitRatingOverview() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTimeLimitRatingOverview)
	return u
}

// ClearTimeLimitRatingOverview clears the value of the "time_limit_rating_overview" field.
func (u *TenderProfileUpsert) ClearTimeLimitRatingOverview() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTimeLimitRatingOverview)
	return u
}

// SetCustomerRelationshipRating sets the "customer_relationship_rating" field.
func (u *TenderProfileUpsert) SetCustomerRelationshipRating(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCustomerRelationshipRating, v)
	return u
}

// UpdateCustomerRelationshipRating sets the "customer_relationship_rating" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCustomerRelationshipRating() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCustomerRelationshipRating)
	return u
}

// AddCustomerRelationshipRating adds v to the "customer_relationship_rating" field.
func (u *TenderProfileUpsert) AddCustomerRelationshipRating(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldCustomerRelationshipRating, v)
	return u
}

// ClearCustomerRelationshipRating clears the value of the "customer_relationship_rating" field.
func (u *TenderProfileUpsert) ClearCustomerRelationshipRating() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCustomerRelationshipRating)
	return u
}

// SetCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsert) SetCustomerRelationshipRatingOverview(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCustomerRelationshipRatingOverview, v)
	return u
}

// UpdateCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCustomerRelationshipRatingOverview() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCustomerRelationshipRatingOverview)
	return u
}

// ClearCustomerRelationshipRatingOverview clears the value of the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsert) ClearCustomerRelationshipRatingOverview() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCustomerRelationshipRatingOverview)
	return u
}

// SetCompetitivePartnershipRating sets the "competitive_partnership_rating" field.
func (u *TenderProfileUpsert) SetCompetitivePartnershipRating(v int) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCompetitivePartnershipRating, v)
	return u
}

// UpdateCompetitivePartnershipRating sets the "competitive_partnership_rating" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCompetitivePartnershipRating() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCompetitivePartnershipRating)
	return u
}

// AddCompetitivePartnershipRating adds v to the "competitive_partnership_rating" field.
func (u *TenderProfileUpsert) AddCompetitivePartnershipRating(v int) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldCompetitivePartnershipRating, v)
	return u
}

// ClearCompetitivePartnershipRating clears the value of the "competitive_partnership_rating" field.
func (u *TenderProfileUpsert) ClearCompetitivePartnershipRating() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCompetitivePartnershipRating)
	return u
}

// SetCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsert) SetCompetitivePartnershipRatingOverview(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCompetitivePartnershipRatingOverview, v)
	return u
}

// UpdateCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCompetitivePartnershipRatingOverview() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCompetitivePartnershipRatingOverview)
	return u
}

// ClearCompetitivePartnershipRatingOverview clears the value of the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsert) ClearCompetitivePartnershipRatingOverview() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCompetitivePartnershipRatingOverview)
	return u
}

// SetPrepareToBid sets the "prepare_to_bid" field.
func (u *TenderProfileUpsert) SetPrepareToBid(v bool) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldPrepareToBid, v)
	return u
}

// UpdatePrepareToBid sets the "prepare_to_bid" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdatePrepareToBid() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldPrepareToBid)
	return u
}

// SetProjectCode sets the "project_code" field.
func (u *TenderProfileUpsert) SetProjectCode(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldProjectCode, v)
	return u
}

// UpdateProjectCode sets the "project_code" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateProjectCode() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldProjectCode)
	return u
}

// ClearProjectCode clears the value of the "project_code" field.
func (u *TenderProfileUpsert) ClearProjectCode() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldProjectCode)
	return u
}

// SetProjectType sets the "project_type" field.
func (u *TenderProfileUpsert) SetProjectType(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldProjectType, v)
	return u
}

// UpdateProjectType sets the "project_type" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateProjectType() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldProjectType)
	return u
}

// ClearProjectType clears the value of the "project_type" field.
func (u *TenderProfileUpsert) ClearProjectType() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldProjectType)
	return u
}

// SetProjectDefinition sets the "project_definition" field.
func (u *TenderProfileUpsert) SetProjectDefinition(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldProjectDefinition, v)
	return u
}

// UpdateProjectDefinition sets the "project_definition" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateProjectDefinition() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldProjectDefinition)
	return u
}

// ClearProjectDefinition clears the value of the "project_definition" field.
func (u *TenderProfileUpsert) ClearProjectDefinition() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldProjectDefinition)
	return u
}

// SetEstimatedProjectStartDate sets the "estimated_project_start_date" field.
func (u *TenderProfileUpsert) SetEstimatedProjectStartDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldEstimatedProjectStartDate, v)
	return u
}

// UpdateEstimatedProjectStartDate sets the "estimated_project_start_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateEstimatedProjectStartDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldEstimatedProjectStartDate)
	return u
}

// ClearEstimatedProjectStartDate clears the value of the "estimated_project_start_date" field.
func (u *TenderProfileUpsert) ClearEstimatedProjectStartDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldEstimatedProjectStartDate)
	return u
}

// SetEstimatedProjectEndDate sets the "estimated_project_end_date" field.
func (u *TenderProfileUpsert) SetEstimatedProjectEndDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldEstimatedProjectEndDate, v)
	return u
}

// UpdateEstimatedProjectEndDate sets the "estimated_project_end_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateEstimatedProjectEndDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldEstimatedProjectEndDate)
	return u
}

// ClearEstimatedProjectEndDate clears the value of the "estimated_project_end_date" field.
func (u *TenderProfileUpsert) ClearEstimatedProjectEndDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldEstimatedProjectEndDate)
	return u
}

// SetAttachments sets the "attachments" field.
func (u *TenderProfileUpsert) SetAttachments(v []string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldAttachments, v)
	return u
}

// UpdateAttachments sets the "attachments" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateAttachments() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldAttachments)
	return u
}

// ClearAttachments clears the value of the "attachments" field.
func (u *TenderProfileUpsert) ClearAttachments() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldAttachments)
	return u
}

// SetGeoCoordinate sets the "geo_coordinate" field.
func (u *TenderProfileUpsert) SetGeoCoordinate(v []float64) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldGeoCoordinate, v)
	return u
}

// UpdateGeoCoordinate sets the "geo_coordinate" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateGeoCoordinate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldGeoCoordinate)
	return u
}

// ClearGeoCoordinate clears the value of the "geo_coordinate" field.
func (u *TenderProfileUpsert) ClearGeoCoordinate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldGeoCoordinate)
	return u
}

// SetGeoBounds sets the "geo_bounds" field.
func (u *TenderProfileUpsert) SetGeoBounds(v [][]float64) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldGeoBounds, v)
	return u
}

// UpdateGeoBounds sets the "geo_bounds" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateGeoBounds() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldGeoBounds)
	return u
}

// ClearGeoBounds clears the value of the "geo_bounds" field.
func (u *TenderProfileUpsert) ClearGeoBounds() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldGeoBounds)
	return u
}

// SetRemark sets the "remark" field.
func (u *TenderProfileUpsert) SetRemark(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldRemark, v)
	return u
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateRemark() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldRemark)
	return u
}

// ClearRemark clears the value of the "remark" field.
func (u *TenderProfileUpsert) ClearRemark() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldRemark)
	return u
}

// SetImages sets the "images" field.
func (u *TenderProfileUpsert) SetImages(v []string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldImages, v)
	return u
}

// UpdateImages sets the "images" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateImages() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldImages)
	return u
}

// ClearImages clears the value of the "images" field.
func (u *TenderProfileUpsert) ClearImages() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldImages)
	return u
}

// SetTenderSituations sets the "tender_situations" field.
func (u *TenderProfileUpsert) SetTenderSituations(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderSituations, v)
	return u
}

// UpdateTenderSituations sets the "tender_situations" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderSituations() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderSituations)
	return u
}

// ClearTenderSituations clears the value of the "tender_situations" field.
func (u *TenderProfileUpsert) ClearTenderSituations() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderSituations)
	return u
}

// SetOwnerSituations sets the "owner_situations" field.
func (u *TenderProfileUpsert) SetOwnerSituations(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldOwnerSituations, v)
	return u
}

// UpdateOwnerSituations sets the "owner_situations" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateOwnerSituations() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldOwnerSituations)
	return u
}

// ClearOwnerSituations clears the value of the "owner_situations" field.
func (u *TenderProfileUpsert) ClearOwnerSituations() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldOwnerSituations)
	return u
}

// SetBiddingInstructions sets the "bidding_instructions" field.
func (u *TenderProfileUpsert) SetBiddingInstructions(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldBiddingInstructions, v)
	return u
}

// UpdateBiddingInstructions sets the "bidding_instructions" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateBiddingInstructions() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldBiddingInstructions)
	return u
}

// ClearBiddingInstructions clears the value of the "bidding_instructions" field.
func (u *TenderProfileUpsert) ClearBiddingInstructions() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldBiddingInstructions)
	return u
}

// SetCompetitorSituations sets the "competitor_situations" field.
func (u *TenderProfileUpsert) SetCompetitorSituations(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCompetitorSituations, v)
	return u
}

// UpdateCompetitorSituations sets the "competitor_situations" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCompetitorSituations() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCompetitorSituations)
	return u
}

// ClearCompetitorSituations clears the value of the "competitor_situations" field.
func (u *TenderProfileUpsert) ClearCompetitorSituations() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCompetitorSituations)
	return u
}

// SetCostEngineer sets the "cost_engineer" field.
func (u *TenderProfileUpsert) SetCostEngineer(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCostEngineer, v)
	return u
}

// UpdateCostEngineer sets the "cost_engineer" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCostEngineer() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCostEngineer)
	return u
}

// ClearCostEngineer clears the value of the "cost_engineer" field.
func (u *TenderProfileUpsert) ClearCostEngineer() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCostEngineer)
	return u
}

// SetTenderForm sets the "tender_form" field.
func (u *TenderProfileUpsert) SetTenderForm(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderForm, v)
	return u
}

// UpdateTenderForm sets the "tender_form" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderForm() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderForm)
	return u
}

// ClearTenderForm clears the value of the "tender_form" field.
func (u *TenderProfileUpsert) ClearTenderForm() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderForm)
	return u
}

// SetContractForm sets the "contract_form" field.
func (u *TenderProfileUpsert) SetContractForm(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldContractForm, v)
	return u
}

// UpdateContractForm sets the "contract_form" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateContractForm() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldContractForm)
	return u
}

// ClearContractForm clears the value of the "contract_form" field.
func (u *TenderProfileUpsert) ClearContractForm() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldContractForm)
	return u
}

// SetManagementCompany sets the "management_company" field.
func (u *TenderProfileUpsert) SetManagementCompany(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldManagementCompany, v)
	return u
}

// UpdateManagementCompany sets the "management_company" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateManagementCompany() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldManagementCompany)
	return u
}

// ClearManagementCompany clears the value of the "management_company" field.
func (u *TenderProfileUpsert) ClearManagementCompany() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldManagementCompany)
	return u
}

// SetTenderingAgency sets the "tendering_agency" field.
func (u *TenderProfileUpsert) SetTenderingAgency(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderingAgency, v)
	return u
}

// UpdateTenderingAgency sets the "tendering_agency" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderingAgency() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderingAgency)
	return u
}

// ClearTenderingAgency clears the value of the "tendering_agency" field.
func (u *TenderProfileUpsert) ClearTenderingAgency() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderingAgency)
	return u
}

// SetBiddingDate sets the "bidding_date" field.
func (u *TenderProfileUpsert) SetBiddingDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldBiddingDate, v)
	return u
}

// UpdateBiddingDate sets the "bidding_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateBiddingDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldBiddingDate)
	return u
}

// ClearBiddingDate clears the value of the "bidding_date" field.
func (u *TenderProfileUpsert) ClearBiddingDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldBiddingDate)
	return u
}

// SetFacadeConsultant sets the "facade_consultant" field.
func (u *TenderProfileUpsert) SetFacadeConsultant(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldFacadeConsultant, v)
	return u
}

// UpdateFacadeConsultant sets the "facade_consultant" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateFacadeConsultant() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldFacadeConsultant)
	return u
}

// ClearFacadeConsultant clears the value of the "facade_consultant" field.
func (u *TenderProfileUpsert) ClearFacadeConsultant() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldFacadeConsultant)
	return u
}

// SetDesignUnit sets the "design_unit" field.
func (u *TenderProfileUpsert) SetDesignUnit(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldDesignUnit, v)
	return u
}

// UpdateDesignUnit sets the "design_unit" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateDesignUnit() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldDesignUnit)
	return u
}

// ClearDesignUnit clears the value of the "design_unit" field.
func (u *TenderProfileUpsert) ClearDesignUnit() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldDesignUnit)
	return u
}

// SetConsultingFirm sets the "consulting_firm" field.
func (u *TenderProfileUpsert) SetConsultingFirm(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldConsultingFirm, v)
	return u
}

// UpdateConsultingFirm sets the "consulting_firm" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateConsultingFirm() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldConsultingFirm)
	return u
}

// ClearConsultingFirm clears the value of the "consulting_firm" field.
func (u *TenderProfileUpsert) ClearConsultingFirm() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldConsultingFirm)
	return u
}

// SetKeyProject sets the "key_project" field.
func (u *TenderProfileUpsert) SetKeyProject(v bool) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldKeyProject, v)
	return u
}

// UpdateKeyProject sets the "key_project" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateKeyProject() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldKeyProject)
	return u
}

// SetCurrentProgress sets the "current_progress" field.
func (u *TenderProfileUpsert) SetCurrentProgress(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCurrentProgress, v)
	return u
}

// UpdateCurrentProgress sets the "current_progress" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCurrentProgress() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCurrentProgress)
	return u
}

// ClearCurrentProgress clears the value of the "current_progress" field.
func (u *TenderProfileUpsert) ClearCurrentProgress() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCurrentProgress)
	return u
}

// SetTenderWinCompany sets the "tender_win_company" field.
func (u *TenderProfileUpsert) SetTenderWinCompany(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderWinCompany, v)
	return u
}

// UpdateTenderWinCompany sets the "tender_win_company" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderWinCompany() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderWinCompany)
	return u
}

// ClearTenderWinCompany clears the value of the "tender_win_company" field.
func (u *TenderProfileUpsert) ClearTenderWinCompany() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderWinCompany)
	return u
}

// SetTenderCode sets the "tender_code" field.
func (u *TenderProfileUpsert) SetTenderCode(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderCode, v)
	return u
}

// UpdateTenderCode sets the "tender_code" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderCode() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderCode)
	return u
}

// ClearTenderCode clears the value of the "tender_code" field.
func (u *TenderProfileUpsert) ClearTenderCode() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderCode)
	return u
}

// SetArchitect sets the "architect" field.
func (u *TenderProfileUpsert) SetArchitect(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldArchitect, v)
	return u
}

// UpdateArchitect sets the "architect" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateArchitect() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldArchitect)
	return u
}

// ClearArchitect clears the value of the "architect" field.
func (u *TenderProfileUpsert) ClearArchitect() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldArchitect)
	return u
}

// SetDeveloper sets the "developer" field.
func (u *TenderProfileUpsert) SetDeveloper(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldDeveloper, v)
	return u
}

// UpdateDeveloper sets the "developer" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateDeveloper() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldDeveloper)
	return u
}

// ClearDeveloper clears the value of the "developer" field.
func (u *TenderProfileUpsert) ClearDeveloper() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldDeveloper)
	return u
}

// SetTenderClosingDate sets the "tender_closing_date" field.
func (u *TenderProfileUpsert) SetTenderClosingDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderClosingDate, v)
	return u
}

// UpdateTenderClosingDate sets the "tender_closing_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderClosingDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderClosingDate)
	return u
}

// ClearTenderClosingDate clears the value of the "tender_closing_date" field.
func (u *TenderProfileUpsert) ClearTenderClosingDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderClosingDate)
	return u
}

// SetConstructionArea sets the "construction_area" field.
func (u *TenderProfileUpsert) SetConstructionArea(v string) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldConstructionArea, v)
	return u
}

// UpdateConstructionArea sets the "construction_area" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateConstructionArea() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldConstructionArea)
	return u
}

// ClearConstructionArea clears the value of the "construction_area" field.
func (u *TenderProfileUpsert) ClearConstructionArea() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldConstructionArea)
	return u
}

// SetTenderWinDate sets the "tender_win_date" field.
func (u *TenderProfileUpsert) SetTenderWinDate(v time.Time) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderWinDate, v)
	return u
}

// UpdateTenderWinDate sets the "tender_win_date" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderWinDate() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderWinDate)
	return u
}

// ClearTenderWinDate clears the value of the "tender_win_date" field.
func (u *TenderProfileUpsert) ClearTenderWinDate() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderWinDate)
	return u
}

// SetTenderWinAmount sets the "tender_win_amount" field.
func (u *TenderProfileUpsert) SetTenderWinAmount(v float64) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderWinAmount, v)
	return u
}

// UpdateTenderWinAmount sets the "tender_win_amount" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderWinAmount() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderWinAmount)
	return u
}

// AddTenderWinAmount adds v to the "tender_win_amount" field.
func (u *TenderProfileUpsert) AddTenderWinAmount(v float64) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldTenderWinAmount, v)
	return u
}

// ClearTenderWinAmount clears the value of the "tender_win_amount" field.
func (u *TenderProfileUpsert) ClearTenderWinAmount() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldTenderWinAmount)
	return u
}

// SetLastTenderAmount sets the "last_tender_amount" field.
func (u *TenderProfileUpsert) SetLastTenderAmount(v float64) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldLastTenderAmount, v)
	return u
}

// UpdateLastTenderAmount sets the "last_tender_amount" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateLastTenderAmount() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldLastTenderAmount)
	return u
}

// AddLastTenderAmount adds v to the "last_tender_amount" field.
func (u *TenderProfileUpsert) AddLastTenderAmount(v float64) *TenderProfileUpsert {
	u.Add(tenderprofile.FieldLastTenderAmount, v)
	return u
}

// ClearLastTenderAmount clears the value of the "last_tender_amount" field.
func (u *TenderProfileUpsert) ClearLastTenderAmount() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldLastTenderAmount)
	return u
}

// SetTenderID sets the "tender_id" field.
func (u *TenderProfileUpsert) SetTenderID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldTenderID, v)
	return u
}

// UpdateTenderID sets the "tender_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateTenderID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldTenderID)
	return u
}

// SetProvinceID sets the "province_id" field.
func (u *TenderProfileUpsert) SetProvinceID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldProvinceID, v)
	return u
}

// UpdateProvinceID sets the "province_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateProvinceID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldProvinceID)
	return u
}

// ClearProvinceID clears the value of the "province_id" field.
func (u *TenderProfileUpsert) ClearProvinceID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldProvinceID)
	return u
}

// SetCityID sets the "city_id" field.
func (u *TenderProfileUpsert) SetCityID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCityID, v)
	return u
}

// UpdateCityID sets the "city_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCityID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCityID)
	return u
}

// ClearCityID clears the value of the "city_id" field.
func (u *TenderProfileUpsert) ClearCityID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCityID)
	return u
}

// SetDistrictID sets the "district_id" field.
func (u *TenderProfileUpsert) SetDistrictID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldDistrictID, v)
	return u
}

// UpdateDistrictID sets the "district_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateDistrictID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldDistrictID)
	return u
}

// ClearDistrictID clears the value of the "district_id" field.
func (u *TenderProfileUpsert) ClearDistrictID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldDistrictID)
	return u
}

// SetCustomerID sets the "customer_id" field.
func (u *TenderProfileUpsert) SetCustomerID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCustomerID, v)
	return u
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCustomerID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCustomerID)
	return u
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *TenderProfileUpsert) ClearCustomerID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCustomerID)
	return u
}

// SetFinderID sets the "finder_id" field.
func (u *TenderProfileUpsert) SetFinderID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldFinderID, v)
	return u
}

// UpdateFinderID sets the "finder_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateFinderID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldFinderID)
	return u
}

// ClearFinderID clears the value of the "finder_id" field.
func (u *TenderProfileUpsert) ClearFinderID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldFinderID)
	return u
}

// SetCreatedByID sets the "created_by_id" field.
func (u *TenderProfileUpsert) SetCreatedByID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldCreatedByID, v)
	return u
}

// UpdateCreatedByID sets the "created_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateCreatedByID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldCreatedByID)
	return u
}

// ClearCreatedByID clears the value of the "created_by_id" field.
func (u *TenderProfileUpsert) ClearCreatedByID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldCreatedByID)
	return u
}

// SetApproverID sets the "approver_id" field.
func (u *TenderProfileUpsert) SetApproverID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldApproverID, v)
	return u
}

// UpdateApproverID sets the "approver_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateApproverID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldApproverID)
	return u
}

// ClearApproverID clears the value of the "approver_id" field.
func (u *TenderProfileUpsert) ClearApproverID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldApproverID)
	return u
}

// SetUpdatedByID sets the "updated_by_id" field.
func (u *TenderProfileUpsert) SetUpdatedByID(v xid.ID) *TenderProfileUpsert {
	u.Set(tenderprofile.FieldUpdatedByID, v)
	return u
}

// UpdateUpdatedByID sets the "updated_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsert) UpdateUpdatedByID() *TenderProfileUpsert {
	u.SetExcluded(tenderprofile.FieldUpdatedByID)
	return u
}

// ClearUpdatedByID clears the value of the "updated_by_id" field.
func (u *TenderProfileUpsert) ClearUpdatedByID() *TenderProfileUpsert {
	u.SetNull(tenderprofile.FieldUpdatedByID)
	return u
}

// UpdateNewValues updates the mutable fields using the new values that were set on create except the ID field.
// Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(tenderprofile.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *TenderProfileUpsertOne) UpdateNewValues() *TenderProfileUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		if _, exists := u.create.mutation.ID(); exists {
			s.SetIgnore(tenderprofile.FieldID)
		}
		if _, exists := u.create.mutation.CreatedAt(); exists {
			s.SetIgnore(tenderprofile.FieldCreatedAt)
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//	    OnConflict(sql.ResolveWithIgnore()).
//	    Exec(ctx)
func (u *TenderProfileUpsertOne) Ignore() *TenderProfileUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *TenderProfileUpsertOne) DoNothing() *TenderProfileUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the TenderProfileCreate.OnConflict
// documentation for more info.
func (u *TenderProfileUpsertOne) Update(set func(*TenderProfileUpsert)) *TenderProfileUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&TenderProfileUpsert{UpdateSet: update})
	}))
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *TenderProfileUpsertOne) SetUpdatedAt(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateUpdatedAt() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetStatus sets the "status" field.
func (u *TenderProfileUpsertOne) SetStatus(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetStatus(v)
	})
}

// AddStatus adds v to the "status" field.
func (u *TenderProfileUpsertOne) AddStatus(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateStatus() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateStatus()
	})
}

// SetApprovalStatus sets the "approval_status" field.
func (u *TenderProfileUpsertOne) SetApprovalStatus(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApprovalStatus(v)
	})
}

// AddApprovalStatus adds v to the "approval_status" field.
func (u *TenderProfileUpsertOne) AddApprovalStatus(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddApprovalStatus(v)
	})
}

// UpdateApprovalStatus sets the "approval_status" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateApprovalStatus() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApprovalStatus()
	})
}

// SetApprovalMsgID sets the "approval_msg_id" field.
func (u *TenderProfileUpsertOne) SetApprovalMsgID(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApprovalMsgID(v)
	})
}

// UpdateApprovalMsgID sets the "approval_msg_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateApprovalMsgID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApprovalMsgID()
	})
}

// ClearApprovalMsgID clears the value of the "approval_msg_id" field.
func (u *TenderProfileUpsertOne) ClearApprovalMsgID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearApprovalMsgID()
	})
}

// SetName sets the "name" field.
func (u *TenderProfileUpsertOne) SetName(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetName(v)
	})
}

// UpdateName sets the "name" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateName() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateName()
	})
}

// SetEstimatedAmount sets the "estimated_amount" field.
func (u *TenderProfileUpsertOne) SetEstimatedAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedAmount(v)
	})
}

// AddEstimatedAmount adds v to the "estimated_amount" field.
func (u *TenderProfileUpsertOne) AddEstimatedAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddEstimatedAmount(v)
	})
}

// UpdateEstimatedAmount sets the "estimated_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateEstimatedAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedAmount()
	})
}

// ClearEstimatedAmount clears the value of the "estimated_amount" field.
func (u *TenderProfileUpsertOne) ClearEstimatedAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedAmount()
	})
}

// SetTenderDate sets the "tender_date" field.
func (u *TenderProfileUpsertOne) SetTenderDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderDate(v)
	})
}

// UpdateTenderDate sets the "tender_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderDate()
	})
}

// ClearTenderDate clears the value of the "tender_date" field.
func (u *TenderProfileUpsertOne) ClearTenderDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderDate()
	})
}

// SetClassify sets the "classify" field.
func (u *TenderProfileUpsertOne) SetClassify(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetClassify(v)
	})
}

// AddClassify adds v to the "classify" field.
func (u *TenderProfileUpsertOne) AddClassify(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddClassify(v)
	})
}

// UpdateClassify sets the "classify" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateClassify() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateClassify()
	})
}

// ClearClassify clears the value of the "classify" field.
func (u *TenderProfileUpsertOne) ClearClassify() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearClassify()
	})
}

// SetDiscoveryDate sets the "discovery_date" field.
func (u *TenderProfileUpsertOne) SetDiscoveryDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDiscoveryDate(v)
	})
}

// UpdateDiscoveryDate sets the "discovery_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateDiscoveryDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDiscoveryDate()
	})
}

// SetAddress sets the "address" field.
func (u *TenderProfileUpsertOne) SetAddress(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetAddress(v)
	})
}

// UpdateAddress sets the "address" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateAddress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateAddress()
	})
}

// ClearAddress clears the value of the "address" field.
func (u *TenderProfileUpsertOne) ClearAddress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearAddress()
	})
}

// SetFullAddress sets the "full_address" field.
func (u *TenderProfileUpsertOne) SetFullAddress(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFullAddress(v)
	})
}

// UpdateFullAddress sets the "full_address" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateFullAddress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFullAddress()
	})
}

// ClearFullAddress clears the value of the "full_address" field.
func (u *TenderProfileUpsertOne) ClearFullAddress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFullAddress()
	})
}

// SetContractor sets the "contractor" field.
func (u *TenderProfileUpsertOne) SetContractor(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetContractor(v)
	})
}

// UpdateContractor sets the "contractor" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateContractor() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateContractor()
	})
}

// ClearContractor clears the value of the "contractor" field.
func (u *TenderProfileUpsertOne) ClearContractor() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearContractor()
	})
}

// SetLevelInvolved sets the "level_involved" field.
func (u *TenderProfileUpsertOne) SetLevelInvolved(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetLevelInvolved(v)
	})
}

// AddLevelInvolved adds v to the "level_involved" field.
func (u *TenderProfileUpsertOne) AddLevelInvolved(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddLevelInvolved(v)
	})
}

// UpdateLevelInvolved sets the "level_involved" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateLevelInvolved() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateLevelInvolved()
	})
}

// ClearLevelInvolved clears the value of the "level_involved" field.
func (u *TenderProfileUpsertOne) ClearLevelInvolved() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearLevelInvolved()
	})
}

// SetSizeAndValueRating sets the "size_and_value_rating" field.
func (u *TenderProfileUpsertOne) SetSizeAndValueRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetSizeAndValueRating(v)
	})
}

// AddSizeAndValueRating adds v to the "size_and_value_rating" field.
func (u *TenderProfileUpsertOne) AddSizeAndValueRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddSizeAndValueRating(v)
	})
}

// UpdateSizeAndValueRating sets the "size_and_value_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateSizeAndValueRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateSizeAndValueRating()
	})
}

// ClearSizeAndValueRating clears the value of the "size_and_value_rating" field.
func (u *TenderProfileUpsertOne) ClearSizeAndValueRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearSizeAndValueRating()
	})
}

// SetSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsertOne) SetSizeAndValueRatingOverview(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetSizeAndValueRatingOverview(v)
	})
}

// UpdateSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateSizeAndValueRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateSizeAndValueRatingOverview()
	})
}

// ClearSizeAndValueRatingOverview clears the value of the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsertOne) ClearSizeAndValueRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearSizeAndValueRatingOverview()
	})
}

// SetCreditAndPaymentRating sets the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertOne) SetCreditAndPaymentRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreditAndPaymentRating(v)
	})
}

// AddCreditAndPaymentRating adds v to the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertOne) AddCreditAndPaymentRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCreditAndPaymentRating(v)
	})
}

// UpdateCreditAndPaymentRating sets the "credit_and_payment_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCreditAndPaymentRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreditAndPaymentRating()
	})
}

// ClearCreditAndPaymentRating clears the value of the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertOne) ClearCreditAndPaymentRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreditAndPaymentRating()
	})
}

// SetCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsertOne) SetCreditAndPaymentRatingOverview(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreditAndPaymentRatingOverview(v)
	})
}

// UpdateCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCreditAndPaymentRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreditAndPaymentRatingOverview()
	})
}

// ClearCreditAndPaymentRatingOverview clears the value of the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsertOne) ClearCreditAndPaymentRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreditAndPaymentRatingOverview()
	})
}

// SetTimeLimitRating sets the "time_limit_rating" field.
func (u *TenderProfileUpsertOne) SetTimeLimitRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTimeLimitRating(v)
	})
}

// AddTimeLimitRating adds v to the "time_limit_rating" field.
func (u *TenderProfileUpsertOne) AddTimeLimitRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddTimeLimitRating(v)
	})
}

// UpdateTimeLimitRating sets the "time_limit_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTimeLimitRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTimeLimitRating()
	})
}

// ClearTimeLimitRating clears the value of the "time_limit_rating" field.
func (u *TenderProfileUpsertOne) ClearTimeLimitRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTimeLimitRating()
	})
}

// SetTimeLimitRatingOverview sets the "time_limit_rating_overview" field.
func (u *TenderProfileUpsertOne) SetTimeLimitRatingOverview(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTimeLimitRatingOverview(v)
	})
}

// UpdateTimeLimitRatingOverview sets the "time_limit_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTimeLimitRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTimeLimitRatingOverview()
	})
}

// ClearTimeLimitRatingOverview clears the value of the "time_limit_rating_overview" field.
func (u *TenderProfileUpsertOne) ClearTimeLimitRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTimeLimitRatingOverview()
	})
}

// SetCustomerRelationshipRating sets the "customer_relationship_rating" field.
func (u *TenderProfileUpsertOne) SetCustomerRelationshipRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerRelationshipRating(v)
	})
}

// AddCustomerRelationshipRating adds v to the "customer_relationship_rating" field.
func (u *TenderProfileUpsertOne) AddCustomerRelationshipRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCustomerRelationshipRating(v)
	})
}

// UpdateCustomerRelationshipRating sets the "customer_relationship_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCustomerRelationshipRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerRelationshipRating()
	})
}

// ClearCustomerRelationshipRating clears the value of the "customer_relationship_rating" field.
func (u *TenderProfileUpsertOne) ClearCustomerRelationshipRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerRelationshipRating()
	})
}

// SetCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsertOne) SetCustomerRelationshipRatingOverview(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerRelationshipRatingOverview(v)
	})
}

// UpdateCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCustomerRelationshipRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerRelationshipRatingOverview()
	})
}

// ClearCustomerRelationshipRatingOverview clears the value of the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsertOne) ClearCustomerRelationshipRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerRelationshipRatingOverview()
	})
}

// SetCompetitivePartnershipRating sets the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertOne) SetCompetitivePartnershipRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitivePartnershipRating(v)
	})
}

// AddCompetitivePartnershipRating adds v to the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertOne) AddCompetitivePartnershipRating(v int) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCompetitivePartnershipRating(v)
	})
}

// UpdateCompetitivePartnershipRating sets the "competitive_partnership_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCompetitivePartnershipRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitivePartnershipRating()
	})
}

// ClearCompetitivePartnershipRating clears the value of the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertOne) ClearCompetitivePartnershipRating() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitivePartnershipRating()
	})
}

// SetCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsertOne) SetCompetitivePartnershipRatingOverview(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitivePartnershipRatingOverview(v)
	})
}

// UpdateCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCompetitivePartnershipRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitivePartnershipRatingOverview()
	})
}

// ClearCompetitivePartnershipRatingOverview clears the value of the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsertOne) ClearCompetitivePartnershipRatingOverview() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitivePartnershipRatingOverview()
	})
}

// SetPrepareToBid sets the "prepare_to_bid" field.
func (u *TenderProfileUpsertOne) SetPrepareToBid(v bool) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetPrepareToBid(v)
	})
}

// UpdatePrepareToBid sets the "prepare_to_bid" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdatePrepareToBid() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdatePrepareToBid()
	})
}

// SetProjectCode sets the "project_code" field.
func (u *TenderProfileUpsertOne) SetProjectCode(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectCode(v)
	})
}

// UpdateProjectCode sets the "project_code" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateProjectCode() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectCode()
	})
}

// ClearProjectCode clears the value of the "project_code" field.
func (u *TenderProfileUpsertOne) ClearProjectCode() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectCode()
	})
}

// SetProjectType sets the "project_type" field.
func (u *TenderProfileUpsertOne) SetProjectType(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectType(v)
	})
}

// UpdateProjectType sets the "project_type" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateProjectType() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectType()
	})
}

// ClearProjectType clears the value of the "project_type" field.
func (u *TenderProfileUpsertOne) ClearProjectType() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectType()
	})
}

// SetProjectDefinition sets the "project_definition" field.
func (u *TenderProfileUpsertOne) SetProjectDefinition(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectDefinition(v)
	})
}

// UpdateProjectDefinition sets the "project_definition" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateProjectDefinition() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectDefinition()
	})
}

// ClearProjectDefinition clears the value of the "project_definition" field.
func (u *TenderProfileUpsertOne) ClearProjectDefinition() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectDefinition()
	})
}

// SetEstimatedProjectStartDate sets the "estimated_project_start_date" field.
func (u *TenderProfileUpsertOne) SetEstimatedProjectStartDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedProjectStartDate(v)
	})
}

// UpdateEstimatedProjectStartDate sets the "estimated_project_start_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateEstimatedProjectStartDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedProjectStartDate()
	})
}

// ClearEstimatedProjectStartDate clears the value of the "estimated_project_start_date" field.
func (u *TenderProfileUpsertOne) ClearEstimatedProjectStartDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedProjectStartDate()
	})
}

// SetEstimatedProjectEndDate sets the "estimated_project_end_date" field.
func (u *TenderProfileUpsertOne) SetEstimatedProjectEndDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedProjectEndDate(v)
	})
}

// UpdateEstimatedProjectEndDate sets the "estimated_project_end_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateEstimatedProjectEndDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedProjectEndDate()
	})
}

// ClearEstimatedProjectEndDate clears the value of the "estimated_project_end_date" field.
func (u *TenderProfileUpsertOne) ClearEstimatedProjectEndDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedProjectEndDate()
	})
}

// SetAttachments sets the "attachments" field.
func (u *TenderProfileUpsertOne) SetAttachments(v []string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetAttachments(v)
	})
}

// UpdateAttachments sets the "attachments" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateAttachments() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateAttachments()
	})
}

// ClearAttachments clears the value of the "attachments" field.
func (u *TenderProfileUpsertOne) ClearAttachments() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearAttachments()
	})
}

// SetGeoCoordinate sets the "geo_coordinate" field.
func (u *TenderProfileUpsertOne) SetGeoCoordinate(v []float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetGeoCoordinate(v)
	})
}

// UpdateGeoCoordinate sets the "geo_coordinate" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateGeoCoordinate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateGeoCoordinate()
	})
}

// ClearGeoCoordinate clears the value of the "geo_coordinate" field.
func (u *TenderProfileUpsertOne) ClearGeoCoordinate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearGeoCoordinate()
	})
}

// SetGeoBounds sets the "geo_bounds" field.
func (u *TenderProfileUpsertOne) SetGeoBounds(v [][]float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetGeoBounds(v)
	})
}

// UpdateGeoBounds sets the "geo_bounds" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateGeoBounds() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateGeoBounds()
	})
}

// ClearGeoBounds clears the value of the "geo_bounds" field.
func (u *TenderProfileUpsertOne) ClearGeoBounds() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearGeoBounds()
	})
}

// SetRemark sets the "remark" field.
func (u *TenderProfileUpsertOne) SetRemark(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetRemark(v)
	})
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateRemark() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateRemark()
	})
}

// ClearRemark clears the value of the "remark" field.
func (u *TenderProfileUpsertOne) ClearRemark() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearRemark()
	})
}

// SetImages sets the "images" field.
func (u *TenderProfileUpsertOne) SetImages(v []string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetImages(v)
	})
}

// UpdateImages sets the "images" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateImages() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateImages()
	})
}

// ClearImages clears the value of the "images" field.
func (u *TenderProfileUpsertOne) ClearImages() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearImages()
	})
}

// SetTenderSituations sets the "tender_situations" field.
func (u *TenderProfileUpsertOne) SetTenderSituations(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderSituations(v)
	})
}

// UpdateTenderSituations sets the "tender_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderSituations()
	})
}

// ClearTenderSituations clears the value of the "tender_situations" field.
func (u *TenderProfileUpsertOne) ClearTenderSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderSituations()
	})
}

// SetOwnerSituations sets the "owner_situations" field.
func (u *TenderProfileUpsertOne) SetOwnerSituations(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetOwnerSituations(v)
	})
}

// UpdateOwnerSituations sets the "owner_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateOwnerSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateOwnerSituations()
	})
}

// ClearOwnerSituations clears the value of the "owner_situations" field.
func (u *TenderProfileUpsertOne) ClearOwnerSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearOwnerSituations()
	})
}

// SetBiddingInstructions sets the "bidding_instructions" field.
func (u *TenderProfileUpsertOne) SetBiddingInstructions(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetBiddingInstructions(v)
	})
}

// UpdateBiddingInstructions sets the "bidding_instructions" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateBiddingInstructions() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateBiddingInstructions()
	})
}

// ClearBiddingInstructions clears the value of the "bidding_instructions" field.
func (u *TenderProfileUpsertOne) ClearBiddingInstructions() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearBiddingInstructions()
	})
}

// SetCompetitorSituations sets the "competitor_situations" field.
func (u *TenderProfileUpsertOne) SetCompetitorSituations(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitorSituations(v)
	})
}

// UpdateCompetitorSituations sets the "competitor_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCompetitorSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitorSituations()
	})
}

// ClearCompetitorSituations clears the value of the "competitor_situations" field.
func (u *TenderProfileUpsertOne) ClearCompetitorSituations() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitorSituations()
	})
}

// SetCostEngineer sets the "cost_engineer" field.
func (u *TenderProfileUpsertOne) SetCostEngineer(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCostEngineer(v)
	})
}

// UpdateCostEngineer sets the "cost_engineer" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCostEngineer() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCostEngineer()
	})
}

// ClearCostEngineer clears the value of the "cost_engineer" field.
func (u *TenderProfileUpsertOne) ClearCostEngineer() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCostEngineer()
	})
}

// SetTenderForm sets the "tender_form" field.
func (u *TenderProfileUpsertOne) SetTenderForm(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderForm(v)
	})
}

// UpdateTenderForm sets the "tender_form" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderForm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderForm()
	})
}

// ClearTenderForm clears the value of the "tender_form" field.
func (u *TenderProfileUpsertOne) ClearTenderForm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderForm()
	})
}

// SetContractForm sets the "contract_form" field.
func (u *TenderProfileUpsertOne) SetContractForm(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetContractForm(v)
	})
}

// UpdateContractForm sets the "contract_form" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateContractForm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateContractForm()
	})
}

// ClearContractForm clears the value of the "contract_form" field.
func (u *TenderProfileUpsertOne) ClearContractForm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearContractForm()
	})
}

// SetManagementCompany sets the "management_company" field.
func (u *TenderProfileUpsertOne) SetManagementCompany(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetManagementCompany(v)
	})
}

// UpdateManagementCompany sets the "management_company" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateManagementCompany() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateManagementCompany()
	})
}

// ClearManagementCompany clears the value of the "management_company" field.
func (u *TenderProfileUpsertOne) ClearManagementCompany() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearManagementCompany()
	})
}

// SetTenderingAgency sets the "tendering_agency" field.
func (u *TenderProfileUpsertOne) SetTenderingAgency(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderingAgency(v)
	})
}

// UpdateTenderingAgency sets the "tendering_agency" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderingAgency() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderingAgency()
	})
}

// ClearTenderingAgency clears the value of the "tendering_agency" field.
func (u *TenderProfileUpsertOne) ClearTenderingAgency() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderingAgency()
	})
}

// SetBiddingDate sets the "bidding_date" field.
func (u *TenderProfileUpsertOne) SetBiddingDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetBiddingDate(v)
	})
}

// UpdateBiddingDate sets the "bidding_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateBiddingDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateBiddingDate()
	})
}

// ClearBiddingDate clears the value of the "bidding_date" field.
func (u *TenderProfileUpsertOne) ClearBiddingDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearBiddingDate()
	})
}

// SetFacadeConsultant sets the "facade_consultant" field.
func (u *TenderProfileUpsertOne) SetFacadeConsultant(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFacadeConsultant(v)
	})
}

// UpdateFacadeConsultant sets the "facade_consultant" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateFacadeConsultant() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFacadeConsultant()
	})
}

// ClearFacadeConsultant clears the value of the "facade_consultant" field.
func (u *TenderProfileUpsertOne) ClearFacadeConsultant() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFacadeConsultant()
	})
}

// SetDesignUnit sets the "design_unit" field.
func (u *TenderProfileUpsertOne) SetDesignUnit(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDesignUnit(v)
	})
}

// UpdateDesignUnit sets the "design_unit" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateDesignUnit() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDesignUnit()
	})
}

// ClearDesignUnit clears the value of the "design_unit" field.
func (u *TenderProfileUpsertOne) ClearDesignUnit() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDesignUnit()
	})
}

// SetConsultingFirm sets the "consulting_firm" field.
func (u *TenderProfileUpsertOne) SetConsultingFirm(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetConsultingFirm(v)
	})
}

// UpdateConsultingFirm sets the "consulting_firm" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateConsultingFirm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateConsultingFirm()
	})
}

// ClearConsultingFirm clears the value of the "consulting_firm" field.
func (u *TenderProfileUpsertOne) ClearConsultingFirm() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearConsultingFirm()
	})
}

// SetKeyProject sets the "key_project" field.
func (u *TenderProfileUpsertOne) SetKeyProject(v bool) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetKeyProject(v)
	})
}

// UpdateKeyProject sets the "key_project" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateKeyProject() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateKeyProject()
	})
}

// SetCurrentProgress sets the "current_progress" field.
func (u *TenderProfileUpsertOne) SetCurrentProgress(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCurrentProgress(v)
	})
}

// UpdateCurrentProgress sets the "current_progress" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCurrentProgress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCurrentProgress()
	})
}

// ClearCurrentProgress clears the value of the "current_progress" field.
func (u *TenderProfileUpsertOne) ClearCurrentProgress() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCurrentProgress()
	})
}

// SetTenderWinCompany sets the "tender_win_company" field.
func (u *TenderProfileUpsertOne) SetTenderWinCompany(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinCompany(v)
	})
}

// UpdateTenderWinCompany sets the "tender_win_company" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderWinCompany() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinCompany()
	})
}

// ClearTenderWinCompany clears the value of the "tender_win_company" field.
func (u *TenderProfileUpsertOne) ClearTenderWinCompany() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinCompany()
	})
}

// SetTenderCode sets the "tender_code" field.
func (u *TenderProfileUpsertOne) SetTenderCode(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderCode(v)
	})
}

// UpdateTenderCode sets the "tender_code" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderCode() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderCode()
	})
}

// ClearTenderCode clears the value of the "tender_code" field.
func (u *TenderProfileUpsertOne) ClearTenderCode() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderCode()
	})
}

// SetArchitect sets the "architect" field.
func (u *TenderProfileUpsertOne) SetArchitect(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetArchitect(v)
	})
}

// UpdateArchitect sets the "architect" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateArchitect() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateArchitect()
	})
}

// ClearArchitect clears the value of the "architect" field.
func (u *TenderProfileUpsertOne) ClearArchitect() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearArchitect()
	})
}

// SetDeveloper sets the "developer" field.
func (u *TenderProfileUpsertOne) SetDeveloper(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDeveloper(v)
	})
}

// UpdateDeveloper sets the "developer" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateDeveloper() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDeveloper()
	})
}

// ClearDeveloper clears the value of the "developer" field.
func (u *TenderProfileUpsertOne) ClearDeveloper() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDeveloper()
	})
}

// SetTenderClosingDate sets the "tender_closing_date" field.
func (u *TenderProfileUpsertOne) SetTenderClosingDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderClosingDate(v)
	})
}

// UpdateTenderClosingDate sets the "tender_closing_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderClosingDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderClosingDate()
	})
}

// ClearTenderClosingDate clears the value of the "tender_closing_date" field.
func (u *TenderProfileUpsertOne) ClearTenderClosingDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderClosingDate()
	})
}

// SetConstructionArea sets the "construction_area" field.
func (u *TenderProfileUpsertOne) SetConstructionArea(v string) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetConstructionArea(v)
	})
}

// UpdateConstructionArea sets the "construction_area" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateConstructionArea() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateConstructionArea()
	})
}

// ClearConstructionArea clears the value of the "construction_area" field.
func (u *TenderProfileUpsertOne) ClearConstructionArea() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearConstructionArea()
	})
}

// SetTenderWinDate sets the "tender_win_date" field.
func (u *TenderProfileUpsertOne) SetTenderWinDate(v time.Time) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinDate(v)
	})
}

// UpdateTenderWinDate sets the "tender_win_date" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderWinDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinDate()
	})
}

// ClearTenderWinDate clears the value of the "tender_win_date" field.
func (u *TenderProfileUpsertOne) ClearTenderWinDate() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinDate()
	})
}

// SetTenderWinAmount sets the "tender_win_amount" field.
func (u *TenderProfileUpsertOne) SetTenderWinAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinAmount(v)
	})
}

// AddTenderWinAmount adds v to the "tender_win_amount" field.
func (u *TenderProfileUpsertOne) AddTenderWinAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddTenderWinAmount(v)
	})
}

// UpdateTenderWinAmount sets the "tender_win_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderWinAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinAmount()
	})
}

// ClearTenderWinAmount clears the value of the "tender_win_amount" field.
func (u *TenderProfileUpsertOne) ClearTenderWinAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinAmount()
	})
}

// SetLastTenderAmount sets the "last_tender_amount" field.
func (u *TenderProfileUpsertOne) SetLastTenderAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetLastTenderAmount(v)
	})
}

// AddLastTenderAmount adds v to the "last_tender_amount" field.
func (u *TenderProfileUpsertOne) AddLastTenderAmount(v float64) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddLastTenderAmount(v)
	})
}

// UpdateLastTenderAmount sets the "last_tender_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateLastTenderAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateLastTenderAmount()
	})
}

// ClearLastTenderAmount clears the value of the "last_tender_amount" field.
func (u *TenderProfileUpsertOne) ClearLastTenderAmount() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearLastTenderAmount()
	})
}

// SetTenderID sets the "tender_id" field.
func (u *TenderProfileUpsertOne) SetTenderID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderID(v)
	})
}

// UpdateTenderID sets the "tender_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateTenderID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderID()
	})
}

// SetProvinceID sets the "province_id" field.
func (u *TenderProfileUpsertOne) SetProvinceID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProvinceID(v)
	})
}

// UpdateProvinceID sets the "province_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateProvinceID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProvinceID()
	})
}

// ClearProvinceID clears the value of the "province_id" field.
func (u *TenderProfileUpsertOne) ClearProvinceID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProvinceID()
	})
}

// SetCityID sets the "city_id" field.
func (u *TenderProfileUpsertOne) SetCityID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCityID(v)
	})
}

// UpdateCityID sets the "city_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCityID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCityID()
	})
}

// ClearCityID clears the value of the "city_id" field.
func (u *TenderProfileUpsertOne) ClearCityID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCityID()
	})
}

// SetDistrictID sets the "district_id" field.
func (u *TenderProfileUpsertOne) SetDistrictID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDistrictID(v)
	})
}

// UpdateDistrictID sets the "district_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateDistrictID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDistrictID()
	})
}

// ClearDistrictID clears the value of the "district_id" field.
func (u *TenderProfileUpsertOne) ClearDistrictID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDistrictID()
	})
}

// SetCustomerID sets the "customer_id" field.
func (u *TenderProfileUpsertOne) SetCustomerID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerID(v)
	})
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCustomerID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerID()
	})
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *TenderProfileUpsertOne) ClearCustomerID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerID()
	})
}

// SetFinderID sets the "finder_id" field.
func (u *TenderProfileUpsertOne) SetFinderID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFinderID(v)
	})
}

// UpdateFinderID sets the "finder_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateFinderID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFinderID()
	})
}

// ClearFinderID clears the value of the "finder_id" field.
func (u *TenderProfileUpsertOne) ClearFinderID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFinderID()
	})
}

// SetCreatedByID sets the "created_by_id" field.
func (u *TenderProfileUpsertOne) SetCreatedByID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreatedByID(v)
	})
}

// UpdateCreatedByID sets the "created_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateCreatedByID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreatedByID()
	})
}

// ClearCreatedByID clears the value of the "created_by_id" field.
func (u *TenderProfileUpsertOne) ClearCreatedByID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreatedByID()
	})
}

// SetApproverID sets the "approver_id" field.
func (u *TenderProfileUpsertOne) SetApproverID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApproverID(v)
	})
}

// UpdateApproverID sets the "approver_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateApproverID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApproverID()
	})
}

// ClearApproverID clears the value of the "approver_id" field.
func (u *TenderProfileUpsertOne) ClearApproverID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearApproverID()
	})
}

// SetUpdatedByID sets the "updated_by_id" field.
func (u *TenderProfileUpsertOne) SetUpdatedByID(v xid.ID) *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetUpdatedByID(v)
	})
}

// UpdateUpdatedByID sets the "updated_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsertOne) UpdateUpdatedByID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateUpdatedByID()
	})
}

// ClearUpdatedByID clears the value of the "updated_by_id" field.
func (u *TenderProfileUpsertOne) ClearUpdatedByID() *TenderProfileUpsertOne {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearUpdatedByID()
	})
}

// Exec executes the query.
func (u *TenderProfileUpsertOne) Exec(ctx context.Context) error {
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for TenderProfileCreate.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *TenderProfileUpsertOne) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}

// Exec executes the UPSERT query and returns the inserted/updated ID.
func (u *TenderProfileUpsertOne) ID(ctx context.Context) (id xid.ID, err error) {
	if u.create.driver.Dialect() == dialect.MySQL {
		// In case of "ON CONFLICT", there is no way to get back non-numeric ID
		// fields from the database since MySQL does not support the RETURNING clause.
		return id, errors.New("ent: TenderProfileUpsertOne.ID is not supported by MySQL driver. Use TenderProfileUpsertOne.Exec instead")
	}
	node, err := u.create.Save(ctx)
	if err != nil {
		return id, err
	}
	return node.ID, nil
}

// IDX is like ID, but panics if an error occurs.
func (u *TenderProfileUpsertOne) IDX(ctx context.Context) xid.ID {
	id, err := u.ID(ctx)
	if err != nil {
		panic(err)
	}
	return id
}

// TenderProfileCreateBulk is the builder for creating many TenderProfile entities in bulk.
type TenderProfileCreateBulk struct {
	config
	err      error
	builders []*TenderProfileCreate
	conflict []sql.ConflictOption
}

// Save creates the TenderProfile entities in the database.
func (tpcb *TenderProfileCreateBulk) Save(ctx context.Context) ([]*TenderProfile, error) {
	if tpcb.err != nil {
		return nil, tpcb.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(tpcb.builders))
	nodes := make([]*TenderProfile, len(tpcb.builders))
	mutators := make([]Mutator, len(tpcb.builders))
	for i := range tpcb.builders {
		func(i int, root context.Context) {
			builder := tpcb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*TenderProfileMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, tpcb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					spec.OnConflict = tpcb.conflict
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, tpcb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, tpcb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (tpcb *TenderProfileCreateBulk) SaveX(ctx context.Context) []*TenderProfile {
	v, err := tpcb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (tpcb *TenderProfileCreateBulk) Exec(ctx context.Context) error {
	_, err := tpcb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (tpcb *TenderProfileCreateBulk) ExecX(ctx context.Context) {
	if err := tpcb.Exec(ctx); err != nil {
		panic(err)
	}
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.TenderProfile.CreateBulk(builders...).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.TenderProfileUpsert) {
//			SetCreatedAt(v+v).
//		}).
//		Exec(ctx)
func (tpcb *TenderProfileCreateBulk) OnConflict(opts ...sql.ConflictOption) *TenderProfileUpsertBulk {
	tpcb.conflict = opts
	return &TenderProfileUpsertBulk{
		create: tpcb,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (tpcb *TenderProfileCreateBulk) OnConflictColumns(columns ...string) *TenderProfileUpsertBulk {
	tpcb.conflict = append(tpcb.conflict, sql.ConflictColumns(columns...))
	return &TenderProfileUpsertBulk{
		create: tpcb,
	}
}

// TenderProfileUpsertBulk is the builder for "upsert"-ing
// a bulk of TenderProfile nodes.
type TenderProfileUpsertBulk struct {
	create *TenderProfileCreateBulk
}

// UpdateNewValues updates the mutable fields using the new values that
// were set on create. Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(tenderprofile.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *TenderProfileUpsertBulk) UpdateNewValues() *TenderProfileUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		for _, b := range u.create.builders {
			if _, exists := b.mutation.ID(); exists {
				s.SetIgnore(tenderprofile.FieldID)
			}
			if _, exists := b.mutation.CreatedAt(); exists {
				s.SetIgnore(tenderprofile.FieldCreatedAt)
			}
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.TenderProfile.Create().
//		OnConflict(sql.ResolveWithIgnore()).
//		Exec(ctx)
func (u *TenderProfileUpsertBulk) Ignore() *TenderProfileUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *TenderProfileUpsertBulk) DoNothing() *TenderProfileUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the TenderProfileCreateBulk.OnConflict
// documentation for more info.
func (u *TenderProfileUpsertBulk) Update(set func(*TenderProfileUpsert)) *TenderProfileUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&TenderProfileUpsert{UpdateSet: update})
	}))
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *TenderProfileUpsertBulk) SetUpdatedAt(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateUpdatedAt() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetStatus sets the "status" field.
func (u *TenderProfileUpsertBulk) SetStatus(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetStatus(v)
	})
}

// AddStatus adds v to the "status" field.
func (u *TenderProfileUpsertBulk) AddStatus(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateStatus() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateStatus()
	})
}

// SetApprovalStatus sets the "approval_status" field.
func (u *TenderProfileUpsertBulk) SetApprovalStatus(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApprovalStatus(v)
	})
}

// AddApprovalStatus adds v to the "approval_status" field.
func (u *TenderProfileUpsertBulk) AddApprovalStatus(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddApprovalStatus(v)
	})
}

// UpdateApprovalStatus sets the "approval_status" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateApprovalStatus() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApprovalStatus()
	})
}

// SetApprovalMsgID sets the "approval_msg_id" field.
func (u *TenderProfileUpsertBulk) SetApprovalMsgID(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApprovalMsgID(v)
	})
}

// UpdateApprovalMsgID sets the "approval_msg_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateApprovalMsgID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApprovalMsgID()
	})
}

// ClearApprovalMsgID clears the value of the "approval_msg_id" field.
func (u *TenderProfileUpsertBulk) ClearApprovalMsgID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearApprovalMsgID()
	})
}

// SetName sets the "name" field.
func (u *TenderProfileUpsertBulk) SetName(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetName(v)
	})
}

// UpdateName sets the "name" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateName() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateName()
	})
}

// SetEstimatedAmount sets the "estimated_amount" field.
func (u *TenderProfileUpsertBulk) SetEstimatedAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedAmount(v)
	})
}

// AddEstimatedAmount adds v to the "estimated_amount" field.
func (u *TenderProfileUpsertBulk) AddEstimatedAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddEstimatedAmount(v)
	})
}

// UpdateEstimatedAmount sets the "estimated_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateEstimatedAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedAmount()
	})
}

// ClearEstimatedAmount clears the value of the "estimated_amount" field.
func (u *TenderProfileUpsertBulk) ClearEstimatedAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedAmount()
	})
}

// SetTenderDate sets the "tender_date" field.
func (u *TenderProfileUpsertBulk) SetTenderDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderDate(v)
	})
}

// UpdateTenderDate sets the "tender_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderDate()
	})
}

// ClearTenderDate clears the value of the "tender_date" field.
func (u *TenderProfileUpsertBulk) ClearTenderDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderDate()
	})
}

// SetClassify sets the "classify" field.
func (u *TenderProfileUpsertBulk) SetClassify(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetClassify(v)
	})
}

// AddClassify adds v to the "classify" field.
func (u *TenderProfileUpsertBulk) AddClassify(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddClassify(v)
	})
}

// UpdateClassify sets the "classify" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateClassify() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateClassify()
	})
}

// ClearClassify clears the value of the "classify" field.
func (u *TenderProfileUpsertBulk) ClearClassify() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearClassify()
	})
}

// SetDiscoveryDate sets the "discovery_date" field.
func (u *TenderProfileUpsertBulk) SetDiscoveryDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDiscoveryDate(v)
	})
}

// UpdateDiscoveryDate sets the "discovery_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateDiscoveryDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDiscoveryDate()
	})
}

// SetAddress sets the "address" field.
func (u *TenderProfileUpsertBulk) SetAddress(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetAddress(v)
	})
}

// UpdateAddress sets the "address" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateAddress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateAddress()
	})
}

// ClearAddress clears the value of the "address" field.
func (u *TenderProfileUpsertBulk) ClearAddress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearAddress()
	})
}

// SetFullAddress sets the "full_address" field.
func (u *TenderProfileUpsertBulk) SetFullAddress(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFullAddress(v)
	})
}

// UpdateFullAddress sets the "full_address" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateFullAddress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFullAddress()
	})
}

// ClearFullAddress clears the value of the "full_address" field.
func (u *TenderProfileUpsertBulk) ClearFullAddress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFullAddress()
	})
}

// SetContractor sets the "contractor" field.
func (u *TenderProfileUpsertBulk) SetContractor(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetContractor(v)
	})
}

// UpdateContractor sets the "contractor" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateContractor() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateContractor()
	})
}

// ClearContractor clears the value of the "contractor" field.
func (u *TenderProfileUpsertBulk) ClearContractor() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearContractor()
	})
}

// SetLevelInvolved sets the "level_involved" field.
func (u *TenderProfileUpsertBulk) SetLevelInvolved(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetLevelInvolved(v)
	})
}

// AddLevelInvolved adds v to the "level_involved" field.
func (u *TenderProfileUpsertBulk) AddLevelInvolved(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddLevelInvolved(v)
	})
}

// UpdateLevelInvolved sets the "level_involved" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateLevelInvolved() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateLevelInvolved()
	})
}

// ClearLevelInvolved clears the value of the "level_involved" field.
func (u *TenderProfileUpsertBulk) ClearLevelInvolved() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearLevelInvolved()
	})
}

// SetSizeAndValueRating sets the "size_and_value_rating" field.
func (u *TenderProfileUpsertBulk) SetSizeAndValueRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetSizeAndValueRating(v)
	})
}

// AddSizeAndValueRating adds v to the "size_and_value_rating" field.
func (u *TenderProfileUpsertBulk) AddSizeAndValueRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddSizeAndValueRating(v)
	})
}

// UpdateSizeAndValueRating sets the "size_and_value_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateSizeAndValueRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateSizeAndValueRating()
	})
}

// ClearSizeAndValueRating clears the value of the "size_and_value_rating" field.
func (u *TenderProfileUpsertBulk) ClearSizeAndValueRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearSizeAndValueRating()
	})
}

// SetSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsertBulk) SetSizeAndValueRatingOverview(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetSizeAndValueRatingOverview(v)
	})
}

// UpdateSizeAndValueRatingOverview sets the "size_and_value_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateSizeAndValueRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateSizeAndValueRatingOverview()
	})
}

// ClearSizeAndValueRatingOverview clears the value of the "size_and_value_rating_overview" field.
func (u *TenderProfileUpsertBulk) ClearSizeAndValueRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearSizeAndValueRatingOverview()
	})
}

// SetCreditAndPaymentRating sets the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertBulk) SetCreditAndPaymentRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreditAndPaymentRating(v)
	})
}

// AddCreditAndPaymentRating adds v to the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertBulk) AddCreditAndPaymentRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCreditAndPaymentRating(v)
	})
}

// UpdateCreditAndPaymentRating sets the "credit_and_payment_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCreditAndPaymentRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreditAndPaymentRating()
	})
}

// ClearCreditAndPaymentRating clears the value of the "credit_and_payment_rating" field.
func (u *TenderProfileUpsertBulk) ClearCreditAndPaymentRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreditAndPaymentRating()
	})
}

// SetCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsertBulk) SetCreditAndPaymentRatingOverview(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreditAndPaymentRatingOverview(v)
	})
}

// UpdateCreditAndPaymentRatingOverview sets the "credit_and_payment_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCreditAndPaymentRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreditAndPaymentRatingOverview()
	})
}

// ClearCreditAndPaymentRatingOverview clears the value of the "credit_and_payment_rating_overview" field.
func (u *TenderProfileUpsertBulk) ClearCreditAndPaymentRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreditAndPaymentRatingOverview()
	})
}

// SetTimeLimitRating sets the "time_limit_rating" field.
func (u *TenderProfileUpsertBulk) SetTimeLimitRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTimeLimitRating(v)
	})
}

// AddTimeLimitRating adds v to the "time_limit_rating" field.
func (u *TenderProfileUpsertBulk) AddTimeLimitRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddTimeLimitRating(v)
	})
}

// UpdateTimeLimitRating sets the "time_limit_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTimeLimitRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTimeLimitRating()
	})
}

// ClearTimeLimitRating clears the value of the "time_limit_rating" field.
func (u *TenderProfileUpsertBulk) ClearTimeLimitRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTimeLimitRating()
	})
}

// SetTimeLimitRatingOverview sets the "time_limit_rating_overview" field.
func (u *TenderProfileUpsertBulk) SetTimeLimitRatingOverview(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTimeLimitRatingOverview(v)
	})
}

// UpdateTimeLimitRatingOverview sets the "time_limit_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTimeLimitRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTimeLimitRatingOverview()
	})
}

// ClearTimeLimitRatingOverview clears the value of the "time_limit_rating_overview" field.
func (u *TenderProfileUpsertBulk) ClearTimeLimitRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTimeLimitRatingOverview()
	})
}

// SetCustomerRelationshipRating sets the "customer_relationship_rating" field.
func (u *TenderProfileUpsertBulk) SetCustomerRelationshipRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerRelationshipRating(v)
	})
}

// AddCustomerRelationshipRating adds v to the "customer_relationship_rating" field.
func (u *TenderProfileUpsertBulk) AddCustomerRelationshipRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCustomerRelationshipRating(v)
	})
}

// UpdateCustomerRelationshipRating sets the "customer_relationship_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCustomerRelationshipRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerRelationshipRating()
	})
}

// ClearCustomerRelationshipRating clears the value of the "customer_relationship_rating" field.
func (u *TenderProfileUpsertBulk) ClearCustomerRelationshipRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerRelationshipRating()
	})
}

// SetCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsertBulk) SetCustomerRelationshipRatingOverview(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerRelationshipRatingOverview(v)
	})
}

// UpdateCustomerRelationshipRatingOverview sets the "customer_relationship_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCustomerRelationshipRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerRelationshipRatingOverview()
	})
}

// ClearCustomerRelationshipRatingOverview clears the value of the "customer_relationship_rating_overview" field.
func (u *TenderProfileUpsertBulk) ClearCustomerRelationshipRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerRelationshipRatingOverview()
	})
}

// SetCompetitivePartnershipRating sets the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertBulk) SetCompetitivePartnershipRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitivePartnershipRating(v)
	})
}

// AddCompetitivePartnershipRating adds v to the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertBulk) AddCompetitivePartnershipRating(v int) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddCompetitivePartnershipRating(v)
	})
}

// UpdateCompetitivePartnershipRating sets the "competitive_partnership_rating" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCompetitivePartnershipRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitivePartnershipRating()
	})
}

// ClearCompetitivePartnershipRating clears the value of the "competitive_partnership_rating" field.
func (u *TenderProfileUpsertBulk) ClearCompetitivePartnershipRating() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitivePartnershipRating()
	})
}

// SetCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsertBulk) SetCompetitivePartnershipRatingOverview(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitivePartnershipRatingOverview(v)
	})
}

// UpdateCompetitivePartnershipRatingOverview sets the "competitive_partnership_rating_overview" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCompetitivePartnershipRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitivePartnershipRatingOverview()
	})
}

// ClearCompetitivePartnershipRatingOverview clears the value of the "competitive_partnership_rating_overview" field.
func (u *TenderProfileUpsertBulk) ClearCompetitivePartnershipRatingOverview() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitivePartnershipRatingOverview()
	})
}

// SetPrepareToBid sets the "prepare_to_bid" field.
func (u *TenderProfileUpsertBulk) SetPrepareToBid(v bool) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetPrepareToBid(v)
	})
}

// UpdatePrepareToBid sets the "prepare_to_bid" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdatePrepareToBid() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdatePrepareToBid()
	})
}

// SetProjectCode sets the "project_code" field.
func (u *TenderProfileUpsertBulk) SetProjectCode(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectCode(v)
	})
}

// UpdateProjectCode sets the "project_code" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateProjectCode() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectCode()
	})
}

// ClearProjectCode clears the value of the "project_code" field.
func (u *TenderProfileUpsertBulk) ClearProjectCode() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectCode()
	})
}

// SetProjectType sets the "project_type" field.
func (u *TenderProfileUpsertBulk) SetProjectType(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectType(v)
	})
}

// UpdateProjectType sets the "project_type" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateProjectType() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectType()
	})
}

// ClearProjectType clears the value of the "project_type" field.
func (u *TenderProfileUpsertBulk) ClearProjectType() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectType()
	})
}

// SetProjectDefinition sets the "project_definition" field.
func (u *TenderProfileUpsertBulk) SetProjectDefinition(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProjectDefinition(v)
	})
}

// UpdateProjectDefinition sets the "project_definition" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateProjectDefinition() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProjectDefinition()
	})
}

// ClearProjectDefinition clears the value of the "project_definition" field.
func (u *TenderProfileUpsertBulk) ClearProjectDefinition() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProjectDefinition()
	})
}

// SetEstimatedProjectStartDate sets the "estimated_project_start_date" field.
func (u *TenderProfileUpsertBulk) SetEstimatedProjectStartDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedProjectStartDate(v)
	})
}

// UpdateEstimatedProjectStartDate sets the "estimated_project_start_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateEstimatedProjectStartDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedProjectStartDate()
	})
}

// ClearEstimatedProjectStartDate clears the value of the "estimated_project_start_date" field.
func (u *TenderProfileUpsertBulk) ClearEstimatedProjectStartDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedProjectStartDate()
	})
}

// SetEstimatedProjectEndDate sets the "estimated_project_end_date" field.
func (u *TenderProfileUpsertBulk) SetEstimatedProjectEndDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetEstimatedProjectEndDate(v)
	})
}

// UpdateEstimatedProjectEndDate sets the "estimated_project_end_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateEstimatedProjectEndDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateEstimatedProjectEndDate()
	})
}

// ClearEstimatedProjectEndDate clears the value of the "estimated_project_end_date" field.
func (u *TenderProfileUpsertBulk) ClearEstimatedProjectEndDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearEstimatedProjectEndDate()
	})
}

// SetAttachments sets the "attachments" field.
func (u *TenderProfileUpsertBulk) SetAttachments(v []string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetAttachments(v)
	})
}

// UpdateAttachments sets the "attachments" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateAttachments() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateAttachments()
	})
}

// ClearAttachments clears the value of the "attachments" field.
func (u *TenderProfileUpsertBulk) ClearAttachments() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearAttachments()
	})
}

// SetGeoCoordinate sets the "geo_coordinate" field.
func (u *TenderProfileUpsertBulk) SetGeoCoordinate(v []float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetGeoCoordinate(v)
	})
}

// UpdateGeoCoordinate sets the "geo_coordinate" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateGeoCoordinate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateGeoCoordinate()
	})
}

// ClearGeoCoordinate clears the value of the "geo_coordinate" field.
func (u *TenderProfileUpsertBulk) ClearGeoCoordinate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearGeoCoordinate()
	})
}

// SetGeoBounds sets the "geo_bounds" field.
func (u *TenderProfileUpsertBulk) SetGeoBounds(v [][]float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetGeoBounds(v)
	})
}

// UpdateGeoBounds sets the "geo_bounds" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateGeoBounds() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateGeoBounds()
	})
}

// ClearGeoBounds clears the value of the "geo_bounds" field.
func (u *TenderProfileUpsertBulk) ClearGeoBounds() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearGeoBounds()
	})
}

// SetRemark sets the "remark" field.
func (u *TenderProfileUpsertBulk) SetRemark(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetRemark(v)
	})
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateRemark() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateRemark()
	})
}

// ClearRemark clears the value of the "remark" field.
func (u *TenderProfileUpsertBulk) ClearRemark() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearRemark()
	})
}

// SetImages sets the "images" field.
func (u *TenderProfileUpsertBulk) SetImages(v []string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetImages(v)
	})
}

// UpdateImages sets the "images" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateImages() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateImages()
	})
}

// ClearImages clears the value of the "images" field.
func (u *TenderProfileUpsertBulk) ClearImages() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearImages()
	})
}

// SetTenderSituations sets the "tender_situations" field.
func (u *TenderProfileUpsertBulk) SetTenderSituations(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderSituations(v)
	})
}

// UpdateTenderSituations sets the "tender_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderSituations()
	})
}

// ClearTenderSituations clears the value of the "tender_situations" field.
func (u *TenderProfileUpsertBulk) ClearTenderSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderSituations()
	})
}

// SetOwnerSituations sets the "owner_situations" field.
func (u *TenderProfileUpsertBulk) SetOwnerSituations(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetOwnerSituations(v)
	})
}

// UpdateOwnerSituations sets the "owner_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateOwnerSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateOwnerSituations()
	})
}

// ClearOwnerSituations clears the value of the "owner_situations" field.
func (u *TenderProfileUpsertBulk) ClearOwnerSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearOwnerSituations()
	})
}

// SetBiddingInstructions sets the "bidding_instructions" field.
func (u *TenderProfileUpsertBulk) SetBiddingInstructions(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetBiddingInstructions(v)
	})
}

// UpdateBiddingInstructions sets the "bidding_instructions" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateBiddingInstructions() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateBiddingInstructions()
	})
}

// ClearBiddingInstructions clears the value of the "bidding_instructions" field.
func (u *TenderProfileUpsertBulk) ClearBiddingInstructions() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearBiddingInstructions()
	})
}

// SetCompetitorSituations sets the "competitor_situations" field.
func (u *TenderProfileUpsertBulk) SetCompetitorSituations(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCompetitorSituations(v)
	})
}

// UpdateCompetitorSituations sets the "competitor_situations" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCompetitorSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCompetitorSituations()
	})
}

// ClearCompetitorSituations clears the value of the "competitor_situations" field.
func (u *TenderProfileUpsertBulk) ClearCompetitorSituations() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCompetitorSituations()
	})
}

// SetCostEngineer sets the "cost_engineer" field.
func (u *TenderProfileUpsertBulk) SetCostEngineer(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCostEngineer(v)
	})
}

// UpdateCostEngineer sets the "cost_engineer" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCostEngineer() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCostEngineer()
	})
}

// ClearCostEngineer clears the value of the "cost_engineer" field.
func (u *TenderProfileUpsertBulk) ClearCostEngineer() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCostEngineer()
	})
}

// SetTenderForm sets the "tender_form" field.
func (u *TenderProfileUpsertBulk) SetTenderForm(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderForm(v)
	})
}

// UpdateTenderForm sets the "tender_form" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderForm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderForm()
	})
}

// ClearTenderForm clears the value of the "tender_form" field.
func (u *TenderProfileUpsertBulk) ClearTenderForm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderForm()
	})
}

// SetContractForm sets the "contract_form" field.
func (u *TenderProfileUpsertBulk) SetContractForm(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetContractForm(v)
	})
}

// UpdateContractForm sets the "contract_form" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateContractForm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateContractForm()
	})
}

// ClearContractForm clears the value of the "contract_form" field.
func (u *TenderProfileUpsertBulk) ClearContractForm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearContractForm()
	})
}

// SetManagementCompany sets the "management_company" field.
func (u *TenderProfileUpsertBulk) SetManagementCompany(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetManagementCompany(v)
	})
}

// UpdateManagementCompany sets the "management_company" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateManagementCompany() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateManagementCompany()
	})
}

// ClearManagementCompany clears the value of the "management_company" field.
func (u *TenderProfileUpsertBulk) ClearManagementCompany() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearManagementCompany()
	})
}

// SetTenderingAgency sets the "tendering_agency" field.
func (u *TenderProfileUpsertBulk) SetTenderingAgency(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderingAgency(v)
	})
}

// UpdateTenderingAgency sets the "tendering_agency" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderingAgency() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderingAgency()
	})
}

// ClearTenderingAgency clears the value of the "tendering_agency" field.
func (u *TenderProfileUpsertBulk) ClearTenderingAgency() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderingAgency()
	})
}

// SetBiddingDate sets the "bidding_date" field.
func (u *TenderProfileUpsertBulk) SetBiddingDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetBiddingDate(v)
	})
}

// UpdateBiddingDate sets the "bidding_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateBiddingDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateBiddingDate()
	})
}

// ClearBiddingDate clears the value of the "bidding_date" field.
func (u *TenderProfileUpsertBulk) ClearBiddingDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearBiddingDate()
	})
}

// SetFacadeConsultant sets the "facade_consultant" field.
func (u *TenderProfileUpsertBulk) SetFacadeConsultant(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFacadeConsultant(v)
	})
}

// UpdateFacadeConsultant sets the "facade_consultant" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateFacadeConsultant() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFacadeConsultant()
	})
}

// ClearFacadeConsultant clears the value of the "facade_consultant" field.
func (u *TenderProfileUpsertBulk) ClearFacadeConsultant() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFacadeConsultant()
	})
}

// SetDesignUnit sets the "design_unit" field.
func (u *TenderProfileUpsertBulk) SetDesignUnit(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDesignUnit(v)
	})
}

// UpdateDesignUnit sets the "design_unit" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateDesignUnit() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDesignUnit()
	})
}

// ClearDesignUnit clears the value of the "design_unit" field.
func (u *TenderProfileUpsertBulk) ClearDesignUnit() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDesignUnit()
	})
}

// SetConsultingFirm sets the "consulting_firm" field.
func (u *TenderProfileUpsertBulk) SetConsultingFirm(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetConsultingFirm(v)
	})
}

// UpdateConsultingFirm sets the "consulting_firm" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateConsultingFirm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateConsultingFirm()
	})
}

// ClearConsultingFirm clears the value of the "consulting_firm" field.
func (u *TenderProfileUpsertBulk) ClearConsultingFirm() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearConsultingFirm()
	})
}

// SetKeyProject sets the "key_project" field.
func (u *TenderProfileUpsertBulk) SetKeyProject(v bool) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetKeyProject(v)
	})
}

// UpdateKeyProject sets the "key_project" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateKeyProject() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateKeyProject()
	})
}

// SetCurrentProgress sets the "current_progress" field.
func (u *TenderProfileUpsertBulk) SetCurrentProgress(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCurrentProgress(v)
	})
}

// UpdateCurrentProgress sets the "current_progress" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCurrentProgress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCurrentProgress()
	})
}

// ClearCurrentProgress clears the value of the "current_progress" field.
func (u *TenderProfileUpsertBulk) ClearCurrentProgress() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCurrentProgress()
	})
}

// SetTenderWinCompany sets the "tender_win_company" field.
func (u *TenderProfileUpsertBulk) SetTenderWinCompany(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinCompany(v)
	})
}

// UpdateTenderWinCompany sets the "tender_win_company" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderWinCompany() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinCompany()
	})
}

// ClearTenderWinCompany clears the value of the "tender_win_company" field.
func (u *TenderProfileUpsertBulk) ClearTenderWinCompany() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinCompany()
	})
}

// SetTenderCode sets the "tender_code" field.
func (u *TenderProfileUpsertBulk) SetTenderCode(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderCode(v)
	})
}

// UpdateTenderCode sets the "tender_code" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderCode() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderCode()
	})
}

// ClearTenderCode clears the value of the "tender_code" field.
func (u *TenderProfileUpsertBulk) ClearTenderCode() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderCode()
	})
}

// SetArchitect sets the "architect" field.
func (u *TenderProfileUpsertBulk) SetArchitect(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetArchitect(v)
	})
}

// UpdateArchitect sets the "architect" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateArchitect() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateArchitect()
	})
}

// ClearArchitect clears the value of the "architect" field.
func (u *TenderProfileUpsertBulk) ClearArchitect() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearArchitect()
	})
}

// SetDeveloper sets the "developer" field.
func (u *TenderProfileUpsertBulk) SetDeveloper(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDeveloper(v)
	})
}

// UpdateDeveloper sets the "developer" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateDeveloper() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDeveloper()
	})
}

// ClearDeveloper clears the value of the "developer" field.
func (u *TenderProfileUpsertBulk) ClearDeveloper() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDeveloper()
	})
}

// SetTenderClosingDate sets the "tender_closing_date" field.
func (u *TenderProfileUpsertBulk) SetTenderClosingDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderClosingDate(v)
	})
}

// UpdateTenderClosingDate sets the "tender_closing_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderClosingDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderClosingDate()
	})
}

// ClearTenderClosingDate clears the value of the "tender_closing_date" field.
func (u *TenderProfileUpsertBulk) ClearTenderClosingDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderClosingDate()
	})
}

// SetConstructionArea sets the "construction_area" field.
func (u *TenderProfileUpsertBulk) SetConstructionArea(v string) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetConstructionArea(v)
	})
}

// UpdateConstructionArea sets the "construction_area" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateConstructionArea() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateConstructionArea()
	})
}

// ClearConstructionArea clears the value of the "construction_area" field.
func (u *TenderProfileUpsertBulk) ClearConstructionArea() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearConstructionArea()
	})
}

// SetTenderWinDate sets the "tender_win_date" field.
func (u *TenderProfileUpsertBulk) SetTenderWinDate(v time.Time) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinDate(v)
	})
}

// UpdateTenderWinDate sets the "tender_win_date" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderWinDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinDate()
	})
}

// ClearTenderWinDate clears the value of the "tender_win_date" field.
func (u *TenderProfileUpsertBulk) ClearTenderWinDate() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinDate()
	})
}

// SetTenderWinAmount sets the "tender_win_amount" field.
func (u *TenderProfileUpsertBulk) SetTenderWinAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderWinAmount(v)
	})
}

// AddTenderWinAmount adds v to the "tender_win_amount" field.
func (u *TenderProfileUpsertBulk) AddTenderWinAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddTenderWinAmount(v)
	})
}

// UpdateTenderWinAmount sets the "tender_win_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderWinAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderWinAmount()
	})
}

// ClearTenderWinAmount clears the value of the "tender_win_amount" field.
func (u *TenderProfileUpsertBulk) ClearTenderWinAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearTenderWinAmount()
	})
}

// SetLastTenderAmount sets the "last_tender_amount" field.
func (u *TenderProfileUpsertBulk) SetLastTenderAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetLastTenderAmount(v)
	})
}

// AddLastTenderAmount adds v to the "last_tender_amount" field.
func (u *TenderProfileUpsertBulk) AddLastTenderAmount(v float64) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.AddLastTenderAmount(v)
	})
}

// UpdateLastTenderAmount sets the "last_tender_amount" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateLastTenderAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateLastTenderAmount()
	})
}

// ClearLastTenderAmount clears the value of the "last_tender_amount" field.
func (u *TenderProfileUpsertBulk) ClearLastTenderAmount() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearLastTenderAmount()
	})
}

// SetTenderID sets the "tender_id" field.
func (u *TenderProfileUpsertBulk) SetTenderID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetTenderID(v)
	})
}

// UpdateTenderID sets the "tender_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateTenderID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateTenderID()
	})
}

// SetProvinceID sets the "province_id" field.
func (u *TenderProfileUpsertBulk) SetProvinceID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetProvinceID(v)
	})
}

// UpdateProvinceID sets the "province_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateProvinceID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateProvinceID()
	})
}

// ClearProvinceID clears the value of the "province_id" field.
func (u *TenderProfileUpsertBulk) ClearProvinceID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearProvinceID()
	})
}

// SetCityID sets the "city_id" field.
func (u *TenderProfileUpsertBulk) SetCityID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCityID(v)
	})
}

// UpdateCityID sets the "city_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCityID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCityID()
	})
}

// ClearCityID clears the value of the "city_id" field.
func (u *TenderProfileUpsertBulk) ClearCityID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCityID()
	})
}

// SetDistrictID sets the "district_id" field.
func (u *TenderProfileUpsertBulk) SetDistrictID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetDistrictID(v)
	})
}

// UpdateDistrictID sets the "district_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateDistrictID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateDistrictID()
	})
}

// ClearDistrictID clears the value of the "district_id" field.
func (u *TenderProfileUpsertBulk) ClearDistrictID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearDistrictID()
	})
}

// SetCustomerID sets the "customer_id" field.
func (u *TenderProfileUpsertBulk) SetCustomerID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCustomerID(v)
	})
}

// UpdateCustomerID sets the "customer_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCustomerID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCustomerID()
	})
}

// ClearCustomerID clears the value of the "customer_id" field.
func (u *TenderProfileUpsertBulk) ClearCustomerID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCustomerID()
	})
}

// SetFinderID sets the "finder_id" field.
func (u *TenderProfileUpsertBulk) SetFinderID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetFinderID(v)
	})
}

// UpdateFinderID sets the "finder_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateFinderID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateFinderID()
	})
}

// ClearFinderID clears the value of the "finder_id" field.
func (u *TenderProfileUpsertBulk) ClearFinderID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearFinderID()
	})
}

// SetCreatedByID sets the "created_by_id" field.
func (u *TenderProfileUpsertBulk) SetCreatedByID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetCreatedByID(v)
	})
}

// UpdateCreatedByID sets the "created_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateCreatedByID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateCreatedByID()
	})
}

// ClearCreatedByID clears the value of the "created_by_id" field.
func (u *TenderProfileUpsertBulk) ClearCreatedByID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearCreatedByID()
	})
}

// SetApproverID sets the "approver_id" field.
func (u *TenderProfileUpsertBulk) SetApproverID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetApproverID(v)
	})
}

// UpdateApproverID sets the "approver_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateApproverID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateApproverID()
	})
}

// ClearApproverID clears the value of the "approver_id" field.
func (u *TenderProfileUpsertBulk) ClearApproverID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearApproverID()
	})
}

// SetUpdatedByID sets the "updated_by_id" field.
func (u *TenderProfileUpsertBulk) SetUpdatedByID(v xid.ID) *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.SetUpdatedByID(v)
	})
}

// UpdateUpdatedByID sets the "updated_by_id" field to the value that was provided on create.
func (u *TenderProfileUpsertBulk) UpdateUpdatedByID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.UpdateUpdatedByID()
	})
}

// ClearUpdatedByID clears the value of the "updated_by_id" field.
func (u *TenderProfileUpsertBulk) ClearUpdatedByID() *TenderProfileUpsertBulk {
	return u.Update(func(s *TenderProfileUpsert) {
		s.ClearUpdatedByID()
	})
}

// Exec executes the query.
func (u *TenderProfileUpsertBulk) Exec(ctx context.Context) error {
	if u.create.err != nil {
		return u.create.err
	}
	for i, b := range u.create.builders {
		if len(b.conflict) != 0 {
			return fmt.Errorf("ent: OnConflict was set for builder %d. Set it on the TenderProfileCreateBulk instead", i)
		}
	}
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for TenderProfileCreateBulk.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *TenderProfileUpsertBulk) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}
