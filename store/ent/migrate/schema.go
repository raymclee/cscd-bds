// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AreasColumns holds the columns for the "areas" table.
	AreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "center", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
	}
	// AreasTable holds the schema information for the "areas" table.
	AreasTable = &schema.Table{
		Name:       "areas",
		Columns:    AreasColumns,
		PrimaryKey: []*schema.Column{AreasColumns[0]},
	}
	// CitiesColumns holds the columns for the "cities" table.
	CitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "adcode", Type: field.TypeInt, Unique: true},
		{Name: "prov_code", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "center", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
		{Name: "province_id", Type: field.TypeString},
	}
	// CitiesTable holds the schema information for the "cities" table.
	CitiesTable = &schema.Table{
		Name:       "cities",
		Columns:    CitiesColumns,
		PrimaryKey: []*schema.Column{CitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cities_provinces_cities",
				Columns:    []*schema.Column{CitiesColumns[7]},
				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompetitorsColumns holds the columns for the "competitors" table.
	CompetitorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "short_name", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
	}
	// CompetitorsTable holds the schema information for the "competitors" table.
	CompetitorsTable = &schema.Table{
		Name:       "competitors",
		Columns:    CompetitorsColumns,
		PrimaryKey: []*schema.Column{CompetitorsColumns[0]},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "adcode", Type: field.TypeInt, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "center", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "owner_type", Type: field.TypeInt, Nullable: true},
		{Name: "industry", Type: field.TypeInt, Nullable: true},
		{Name: "size", Type: field.TypeInt, Nullable: true},
		{Name: "contact_person", Type: field.TypeString, Nullable: true},
		{Name: "contact_person_position", Type: field.TypeString, Nullable: true},
		{Name: "contact_person_phone", Type: field.TypeString, Nullable: true},
		{Name: "contact_person_email", Type: field.TypeString, Nullable: true},
		{Name: "feishu_group", Type: field.TypeJSON, Nullable: true},
		{Name: "area_id", Type: field.TypeString},
		{Name: "created_by_id", Type: field.TypeString, Nullable: true},
		{Name: "sales_id", Type: field.TypeString, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customers_areas_customers",
				Columns:    []*schema.Column{CustomersColumns[12]},
				RefColumns: []*schema.Column{AreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "customers_users_created_by",
				Columns:    []*schema.Column{CustomersColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "customers_users_customers",
				Columns:    []*schema.Column{CustomersColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "customer_name_area_id",
				Unique:  true,
				Columns: []*schema.Column{CustomersColumns[3], CustomersColumns[12]},
			},
		},
	}
	// DistrictsColumns holds the columns for the "districts" table.
	DistrictsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "adcode", Type: field.TypeInt, Unique: true},
		{Name: "prov_code", Type: field.TypeInt},
		{Name: "city_code", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "center", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
		{Name: "city_id", Type: field.TypeString, Nullable: true},
		{Name: "province_id", Type: field.TypeString},
	}
	// DistrictsTable holds the schema information for the "districts" table.
	DistrictsTable = &schema.Table{
		Name:       "districts",
		Columns:    DistrictsColumns,
		PrimaryKey: []*schema.Column{DistrictsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "districts_cities_districts",
				Columns:    []*schema.Column{DistrictsColumns[8]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "districts_provinces_districts",
				Columns:    []*schema.Column{DistrictsColumns[9]},
				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OperationsColumns holds the columns for the "operations" table.
	OperationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "cje_ys", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "cje_lj", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "yye_ys", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "yye_lj", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xjl_ys", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xjl_lj", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmglf", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmsjf", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
	}
	// OperationsTable holds the schema information for the "operations" table.
	OperationsTable = &schema.Table{
		Name:       "operations",
		Columns:    OperationsColumns,
		PrimaryKey: []*schema.Column{OperationsColumns[0]},
	}
	// PlotsColumns holds the columns for the "plots" table.
	PlotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "color_hex", Type: field.TypeString},
		{Name: "geo_bounds", Type: field.TypeJSON, Nullable: true},
		{Name: "district_id", Type: field.TypeString},
	}
	// PlotsTable holds the schema information for the "plots" table.
	PlotsTable = &schema.Table{
		Name:       "plots",
		Columns:    PlotsColumns,
		PrimaryKey: []*schema.Column{PlotsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plots_districts_plots",
				Columns:    []*schema.Column{PlotsColumns[6]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PotentialTendersColumns holds the columns for the "potential_tenders" table.
	PotentialTendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "meta", Type: field.TypeJSON},
	}
	// PotentialTendersTable holds the schema information for the "potential_tenders" table.
	PotentialTendersTable = &schema.Table{
		Name:       "potential_tenders",
		Columns:    PotentialTendersColumns,
		PrimaryKey: []*schema.Column{PotentialTendersColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "manager", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "owner", Type: field.TypeString, Nullable: true},
		{Name: "jzs", Type: field.TypeString, Nullable: true},
		{Name: "mcn", Type: field.TypeString, Nullable: true},
		{Name: "consultant", Type: field.TypeString, Nullable: true},
		{Name: "areas", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "fs_date", Type: field.TypeTime, Nullable: true},
		{Name: "op_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "mntyr", Type: field.TypeString, Nullable: true},
		{Name: "con_type", Type: field.TypeString, Nullable: true},
		{Name: "is_finished", Type: field.TypeBool, Default: false},
		{Name: "cje", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "yye", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xjl", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmglf_ys", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmglf_lj", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmsjf", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "xmfzr", Type: field.TypeString, Nullable: true},
		{Name: "owner_apply_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "owner_apply_count", Type: field.TypeInt, Nullable: true},
		{Name: "owner_approve_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "owner_approve_count", Type: field.TypeInt, Nullable: true},
		{Name: "contractor_apply_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "contractor_apply_count", Type: field.TypeInt, Nullable: true},
		{Name: "contractor_approve_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "contractor_approve_count", Type: field.TypeInt, Nullable: true},
		{Name: "install_progress", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "effective_contract_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "va_apply_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "va_approve_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "accumulated_statutory_deductions", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "accumulated_non_statutory_deductions", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "accumulated_statutory_deductions_period", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "accumulated_non_statutory_deductions_period", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "total_contract_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "aluminum_plate_budget_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "aluminum_budget_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "glass_budget_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "iron_budget_percentage", Type: field.TypeFloat64, Nullable: true},
		{Name: "milestone_plan_year", Type: field.TypeInt, Nullable: true},
		{Name: "milestone_plan_month", Type: field.TypeInt, Nullable: true},
		{Name: "milestone_done_year", Type: field.TypeInt, Nullable: true},
		{Name: "milestone_done_month", Type: field.TypeInt, Nullable: true},
		{Name: "pm_area", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_year_target", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_month_target", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_year_actual", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_month_actual", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "pm_yesterday", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_inventory_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_component_total", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_component_production", Type: field.TypeFloat64, Nullable: true},
		{Name: "unit_component_installation", Type: field.TypeFloat64, Nullable: true},
		{Name: "material_loss", Type: field.TypeFloat64, Nullable: true},
		{Name: "design_rated_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "processing_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "item_stock_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "pallets_in_stock", Type: field.TypeFloat64, Nullable: true},
		{Name: "parts_in_stock", Type: field.TypeFloat64, Nullable: true},
		{Name: "quality_score", Type: field.TypeFloat64, Nullable: true},
		{Name: "quality_ranking", Type: field.TypeFloat64, Nullable: true},
		{Name: "bulk_materials_total_order_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "bulk_materials_completed_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "bulk_materials_uncompleted_quantity", Type: field.TypeFloat64, Nullable: true},
		{Name: "plan_total_count", Type: field.TypeInt, Nullable: true},
		{Name: "plan_overdue_count", Type: field.TypeInt, Nullable: true},
		{Name: "plan_overdue_month_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_bd_finish_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_bd_total_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_construction_finish_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_construction_total_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_processing_finish_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_processing_total_count", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_c_approval_ratio_numerator", Type: field.TypeInt, Nullable: true},
		{Name: "diagram_c_approval_ratio_denominator", Type: field.TypeInt, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// ProjectStaffsColumns holds the columns for the "project_staffs" table.
	ProjectStaffsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "cym", Type: field.TypeString, Unique: true},
		{Name: "installation", Type: field.TypeFloat64, Nullable: true},
		{Name: "management", Type: field.TypeFloat64, Nullable: true},
		{Name: "design", Type: field.TypeFloat64, Nullable: true},
		{Name: "project_id", Type: field.TypeString},
	}
	// ProjectStaffsTable holds the schema information for the "project_staffs" table.
	ProjectStaffsTable = &schema.Table{
		Name:       "project_staffs",
		Columns:    ProjectStaffsColumns,
		PrimaryKey: []*schema.Column{ProjectStaffsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_staffs_projects_project_staffs",
				Columns:    []*schema.Column{ProjectStaffsColumns[7]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectVosColumns holds the columns for the "project_vos" table.
	ProjectVosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "change_type", Type: field.TypeInt, Default: 0},
		{Name: "is_approved", Type: field.TypeBool, Default: false},
		{Name: "azjd", Type: field.TypeFloat64, Nullable: true},
		{Name: "yxhyze", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "apply_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "approve_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(18,2)", "postgres": "numeric(18,2)"}},
		{Name: "project_id", Type: field.TypeString},
	}
	// ProjectVosTable holds the schema information for the "project_vos" table.
	ProjectVosTable = &schema.Table{
		Name:       "project_vos",
		Columns:    ProjectVosColumns,
		PrimaryKey: []*schema.Column{ProjectVosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_vos_projects_vos",
				Columns:    []*schema.Column{ProjectVosColumns[9]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProvincesColumns holds the columns for the "provinces" table.
	ProvincesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "adcode", Type: field.TypeInt, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "center", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
		{Name: "area_id", Type: field.TypeString, Nullable: true},
		{Name: "country_id", Type: field.TypeString},
	}
	// ProvincesTable holds the schema information for the "provinces" table.
	ProvincesTable = &schema.Table{
		Name:       "provinces",
		Columns:    ProvincesColumns,
		PrimaryKey: []*schema.Column{ProvincesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "provinces_areas_provinces",
				Columns:    []*schema.Column{ProvincesColumns[6]},
				RefColumns: []*schema.Column{AreasColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "provinces_countries_provinces",
				Columns:    []*schema.Column{ProvincesColumns[7]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TendersColumns holds the columns for the "tenders" table.
	TendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "name", Type: field.TypeString},
		{Name: "estimated_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "tender_date", Type: field.TypeTime, Nullable: true},
		{Name: "classify", Type: field.TypeInt, Nullable: true, Default: 1},
		{Name: "discovery_date", Type: field.TypeTime},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "full_address", Type: field.TypeString, Nullable: true},
		{Name: "contractor", Type: field.TypeString, Nullable: true},
		{Name: "level_involved", Type: field.TypeInt, Nullable: true},
		{Name: "size_and_value_rating", Type: field.TypeInt, Nullable: true},
		{Name: "size_and_value_rating_overview", Type: field.TypeString, Nullable: true},
		{Name: "credit_and_payment_rating", Type: field.TypeInt, Nullable: true},
		{Name: "credit_and_payment_rating_overview", Type: field.TypeString, Nullable: true},
		{Name: "time_limit_rating", Type: field.TypeInt, Nullable: true},
		{Name: "time_limit_rating_overview", Type: field.TypeString, Nullable: true},
		{Name: "customer_relationship_rating", Type: field.TypeInt, Nullable: true},
		{Name: "customer_relationship_rating_overview", Type: field.TypeString, Nullable: true},
		{Name: "competitive_partnership_rating", Type: field.TypeInt, Nullable: true},
		{Name: "competitive_partnership_rating_overview", Type: field.TypeString, Nullable: true},
		{Name: "prepare_to_bid", Type: field.TypeBool, Default: false},
		{Name: "project_code", Type: field.TypeString, Nullable: true},
		{Name: "project_type", Type: field.TypeString, Nullable: true, Size: 4},
		{Name: "project_definition", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "estimated_project_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "estimated_project_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "attachements", Type: field.TypeJSON, Nullable: true},
		{Name: "geo_coordinate", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "geometry(Point,4326)"}},
		{Name: "geo_bounds", Type: field.TypeJSON, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "images", Type: field.TypeJSON, Nullable: true},
		{Name: "tender_situations", Type: field.TypeString, Nullable: true},
		{Name: "owner_situations", Type: field.TypeString, Nullable: true},
		{Name: "bidding_instructions", Type: field.TypeString, Nullable: true},
		{Name: "competitor_situations", Type: field.TypeString, Nullable: true},
		{Name: "cost_engineer", Type: field.TypeString, Nullable: true},
		{Name: "tender_form", Type: field.TypeString, Nullable: true},
		{Name: "contract_form", Type: field.TypeString, Nullable: true},
		{Name: "management_company", Type: field.TypeString, Nullable: true},
		{Name: "tendering_agency", Type: field.TypeString, Nullable: true},
		{Name: "bidding_date", Type: field.TypeTime, Nullable: true},
		{Name: "facade_consultant", Type: field.TypeString, Nullable: true},
		{Name: "design_unit", Type: field.TypeString, Nullable: true},
		{Name: "consulting_firm", Type: field.TypeString, Nullable: true},
		{Name: "key_project", Type: field.TypeBool, Default: false},
		{Name: "current_progress", Type: field.TypeString, Nullable: true},
		{Name: "tender_win_company", Type: field.TypeString, Nullable: true},
		{Name: "tender_code", Type: field.TypeString, Nullable: true},
		{Name: "architect", Type: field.TypeString, Nullable: true},
		{Name: "developer", Type: field.TypeString, Nullable: true},
		{Name: "tender_closing_date", Type: field.TypeTime, Nullable: true},
		{Name: "construction_area", Type: field.TypeString, Nullable: true},
		{Name: "tender_win_date", Type: field.TypeTime, Nullable: true},
		{Name: "tender_win_amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "last_tender_amount", Type: field.TypeFloat64, Nullable: true, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "area_id", Type: field.TypeString},
		{Name: "city_id", Type: field.TypeString, Nullable: true},
		{Name: "competitor_id", Type: field.TypeString, Nullable: true},
		{Name: "customer_id", Type: field.TypeString, Nullable: true},
		{Name: "district_id", Type: field.TypeString, Nullable: true},
		{Name: "province_id", Type: field.TypeString, Nullable: true},
		{Name: "finder_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeString, Nullable: true},
	}
	// TendersTable holds the schema information for the "tenders" table.
	TendersTable = &schema.Table{
		Name:       "tenders",
		Columns:    TendersColumns,
		PrimaryKey: []*schema.Column{TendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tenders_areas_tenders",
				Columns:    []*schema.Column{TendersColumns[59]},
				RefColumns: []*schema.Column{AreasColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "tenders_cities_tenders",
				Columns:    []*schema.Column{TendersColumns[60]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_competitors_won_tenders",
				Columns:    []*schema.Column{TendersColumns[61]},
				RefColumns: []*schema.Column{CompetitorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_customers_tenders",
				Columns:    []*schema.Column{TendersColumns[62]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_districts_tenders",
				Columns:    []*schema.Column{TendersColumns[63]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_provinces_tenders",
				Columns:    []*schema.Column{TendersColumns[64]},
				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_users_finder",
				Columns:    []*schema.Column{TendersColumns[65]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenders_users_created_by",
				Columns:    []*schema.Column{TendersColumns[66]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "open_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "disabled", Type: field.TypeBool, Default: false},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
		{Name: "is_ceo", Type: field.TypeBool, Default: false},
		{Name: "is_super_admin", Type: field.TypeBool, Default: false},
		{Name: "has_map_access", Type: field.TypeBool, Default: false},
		{Name: "has_edit_access", Type: field.TypeBool, Default: false},
		{Name: "leader_id", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_users_team_members",
				Columns:    []*schema.Column{UsersColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VisitRecordsColumns holds the columns for the "visit_records" table.
	VisitRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "visit_type", Type: field.TypeInt, Default: 1},
		{Name: "comm_people", Type: field.TypeString},
		{Name: "comm_content", Type: field.TypeString},
		{Name: "next_step", Type: field.TypeString, Nullable: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "customer_id", Type: field.TypeString},
		{Name: "tender_id", Type: field.TypeString, Nullable: true},
	}
	// VisitRecordsTable holds the schema information for the "visit_records" table.
	VisitRecordsTable = &schema.Table{
		Name:       "visit_records",
		Columns:    VisitRecordsColumns,
		PrimaryKey: []*schema.Column{VisitRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "visit_records_customers_visit_records",
				Columns:    []*schema.Column{VisitRecordsColumns[8]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "visit_records_tenders_visit_records",
				Columns:    []*schema.Column{VisitRecordsColumns[9]},
				RefColumns: []*schema.Column{TendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AreaUsersColumns holds the columns for the "area_users" table.
	AreaUsersColumns = []*schema.Column{
		{Name: "area_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// AreaUsersTable holds the schema information for the "area_users" table.
	AreaUsersTable = &schema.Table{
		Name:       "area_users",
		Columns:    AreaUsersColumns,
		PrimaryKey: []*schema.Column{AreaUsersColumns[0], AreaUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "area_users_area_id",
				Columns:    []*schema.Column{AreaUsersColumns[0]},
				RefColumns: []*schema.Column{AreasColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "area_users_user_id",
				Columns:    []*schema.Column{AreaUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProjectUsersColumns holds the columns for the "project_users" table.
	ProjectUsersColumns = []*schema.Column{
		{Name: "project_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// ProjectUsersTable holds the schema information for the "project_users" table.
	ProjectUsersTable = &schema.Table{
		Name:       "project_users",
		Columns:    ProjectUsersColumns,
		PrimaryKey: []*schema.Column{ProjectUsersColumns[0], ProjectUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "project_users_project_id",
				Columns:    []*schema.Column{ProjectUsersColumns[0]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "project_users_user_id",
				Columns:    []*schema.Column{ProjectUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TenderFollowingSalesColumns holds the columns for the "tender_following_sales" table.
	TenderFollowingSalesColumns = []*schema.Column{
		{Name: "tender_id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
	}
	// TenderFollowingSalesTable holds the schema information for the "tender_following_sales" table.
	TenderFollowingSalesTable = &schema.Table{
		Name:       "tender_following_sales",
		Columns:    TenderFollowingSalesColumns,
		PrimaryKey: []*schema.Column{TenderFollowingSalesColumns[0], TenderFollowingSalesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tender_following_sales_tender_id",
				Columns:    []*schema.Column{TenderFollowingSalesColumns[0]},
				RefColumns: []*schema.Column{TendersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tender_following_sales_user_id",
				Columns:    []*schema.Column{TenderFollowingSalesColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserVisitRecordsColumns holds the columns for the "user_visit_records" table.
	UserVisitRecordsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString},
		{Name: "visit_record_id", Type: field.TypeString},
	}
	// UserVisitRecordsTable holds the schema information for the "user_visit_records" table.
	UserVisitRecordsTable = &schema.Table{
		Name:       "user_visit_records",
		Columns:    UserVisitRecordsColumns,
		PrimaryKey: []*schema.Column{UserVisitRecordsColumns[0], UserVisitRecordsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_visit_records_user_id",
				Columns:    []*schema.Column{UserVisitRecordsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_visit_records_visit_record_id",
				Columns:    []*schema.Column{UserVisitRecordsColumns[1]},
				RefColumns: []*schema.Column{VisitRecordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AreasTable,
		CitiesTable,
		CompetitorsTable,
		CountriesTable,
		CustomersTable,
		DistrictsTable,
		OperationsTable,
		PlotsTable,
		PotentialTendersTable,
		ProjectsTable,
		ProjectStaffsTable,
		ProjectVosTable,
		ProvincesTable,
		TendersTable,
		UsersTable,
		VisitRecordsTable,
		AreaUsersTable,
		ProjectUsersTable,
		TenderFollowingSalesTable,
		UserVisitRecordsTable,
	}
)

func init() {
	CitiesTable.ForeignKeys[0].RefTable = ProvincesTable
	CustomersTable.ForeignKeys[0].RefTable = AreasTable
	CustomersTable.ForeignKeys[1].RefTable = UsersTable
	CustomersTable.ForeignKeys[2].RefTable = UsersTable
	DistrictsTable.ForeignKeys[0].RefTable = CitiesTable
	DistrictsTable.ForeignKeys[1].RefTable = ProvincesTable
	PlotsTable.ForeignKeys[0].RefTable = DistrictsTable
	ProjectStaffsTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectVosTable.ForeignKeys[0].RefTable = ProjectsTable
	ProvincesTable.ForeignKeys[0].RefTable = AreasTable
	ProvincesTable.ForeignKeys[1].RefTable = CountriesTable
	TendersTable.ForeignKeys[0].RefTable = AreasTable
	TendersTable.ForeignKeys[1].RefTable = CitiesTable
	TendersTable.ForeignKeys[2].RefTable = CompetitorsTable
	TendersTable.ForeignKeys[3].RefTable = CustomersTable
	TendersTable.ForeignKeys[4].RefTable = DistrictsTable
	TendersTable.ForeignKeys[5].RefTable = ProvincesTable
	TendersTable.ForeignKeys[6].RefTable = UsersTable
	TendersTable.ForeignKeys[7].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = UsersTable
	VisitRecordsTable.ForeignKeys[0].RefTable = CustomersTable
	VisitRecordsTable.ForeignKeys[1].RefTable = TendersTable
	AreaUsersTable.ForeignKeys[0].RefTable = AreasTable
	AreaUsersTable.ForeignKeys[1].RefTable = UsersTable
	ProjectUsersTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectUsersTable.ForeignKeys[1].RefTable = UsersTable
	TenderFollowingSalesTable.ForeignKeys[0].RefTable = TendersTable
	TenderFollowingSalesTable.ForeignKeys[1].RefTable = UsersTable
	UserVisitRecordsTable.ForeignKeys[0].RefTable = UsersTable
	UserVisitRecordsTable.ForeignKeys[1].RefTable = VisitRecordsTable
}
