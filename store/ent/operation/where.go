// Code generated by ent, DO NOT EDIT.

package operation

import (
	"cscd-bds/store/ent/predicate"
	"cscd-bds/store/ent/schema/xid"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id xid.ID) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldUpdatedAt, v))
}

// CjeYs applies equality check predicate on the "cje_ys" field. It's identical to CjeYsEQ.
func CjeYs(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCjeYs, v))
}

// CjeLj applies equality check predicate on the "cje_lj" field. It's identical to CjeLjEQ.
func CjeLj(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCjeLj, v))
}

// YyeYs applies equality check predicate on the "yye_ys" field. It's identical to YyeYsEQ.
func YyeYs(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldYyeYs, v))
}

// YyeLj applies equality check predicate on the "yye_lj" field. It's identical to YyeLjEQ.
func YyeLj(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldYyeLj, v))
}

// XjlYs applies equality check predicate on the "xjl_ys" field. It's identical to XjlYsEQ.
func XjlYs(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXjlYs, v))
}

// XjlLj applies equality check predicate on the "xjl_lj" field. It's identical to XjlLjEQ.
func XjlLj(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXjlLj, v))
}

// Xmglf applies equality check predicate on the "xmglf" field. It's identical to XmglfEQ.
func Xmglf(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXmglf, v))
}

// Xmsjf applies equality check predicate on the "xmsjf" field. It's identical to XmsjfEQ.
func Xmsjf(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXmsjf, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldUpdatedAt, v))
}

// CjeYsEQ applies the EQ predicate on the "cje_ys" field.
func CjeYsEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCjeYs, v))
}

// CjeYsNEQ applies the NEQ predicate on the "cje_ys" field.
func CjeYsNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldCjeYs, v))
}

// CjeYsIn applies the In predicate on the "cje_ys" field.
func CjeYsIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldCjeYs, vs...))
}

// CjeYsNotIn applies the NotIn predicate on the "cje_ys" field.
func CjeYsNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldCjeYs, vs...))
}

// CjeYsGT applies the GT predicate on the "cje_ys" field.
func CjeYsGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldCjeYs, v))
}

// CjeYsGTE applies the GTE predicate on the "cje_ys" field.
func CjeYsGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldCjeYs, v))
}

// CjeYsLT applies the LT predicate on the "cje_ys" field.
func CjeYsLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldCjeYs, v))
}

// CjeYsLTE applies the LTE predicate on the "cje_ys" field.
func CjeYsLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldCjeYs, v))
}

// CjeYsIsNil applies the IsNil predicate on the "cje_ys" field.
func CjeYsIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldCjeYs))
}

// CjeYsNotNil applies the NotNil predicate on the "cje_ys" field.
func CjeYsNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldCjeYs))
}

// CjeLjEQ applies the EQ predicate on the "cje_lj" field.
func CjeLjEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldCjeLj, v))
}

// CjeLjNEQ applies the NEQ predicate on the "cje_lj" field.
func CjeLjNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldCjeLj, v))
}

// CjeLjIn applies the In predicate on the "cje_lj" field.
func CjeLjIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldCjeLj, vs...))
}

// CjeLjNotIn applies the NotIn predicate on the "cje_lj" field.
func CjeLjNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldCjeLj, vs...))
}

// CjeLjGT applies the GT predicate on the "cje_lj" field.
func CjeLjGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldCjeLj, v))
}

// CjeLjGTE applies the GTE predicate on the "cje_lj" field.
func CjeLjGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldCjeLj, v))
}

// CjeLjLT applies the LT predicate on the "cje_lj" field.
func CjeLjLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldCjeLj, v))
}

// CjeLjLTE applies the LTE predicate on the "cje_lj" field.
func CjeLjLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldCjeLj, v))
}

// CjeLjIsNil applies the IsNil predicate on the "cje_lj" field.
func CjeLjIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldCjeLj))
}

// CjeLjNotNil applies the NotNil predicate on the "cje_lj" field.
func CjeLjNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldCjeLj))
}

// YyeYsEQ applies the EQ predicate on the "yye_ys" field.
func YyeYsEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldYyeYs, v))
}

// YyeYsNEQ applies the NEQ predicate on the "yye_ys" field.
func YyeYsNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldYyeYs, v))
}

// YyeYsIn applies the In predicate on the "yye_ys" field.
func YyeYsIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldYyeYs, vs...))
}

// YyeYsNotIn applies the NotIn predicate on the "yye_ys" field.
func YyeYsNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldYyeYs, vs...))
}

// YyeYsGT applies the GT predicate on the "yye_ys" field.
func YyeYsGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldYyeYs, v))
}

// YyeYsGTE applies the GTE predicate on the "yye_ys" field.
func YyeYsGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldYyeYs, v))
}

// YyeYsLT applies the LT predicate on the "yye_ys" field.
func YyeYsLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldYyeYs, v))
}

// YyeYsLTE applies the LTE predicate on the "yye_ys" field.
func YyeYsLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldYyeYs, v))
}

// YyeYsIsNil applies the IsNil predicate on the "yye_ys" field.
func YyeYsIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldYyeYs))
}

// YyeYsNotNil applies the NotNil predicate on the "yye_ys" field.
func YyeYsNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldYyeYs))
}

// YyeLjEQ applies the EQ predicate on the "yye_lj" field.
func YyeLjEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldYyeLj, v))
}

// YyeLjNEQ applies the NEQ predicate on the "yye_lj" field.
func YyeLjNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldYyeLj, v))
}

// YyeLjIn applies the In predicate on the "yye_lj" field.
func YyeLjIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldYyeLj, vs...))
}

// YyeLjNotIn applies the NotIn predicate on the "yye_lj" field.
func YyeLjNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldYyeLj, vs...))
}

// YyeLjGT applies the GT predicate on the "yye_lj" field.
func YyeLjGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldYyeLj, v))
}

// YyeLjGTE applies the GTE predicate on the "yye_lj" field.
func YyeLjGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldYyeLj, v))
}

// YyeLjLT applies the LT predicate on the "yye_lj" field.
func YyeLjLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldYyeLj, v))
}

// YyeLjLTE applies the LTE predicate on the "yye_lj" field.
func YyeLjLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldYyeLj, v))
}

// YyeLjIsNil applies the IsNil predicate on the "yye_lj" field.
func YyeLjIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldYyeLj))
}

// YyeLjNotNil applies the NotNil predicate on the "yye_lj" field.
func YyeLjNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldYyeLj))
}

// XjlYsEQ applies the EQ predicate on the "xjl_ys" field.
func XjlYsEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXjlYs, v))
}

// XjlYsNEQ applies the NEQ predicate on the "xjl_ys" field.
func XjlYsNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldXjlYs, v))
}

// XjlYsIn applies the In predicate on the "xjl_ys" field.
func XjlYsIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldXjlYs, vs...))
}

// XjlYsNotIn applies the NotIn predicate on the "xjl_ys" field.
func XjlYsNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldXjlYs, vs...))
}

// XjlYsGT applies the GT predicate on the "xjl_ys" field.
func XjlYsGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldXjlYs, v))
}

// XjlYsGTE applies the GTE predicate on the "xjl_ys" field.
func XjlYsGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldXjlYs, v))
}

// XjlYsLT applies the LT predicate on the "xjl_ys" field.
func XjlYsLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldXjlYs, v))
}

// XjlYsLTE applies the LTE predicate on the "xjl_ys" field.
func XjlYsLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldXjlYs, v))
}

// XjlYsIsNil applies the IsNil predicate on the "xjl_ys" field.
func XjlYsIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldXjlYs))
}

// XjlYsNotNil applies the NotNil predicate on the "xjl_ys" field.
func XjlYsNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldXjlYs))
}

// XjlLjEQ applies the EQ predicate on the "xjl_lj" field.
func XjlLjEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXjlLj, v))
}

// XjlLjNEQ applies the NEQ predicate on the "xjl_lj" field.
func XjlLjNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldXjlLj, v))
}

// XjlLjIn applies the In predicate on the "xjl_lj" field.
func XjlLjIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldXjlLj, vs...))
}

// XjlLjNotIn applies the NotIn predicate on the "xjl_lj" field.
func XjlLjNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldXjlLj, vs...))
}

// XjlLjGT applies the GT predicate on the "xjl_lj" field.
func XjlLjGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldXjlLj, v))
}

// XjlLjGTE applies the GTE predicate on the "xjl_lj" field.
func XjlLjGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldXjlLj, v))
}

// XjlLjLT applies the LT predicate on the "xjl_lj" field.
func XjlLjLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldXjlLj, v))
}

// XjlLjLTE applies the LTE predicate on the "xjl_lj" field.
func XjlLjLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldXjlLj, v))
}

// XjlLjIsNil applies the IsNil predicate on the "xjl_lj" field.
func XjlLjIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldXjlLj))
}

// XjlLjNotNil applies the NotNil predicate on the "xjl_lj" field.
func XjlLjNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldXjlLj))
}

// XmglfEQ applies the EQ predicate on the "xmglf" field.
func XmglfEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXmglf, v))
}

// XmglfNEQ applies the NEQ predicate on the "xmglf" field.
func XmglfNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldXmglf, v))
}

// XmglfIn applies the In predicate on the "xmglf" field.
func XmglfIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldXmglf, vs...))
}

// XmglfNotIn applies the NotIn predicate on the "xmglf" field.
func XmglfNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldXmglf, vs...))
}

// XmglfGT applies the GT predicate on the "xmglf" field.
func XmglfGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldXmglf, v))
}

// XmglfGTE applies the GTE predicate on the "xmglf" field.
func XmglfGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldXmglf, v))
}

// XmglfLT applies the LT predicate on the "xmglf" field.
func XmglfLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldXmglf, v))
}

// XmglfLTE applies the LTE predicate on the "xmglf" field.
func XmglfLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldXmglf, v))
}

// XmglfIsNil applies the IsNil predicate on the "xmglf" field.
func XmglfIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldXmglf))
}

// XmglfNotNil applies the NotNil predicate on the "xmglf" field.
func XmglfNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldXmglf))
}

// XmsjfEQ applies the EQ predicate on the "xmsjf" field.
func XmsjfEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldEQ(FieldXmsjf, v))
}

// XmsjfNEQ applies the NEQ predicate on the "xmsjf" field.
func XmsjfNEQ(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldNEQ(FieldXmsjf, v))
}

// XmsjfIn applies the In predicate on the "xmsjf" field.
func XmsjfIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldIn(FieldXmsjf, vs...))
}

// XmsjfNotIn applies the NotIn predicate on the "xmsjf" field.
func XmsjfNotIn(vs ...float64) predicate.Operation {
	return predicate.Operation(sql.FieldNotIn(FieldXmsjf, vs...))
}

// XmsjfGT applies the GT predicate on the "xmsjf" field.
func XmsjfGT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGT(FieldXmsjf, v))
}

// XmsjfGTE applies the GTE predicate on the "xmsjf" field.
func XmsjfGTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldGTE(FieldXmsjf, v))
}

// XmsjfLT applies the LT predicate on the "xmsjf" field.
func XmsjfLT(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLT(FieldXmsjf, v))
}

// XmsjfLTE applies the LTE predicate on the "xmsjf" field.
func XmsjfLTE(v float64) predicate.Operation {
	return predicate.Operation(sql.FieldLTE(FieldXmsjf, v))
}

// XmsjfIsNil applies the IsNil predicate on the "xmsjf" field.
func XmsjfIsNil() predicate.Operation {
	return predicate.Operation(sql.FieldIsNull(FieldXmsjf))
}

// XmsjfNotNil applies the NotNil predicate on the "xmsjf" field.
func XmsjfNotNil() predicate.Operation {
	return predicate.Operation(sql.FieldNotNull(FieldXmsjf))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Operation) predicate.Operation {
	return predicate.Operation(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Operation) predicate.Operation {
	return predicate.Operation(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Operation) predicate.Operation {
	return predicate.Operation(sql.NotPredicates(p))
}
