{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/opportunities": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "List Opportunities",
        "description": "List Opportunities.",
        "operationId": "listOpportunity",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Opportunity list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OpportunityList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Create a new Opportunity",
        "description": "Creates a new Opportunity and persists it to storage.",
        "operationId": "createOpportunity",
        "requestBody": {
          "description": "Opportunity to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registration_number": {
                    "type": "string"
                  }
                },
                "required": [
                  "registration_number"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Opportunity created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/opportunities/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Find a Opportunity by ID",
        "description": "Finds the Opportunity with the requested ID and returns it.",
        "operationId": "readOpportunity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Opportunity",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Deletes a Opportunity by ID",
        "description": "Deletes the Opportunity with the requested ID.",
        "operationId": "deleteOpportunity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Opportunity",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Opportunity with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Updates a Opportunity",
        "description": "Updates a Opportunity and persists changes to storage.",
        "operationId": "updateOpportunity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Opportunity",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Opportunity properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registration_number": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Opportunity updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Opportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registration_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "registration_number"
        ]
      },
      "OpportunityCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registration_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "registration_number"
        ]
      },
      "OpportunityList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registration_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "registration_number"
        ]
      },
      "OpportunityRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registration_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "registration_number"
        ]
      },
      "OpportunityUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registration_number": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "registration_number"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}