// Code generated by ent, DO NOT EDIT.

package ent

import (
	"cscd-bds/store/ent/area"
	"cscd-bds/store/ent/city"
	"cscd-bds/store/ent/country"
	"cscd-bds/store/ent/customer"
	"cscd-bds/store/ent/district"
	"cscd-bds/store/ent/province"
	"cscd-bds/store/ent/schema"
	"cscd-bds/store/ent/schema/xid"
	"cscd-bds/store/ent/tender"
	"cscd-bds/store/ent/user"
	"cscd-bds/store/ent/visitrecord"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	areaMixin := schema.Area{}.Mixin()
	areaMixinFields0 := areaMixin[0].Fields()
	_ = areaMixinFields0
	areaMixinFields1 := areaMixin[1].Fields()
	_ = areaMixinFields1
	areaFields := schema.Area{}.Fields()
	_ = areaFields
	// areaDescCreatedAt is the schema descriptor for created_at field.
	areaDescCreatedAt := areaMixinFields1[0].Descriptor()
	// area.DefaultCreatedAt holds the default value on creation for the created_at field.
	area.DefaultCreatedAt = areaDescCreatedAt.Default.(func() time.Time)
	// areaDescUpdatedAt is the schema descriptor for updated_at field.
	areaDescUpdatedAt := areaMixinFields1[1].Descriptor()
	// area.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	area.DefaultUpdatedAt = areaDescUpdatedAt.Default.(func() time.Time)
	// area.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	area.UpdateDefaultUpdatedAt = areaDescUpdatedAt.UpdateDefault.(func() time.Time)
	// areaDescID is the schema descriptor for id field.
	areaDescID := areaMixinFields0[0].Descriptor()
	// area.DefaultID holds the default value on creation for the id field.
	area.DefaultID = areaDescID.Default.(func() xid.ID)
	cityMixin := schema.City{}.Mixin()
	cityMixinFields0 := cityMixin[0].Fields()
	_ = cityMixinFields0
	cityMixinFields1 := cityMixin[1].Fields()
	_ = cityMixinFields1
	cityFields := schema.City{}.Fields()
	_ = cityFields
	// cityDescCreatedAt is the schema descriptor for created_at field.
	cityDescCreatedAt := cityMixinFields1[0].Descriptor()
	// city.DefaultCreatedAt holds the default value on creation for the created_at field.
	city.DefaultCreatedAt = cityDescCreatedAt.Default.(func() time.Time)
	// cityDescUpdatedAt is the schema descriptor for updated_at field.
	cityDescUpdatedAt := cityMixinFields1[1].Descriptor()
	// city.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	city.DefaultUpdatedAt = cityDescUpdatedAt.Default.(func() time.Time)
	// city.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	city.UpdateDefaultUpdatedAt = cityDescUpdatedAt.UpdateDefault.(func() time.Time)
	// cityDescID is the schema descriptor for id field.
	cityDescID := cityMixinFields0[0].Descriptor()
	// city.DefaultID holds the default value on creation for the id field.
	city.DefaultID = cityDescID.Default.(func() xid.ID)
	countryMixin := schema.Country{}.Mixin()
	countryMixinFields0 := countryMixin[0].Fields()
	_ = countryMixinFields0
	countryMixinFields1 := countryMixin[1].Fields()
	_ = countryMixinFields1
	countryFields := schema.Country{}.Fields()
	_ = countryFields
	// countryDescCreatedAt is the schema descriptor for created_at field.
	countryDescCreatedAt := countryMixinFields1[0].Descriptor()
	// country.DefaultCreatedAt holds the default value on creation for the created_at field.
	country.DefaultCreatedAt = countryDescCreatedAt.Default.(func() time.Time)
	// countryDescUpdatedAt is the schema descriptor for updated_at field.
	countryDescUpdatedAt := countryMixinFields1[1].Descriptor()
	// country.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	country.DefaultUpdatedAt = countryDescUpdatedAt.Default.(func() time.Time)
	// country.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	country.UpdateDefaultUpdatedAt = countryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// countryDescID is the schema descriptor for id field.
	countryDescID := countryMixinFields0[0].Descriptor()
	// country.DefaultID holds the default value on creation for the id field.
	country.DefaultID = countryDescID.Default.(func() xid.ID)
	customerMixin := schema.Customer{}.Mixin()
	customerMixinFields0 := customerMixin[0].Fields()
	_ = customerMixinFields0
	customerMixinFields1 := customerMixin[1].Fields()
	_ = customerMixinFields1
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescCreatedAt is the schema descriptor for created_at field.
	customerDescCreatedAt := customerMixinFields1[0].Descriptor()
	// customer.DefaultCreatedAt holds the default value on creation for the created_at field.
	customer.DefaultCreatedAt = customerDescCreatedAt.Default.(func() time.Time)
	// customerDescUpdatedAt is the schema descriptor for updated_at field.
	customerDescUpdatedAt := customerMixinFields1[1].Descriptor()
	// customer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	customer.DefaultUpdatedAt = customerDescUpdatedAt.Default.(func() time.Time)
	// customer.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	customer.UpdateDefaultUpdatedAt = customerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// customerDescID is the schema descriptor for id field.
	customerDescID := customerMixinFields0[0].Descriptor()
	// customer.DefaultID holds the default value on creation for the id field.
	customer.DefaultID = customerDescID.Default.(func() xid.ID)
	districtMixin := schema.District{}.Mixin()
	districtMixinFields0 := districtMixin[0].Fields()
	_ = districtMixinFields0
	districtMixinFields1 := districtMixin[1].Fields()
	_ = districtMixinFields1
	districtFields := schema.District{}.Fields()
	_ = districtFields
	// districtDescCreatedAt is the schema descriptor for created_at field.
	districtDescCreatedAt := districtMixinFields1[0].Descriptor()
	// district.DefaultCreatedAt holds the default value on creation for the created_at field.
	district.DefaultCreatedAt = districtDescCreatedAt.Default.(func() time.Time)
	// districtDescUpdatedAt is the schema descriptor for updated_at field.
	districtDescUpdatedAt := districtMixinFields1[1].Descriptor()
	// district.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	district.DefaultUpdatedAt = districtDescUpdatedAt.Default.(func() time.Time)
	// district.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	district.UpdateDefaultUpdatedAt = districtDescUpdatedAt.UpdateDefault.(func() time.Time)
	// districtDescID is the schema descriptor for id field.
	districtDescID := districtMixinFields0[0].Descriptor()
	// district.DefaultID holds the default value on creation for the id field.
	district.DefaultID = districtDescID.Default.(func() xid.ID)
	provinceMixin := schema.Province{}.Mixin()
	provinceMixinFields0 := provinceMixin[0].Fields()
	_ = provinceMixinFields0
	provinceMixinFields1 := provinceMixin[1].Fields()
	_ = provinceMixinFields1
	provinceFields := schema.Province{}.Fields()
	_ = provinceFields
	// provinceDescCreatedAt is the schema descriptor for created_at field.
	provinceDescCreatedAt := provinceMixinFields1[0].Descriptor()
	// province.DefaultCreatedAt holds the default value on creation for the created_at field.
	province.DefaultCreatedAt = provinceDescCreatedAt.Default.(func() time.Time)
	// provinceDescUpdatedAt is the schema descriptor for updated_at field.
	provinceDescUpdatedAt := provinceMixinFields1[1].Descriptor()
	// province.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	province.DefaultUpdatedAt = provinceDescUpdatedAt.Default.(func() time.Time)
	// province.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	province.UpdateDefaultUpdatedAt = provinceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// provinceDescID is the schema descriptor for id field.
	provinceDescID := provinceMixinFields0[0].Descriptor()
	// province.DefaultID holds the default value on creation for the id field.
	province.DefaultID = provinceDescID.Default.(func() xid.ID)
	tenderMixin := schema.Tender{}.Mixin()
	tenderMixinFields0 := tenderMixin[0].Fields()
	_ = tenderMixinFields0
	tenderMixinFields1 := tenderMixin[1].Fields()
	_ = tenderMixinFields1
	tenderFields := schema.Tender{}.Fields()
	_ = tenderFields
	// tenderDescCreatedAt is the schema descriptor for created_at field.
	tenderDescCreatedAt := tenderMixinFields1[0].Descriptor()
	// tender.DefaultCreatedAt holds the default value on creation for the created_at field.
	tender.DefaultCreatedAt = tenderDescCreatedAt.Default.(func() time.Time)
	// tenderDescUpdatedAt is the schema descriptor for updated_at field.
	tenderDescUpdatedAt := tenderMixinFields1[1].Descriptor()
	// tender.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tender.DefaultUpdatedAt = tenderDescUpdatedAt.Default.(func() time.Time)
	// tender.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tender.UpdateDefaultUpdatedAt = tenderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tenderDescStatus is the schema descriptor for status field.
	tenderDescStatus := tenderFields[1].Descriptor()
	// tender.DefaultStatus holds the default value on creation for the status field.
	tender.DefaultStatus = tenderDescStatus.Default.(int)
	// tenderDescSizeAndValueRating is the schema descriptor for size_and_value_rating field.
	tenderDescSizeAndValueRating := tenderFields[9].Descriptor()
	// tender.SizeAndValueRatingValidator is a validator for the "size_and_value_rating" field. It is called by the builders before save.
	tender.SizeAndValueRatingValidator = func() func(int) error {
		validators := tenderDescSizeAndValueRating.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(size_and_value_rating int) error {
			for _, fn := range fns {
				if err := fn(size_and_value_rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tenderDescCreditAndPaymentRating is the schema descriptor for credit_and_payment_rating field.
	tenderDescCreditAndPaymentRating := tenderFields[11].Descriptor()
	// tender.CreditAndPaymentRatingValidator is a validator for the "credit_and_payment_rating" field. It is called by the builders before save.
	tender.CreditAndPaymentRatingValidator = func() func(int) error {
		validators := tenderDescCreditAndPaymentRating.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(credit_and_payment_rating int) error {
			for _, fn := range fns {
				if err := fn(credit_and_payment_rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tenderDescTimeLimitRating is the schema descriptor for time_limit_rating field.
	tenderDescTimeLimitRating := tenderFields[13].Descriptor()
	// tender.TimeLimitRatingValidator is a validator for the "time_limit_rating" field. It is called by the builders before save.
	tender.TimeLimitRatingValidator = func() func(int) error {
		validators := tenderDescTimeLimitRating.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(time_limit_rating int) error {
			for _, fn := range fns {
				if err := fn(time_limit_rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tenderDescCustomerRelationshipRating is the schema descriptor for customer_relationship_rating field.
	tenderDescCustomerRelationshipRating := tenderFields[15].Descriptor()
	// tender.CustomerRelationshipRatingValidator is a validator for the "customer_relationship_rating" field. It is called by the builders before save.
	tender.CustomerRelationshipRatingValidator = func() func(int) error {
		validators := tenderDescCustomerRelationshipRating.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(customer_relationship_rating int) error {
			for _, fn := range fns {
				if err := fn(customer_relationship_rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tenderDescCompetitivePartnershipRating is the schema descriptor for competitive_partnership_rating field.
	tenderDescCompetitivePartnershipRating := tenderFields[17].Descriptor()
	// tender.CompetitivePartnershipRatingValidator is a validator for the "competitive_partnership_rating" field. It is called by the builders before save.
	tender.CompetitivePartnershipRatingValidator = func() func(int) error {
		validators := tenderDescCompetitivePartnershipRating.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(competitive_partnership_rating int) error {
			for _, fn := range fns {
				if err := fn(competitive_partnership_rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tenderDescPrepareToBid is the schema descriptor for prepare_to_bid field.
	tenderDescPrepareToBid := tenderFields[19].Descriptor()
	// tender.DefaultPrepareToBid holds the default value on creation for the prepare_to_bid field.
	tender.DefaultPrepareToBid = tenderDescPrepareToBid.Default.(bool)
	// tenderDescKeyProject is the schema descriptor for key_project field.
	tenderDescKeyProject := tenderFields[42].Descriptor()
	// tender.DefaultKeyProject holds the default value on creation for the key_project field.
	tender.DefaultKeyProject = tenderDescKeyProject.Default.(bool)
	// tenderDescID is the schema descriptor for id field.
	tenderDescID := tenderMixinFields0[0].Descriptor()
	// tender.DefaultID holds the default value on creation for the id field.
	tender.DefaultID = tenderDescID.Default.(func() xid.ID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields1[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields1[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescDisabled is the schema descriptor for disabled field.
	userDescDisabled := userFields[5].Descriptor()
	// user.DefaultDisabled holds the default value on creation for the disabled field.
	user.DefaultDisabled = userDescDisabled.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() xid.ID)
	visitrecordMixin := schema.VisitRecord{}.Mixin()
	visitrecordMixinFields0 := visitrecordMixin[0].Fields()
	_ = visitrecordMixinFields0
	visitrecordMixinFields1 := visitrecordMixin[1].Fields()
	_ = visitrecordMixinFields1
	visitrecordFields := schema.VisitRecord{}.Fields()
	_ = visitrecordFields
	// visitrecordDescCreatedAt is the schema descriptor for created_at field.
	visitrecordDescCreatedAt := visitrecordMixinFields1[0].Descriptor()
	// visitrecord.DefaultCreatedAt holds the default value on creation for the created_at field.
	visitrecord.DefaultCreatedAt = visitrecordDescCreatedAt.Default.(func() time.Time)
	// visitrecordDescUpdatedAt is the schema descriptor for updated_at field.
	visitrecordDescUpdatedAt := visitrecordMixinFields1[1].Descriptor()
	// visitrecord.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	visitrecord.DefaultUpdatedAt = visitrecordDescUpdatedAt.Default.(func() time.Time)
	// visitrecord.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	visitrecord.UpdateDefaultUpdatedAt = visitrecordDescUpdatedAt.UpdateDefault.(func() time.Time)
	// visitrecordDescVisitType is the schema descriptor for visit_type field.
	visitrecordDescVisitType := visitrecordFields[0].Descriptor()
	// visitrecord.DefaultVisitType holds the default value on creation for the visit_type field.
	visitrecord.DefaultVisitType = visitrecordDescVisitType.Default.(int)
	// visitrecordDescCommPeople is the schema descriptor for comm_people field.
	visitrecordDescCommPeople := visitrecordFields[1].Descriptor()
	// visitrecord.CommPeopleValidator is a validator for the "comm_people" field. It is called by the builders before save.
	visitrecord.CommPeopleValidator = visitrecordDescCommPeople.Validators[0].(func(string) error)
	// visitrecordDescCommContent is the schema descriptor for comm_content field.
	visitrecordDescCommContent := visitrecordFields[2].Descriptor()
	// visitrecord.CommContentValidator is a validator for the "comm_content" field. It is called by the builders before save.
	visitrecord.CommContentValidator = visitrecordDescCommContent.Validators[0].(func(string) error)
	// visitrecordDescID is the schema descriptor for id field.
	visitrecordDescID := visitrecordMixinFields0[0].Descriptor()
	// visitrecord.DefaultID holds the default value on creation for the id field.
	visitrecord.DefaultID = visitrecordDescID.Default.(func() xid.ID)
}
